diff --git a/.vs/Migdalor_Final_Project/v17/.suo b/.vs/Migdalor_Final_Project/v17/.suo
index c435807..3f4b12b 100644
Binary files a/.vs/Migdalor_Final_Project/v17/.suo and b/.vs/Migdalor_Final_Project/v17/.suo differ
diff --git a/.vs/Migdalor_Final_Project/v17/workspaceFileList.bin b/.vs/Migdalor_Final_Project/v17/workspaceFileList.bin
index 0a6fbb1..a994def 100644
Binary files a/.vs/Migdalor_Final_Project/v17/workspaceFileList.bin and b/.vs/Migdalor_Final_Project/v17/workspaceFileList.bin differ
diff --git a/.vs/VSWorkspaceState.json b/.vs/VSWorkspaceState.json
index 5b43139..123eeae 100644
--- a/.vs/VSWorkspaceState.json
+++ b/.vs/VSWorkspaceState.json
@@ -7,6 +7,6 @@
     "\\Migdalor_Backend\\WebApplication1",
     "\\Migdalor_Backend\\WebApplication1\\Controllers"
   ],
-  "SelectedNode": "\\Migdalor_Backend\\WebApplication1\\WebApplication1.csproj",
+  "SelectedNode": "\\Migdalor_Backend\\Migdalor_Backend.sln",
   "PreviewInSolutionExplorer": false
 }
\ No newline at end of file
diff --git a/.vs/slnx.sqlite b/.vs/slnx.sqlite
index 852b0c9..4c2282f 100644
Binary files a/.vs/slnx.sqlite and b/.vs/slnx.sqlite differ
diff --git a/MigdalorDataBaseCreateScript.sql b/MigdalorDataBaseCreateScript.sql
new file mode 100644
index 0000000..341bc79
--- /dev/null
+++ b/MigdalorDataBaseCreateScript.sql
@@ -0,0 +1,119 @@
+USE [master]
+GO
+
+/****** Object:  Database [migdalorDB]    Script Date: 9/2/2024 7:33:05 PM ******/
+CREATE DATABASE [migdalorDB]
+ CONTAINMENT = NONE
+ ON  PRIMARY 
+( NAME = N'migdalorDB', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\migdalorDB.mdf' , SIZE = 73728KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
+ LOG ON 
+( NAME = N'migdalorDB_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL16.SQLEXPRESS\MSSQL\DATA\migdalorDB_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
+ WITH CATALOG_COLLATION = DATABASE_DEFAULT, LEDGER = OFF
+GO
+
+IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
+begin
+EXEC [migdalorDB].[dbo].[sp_fulltext_database] @action = 'enable'
+end
+GO
+
+ALTER DATABASE [migdalorDB] SET ANSI_NULL_DEFAULT OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET ANSI_NULLS OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET ANSI_PADDING OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET ANSI_WARNINGS OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET ARITHABORT OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET AUTO_CLOSE OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET AUTO_SHRINK OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET AUTO_UPDATE_STATISTICS ON 
+GO
+
+ALTER DATABASE [migdalorDB] SET CURSOR_CLOSE_ON_COMMIT OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET CURSOR_DEFAULT  GLOBAL 
+GO
+
+ALTER DATABASE [migdalorDB] SET CONCAT_NULL_YIELDS_NULL OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET NUMERIC_ROUNDABORT OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET QUOTED_IDENTIFIER OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET RECURSIVE_TRIGGERS OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET  DISABLE_BROKER 
+GO
+
+ALTER DATABASE [migdalorDB] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET DATE_CORRELATION_OPTIMIZATION OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET TRUSTWORTHY OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET ALLOW_SNAPSHOT_ISOLATION OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET PARAMETERIZATION SIMPLE 
+GO
+
+ALTER DATABASE [migdalorDB] SET READ_COMMITTED_SNAPSHOT OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET HONOR_BROKER_PRIORITY OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET RECOVERY SIMPLE 
+GO
+
+ALTER DATABASE [migdalorDB] SET  MULTI_USER 
+GO
+
+ALTER DATABASE [migdalorDB] SET PAGE_VERIFY CHECKSUM  
+GO
+
+ALTER DATABASE [migdalorDB] SET DB_CHAINING OFF 
+GO
+
+ALTER DATABASE [migdalorDB] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
+GO
+
+ALTER DATABASE [migdalorDB] SET TARGET_RECOVERY_TIME = 60 SECONDS 
+GO
+
+ALTER DATABASE [migdalorDB] SET DELAYED_DURABILITY = DISABLED 
+GO
+
+ALTER DATABASE [migdalorDB] SET ACCELERATED_DATABASE_RECOVERY = OFF  
+GO
+
+ALTER DATABASE [migdalorDB] SET QUERY_STORE = ON
+GO
+
+ALTER DATABASE [migdalorDB] SET QUERY_STORE (OPERATION_MODE = READ_WRITE, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_STORAGE_SIZE_MB = 1000, QUERY_CAPTURE_MODE = AUTO, SIZE_BASED_CLEANUP_MODE = AUTO, MAX_PLANS_PER_QUERY = 200, WAIT_STATS_CAPTURE_MODE = ON)
+GO
+
+ALTER DATABASE [migdalorDB] SET  READ_WRITE 
+GO
+
+
diff --git a/Migdalor_Backend/.vs/Migdalor_Backend/DesignTimeBuild/.dtbcache.v2 b/Migdalor_Backend/.vs/Migdalor_Backend/DesignTimeBuild/.dtbcache.v2
index 006eba3..02cc74f 100644
Binary files a/Migdalor_Backend/.vs/Migdalor_Backend/DesignTimeBuild/.dtbcache.v2 and b/Migdalor_Backend/.vs/Migdalor_Backend/DesignTimeBuild/.dtbcache.v2 differ
diff --git a/Migdalor_Backend/.vs/Migdalor_Backend/v17/.futdcache.v1 b/Migdalor_Backend/.vs/Migdalor_Backend/v17/.futdcache.v1
index 8523f33..e8e832b 100644
Binary files a/Migdalor_Backend/.vs/Migdalor_Backend/v17/.futdcache.v1 and b/Migdalor_Backend/.vs/Migdalor_Backend/v17/.futdcache.v1 differ
diff --git a/Migdalor_Backend/.vs/Migdalor_Backend/v17/.suo b/Migdalor_Backend/.vs/Migdalor_Backend/v17/.suo
index 9cbe9bd..30ffa41 100644
Binary files a/Migdalor_Backend/.vs/Migdalor_Backend/v17/.suo and b/Migdalor_Backend/.vs/Migdalor_Backend/v17/.suo differ
diff --git a/Migdalor_Backend/ClassLibrary1/Models/MigdalorContext.cs b/Migdalor_Backend/ClassLibrary1/Models/MigdalorContext.cs
index 57051e4..fe3509f 100644
--- a/Migdalor_Backend/ClassLibrary1/Models/MigdalorContext.cs
+++ b/Migdalor_Backend/ClassLibrary1/Models/MigdalorContext.cs
@@ -34,7 +34,7 @@ public partial class MigdalorContext : DbContext
 
     public virtual DbSet<TblResident> TblResidents { get; set; }
 
-    public virtual DbSet<TblResidentCommittee> TblResidentCommittees { get; set; }
+    public virtual DbSet<TblResidentCommittee> TblResidentCommittee { get; set; }
 
     public virtual DbSet<TblResidentHasHobby> TblResidentHasHobbies { get; set; }
     public virtual DbSet<TblInitiative> TblInitiatives { get; set; }
@@ -256,8 +256,7 @@ public partial class MigdalorContext : DbContext
             entity.Property(e => e.CommitteeName)
                 .HasMaxLength(100)
                 .IsUnicode(false);
-            entity.Property(e => e.DepartmentId).HasColumnName("DepartmentID");
-            entity.Property(e => e.MeetingSummery).HasColumnType("text");
+
 
           
         });
diff --git a/Migdalor_Backend/ClassLibrary1/Models/TblResidentCommittee.cs b/Migdalor_Backend/ClassLibrary1/Models/TblResidentCommittee.cs
index 6383180..dfc25df 100644
--- a/Migdalor_Backend/ClassLibrary1/Models/TblResidentCommittee.cs
+++ b/Migdalor_Backend/ClassLibrary1/Models/TblResidentCommittee.cs
@@ -9,11 +9,9 @@ public partial class TblResidentCommittee
 
     public string? CommitteeName { get; set; }
 
-    public string? MeetingSummery { get; set; }
+    public int   ResidentManager { get; set; }
 
-    public int? DepartmentId { get; set; }
+    public string? ResponsibilityDescription { get; set; }
 
-    public virtual TblDepartment? Department { get; set; }
 
-    public virtual ICollection<TblResidentPartOfResidentCommittee> TblResidentPartOfResidentCommittees { get; set; } = new List<TblResidentPartOfResidentCommittee>();
 }
diff --git a/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ClassLibrary1.dll b/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ClassLibrary1.dll
index b5aa7ea..79203ee 100644
Binary files a/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ClassLibrary1.dll and b/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ClassLibrary1.dll differ
diff --git a/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ClassLibrary1.pdb b/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ClassLibrary1.pdb
index 93bb0fe..454fc58 100644
Binary files a/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ClassLibrary1.pdb and b/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ClassLibrary1.pdb differ
diff --git a/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ref/ClassLibrary1.dll b/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ref/ClassLibrary1.dll
index c2f0218..738da40 100644
Binary files a/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ref/ClassLibrary1.dll and b/Migdalor_Backend/ClassLibrary1/bin/Debug/net6.0/ref/ClassLibrary1.dll differ
diff --git a/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ClassLibrary1.dll b/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ClassLibrary1.dll
index b5aa7ea..79203ee 100644
Binary files a/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ClassLibrary1.dll and b/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ClassLibrary1.dll differ
diff --git a/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ClassLibrary1.pdb b/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ClassLibrary1.pdb
index 93bb0fe..454fc58 100644
Binary files a/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ClassLibrary1.pdb and b/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ClassLibrary1.pdb differ
diff --git a/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ref/ClassLibrary1.dll b/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ref/ClassLibrary1.dll
index c2f0218..738da40 100644
Binary files a/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ref/ClassLibrary1.dll and b/Migdalor_Backend/ClassLibrary1/obj/Debug/net6.0/ref/ClassLibrary1.dll differ
diff --git a/Migdalor_Backend/WebApplication1/Controllers/ActivityController.cs b/Migdalor_Backend/WebApplication1/Controllers/ActivityController.cs
index 7a67702..ce43323 100644
--- a/Migdalor_Backend/WebApplication1/Controllers/ActivityController.cs
+++ b/Migdalor_Backend/WebApplication1/Controllers/ActivityController.cs
@@ -196,6 +196,25 @@ namespace WebApplication1.Controllers
 
             }
         }
+        [HttpGet]
+        [Route("GetActivitiesResidentParticipating/{id}")]
+        public IActionResult GetActivitiesResidentParticipating(int id)
+        {
+            try
+            {
+                var activities = (from activity in db.TblActivities
+                                    join residentActivity in db.TblResidentParticipatingInActivities
+                                    on activity.Id equals residentActivity.ActivityNumber
+                                    where residentActivity.ResidentNumber == id
+                                    select activity).ToList();
+                return Ok(activities);
+            }
+            catch (Exception ex)
+            {
+                return StatusCode(500, $"Internal server error: {ex.Message}");
+
+            }
+        }
 
     }
 }
diff --git a/Migdalor_Backend/WebApplication1/Controllers/AnnouncementController.cs b/Migdalor_Backend/WebApplication1/Controllers/AnnouncementController.cs
index e22eba9..354a223 100644
--- a/Migdalor_Backend/WebApplication1/Controllers/AnnouncementController.cs
+++ b/Migdalor_Backend/WebApplication1/Controllers/AnnouncementController.cs
@@ -35,7 +35,7 @@ namespace WebApplication1.Controllers
             db.TblAnnouncements.Add(announcement);
             db.SaveChanges();
 
-             await WebSocketHandler.BroadcastMessageAsync("New Message");
+             await WebSocketHandler.BroadcastMessageAsync("הודעה חדשה");
 
             return Ok(announcement);
         }
diff --git a/Migdalor_Backend/WebApplication1/Controllers/CommitteeController.cs b/Migdalor_Backend/WebApplication1/Controllers/CommitteeController.cs
new file mode 100644
index 0000000..8a82b5b
--- /dev/null
+++ b/Migdalor_Backend/WebApplication1/Controllers/CommitteeController.cs
@@ -0,0 +1,178 @@
+﻿using ClassLibrary1.Models;
+using Microsoft.AspNetCore.Http;
+using Microsoft.AspNetCore.Mvc;
+using System.Security.Claims;
+using WebApplication1.DTO;
+
+namespace WebApplication1.Controllers
+{
+
+    [Route("api/[controller]")]
+    [ApiController]
+    public class CommitteeController : ControllerBase
+    {
+
+        MigdalorContext db = new MigdalorContext();
+        [HttpGet]
+        [Route("GetCommitteeById/{id}")]
+        public ActionResult<TblResidentCommittee> GetCommitteeById(int id)
+        {
+
+            var committeeWithManager = (from committee in db.TblResidentCommittee
+                                       join resident in db.TblResidents
+                                       on committee.ResidentManager equals resident.Id
+                                       where committee.CommitteeId == id // Filter by specific committee ID
+                                       select new
+                                       {
+                                           Committee = committee,  // Select committee details
+                                           ResidentManager = resident  // Select resident manager details
+                                       }
+                            ).FirstOrDefault();
+            return Ok(committeeWithManager);
+        }
+
+
+
+
+
+        [HttpGet]
+        [Route("GetAllCommittees")]
+
+        public ActionResult<IEnumerable<TblResidentCommittee>> GetAllCommittees()
+        {
+            try
+            {
+                var committeesWithManagers = (
+                         from committees in db.TblResidentCommittee
+                          join residents in db.TblResidents
+                          on committees.ResidentManager equals residents.Id
+                          select new
+                                {
+                                     Committee = committees,  // or select specific fields from committees
+                                     ResidentManager = residents  // or select specific fields from residents
+                                  }
+              ).ToList();
+
+
+                return Ok(committeesWithManagers);
+            }
+            catch (Exception ex)
+            {
+                return StatusCode(500, $"Internal server error: {ex.Message}");
+
+            }
+
+
+        }
+
+            [HttpPost]
+        [Route("CreateCommittee")]
+        public IActionResult CreateCommittee([FromBody] CommitteeDTO input)
+        {
+            try
+            {
+                if (input == null)
+                {
+                    return BadRequest("User input is null");
+                }
+
+   
+                int randomCommitteeId= new Random().Next(0, 2147483647);
+
+                var committee = new TblResidentCommittee
+                {
+                    CommitteeId = randomCommitteeId,
+                    ResidentManager = input.ResidentManager,
+                    CommitteeName = input.CommitteeName,
+                    ResponsibilityDescription = input.ResponsibilityDescription
+                };
+
+                var addCommitteeManager = new TblResidentPartOfResidentCommittee
+                {
+                    CommitteeId = committee.CommitteeId,
+                    ResidentNumber = committee.ResidentManager
+                };
+
+                db.TblResidentCommittee.Add(committee);
+                db.TblResidentPartOfResidentCommittees.Add(addCommitteeManager);
+                
+
+                db.SaveChanges();
+
+                return Ok(committee);
+            }
+            catch (Exception ex)
+            {
+                return StatusCode(500, $"Internal server error: {ex.Message}");
+            }
+        }
+
+
+        [HttpPut]
+        [Route("EditCommittee")]
+        public IActionResult EditCommittee([FromBody] CommitteeDTO input)
+        {
+
+            try
+            {
+                var committee = new TblResidentCommittee
+                {
+                    CommitteeId= input.CommitteeId,
+                    ResponsibilityDescription= input.ResponsibilityDescription,
+                    ResidentManager= input.ResidentManager,
+                    CommitteeName= input.CommitteeName,
+               
+                };
+
+                var addCommitteeManager = new TblResidentPartOfResidentCommittee
+                {
+                    CommitteeId = committee.CommitteeId,
+                    ResidentNumber = committee.ResidentManager
+                };
+
+                db.TblResidentCommittee.Update(committee);
+                db.TblResidentPartOfResidentCommittees.Add(addCommitteeManager); 
+                db.SaveChanges();
+
+                return Ok(committee);
+
+
+            }
+            catch (Exception ex)
+            {
+                return StatusCode(500, $"Internal server error: {ex.Message}");
+               
+                }
+        }
+
+
+
+        [HttpDelete]
+        [Route("DeleteCommittee/{id}")]
+        public IActionResult DeleteCommittee(int id)
+        {
+            try
+            {
+
+                var entityToDelete = new TblResidentCommittee { CommitteeId = id };
+                db.TblResidentCommittee.Attach(entityToDelete);
+                db.TblResidentCommittee.Remove(entityToDelete);
+                db.SaveChanges();
+
+
+                return Ok("Committee Deleted successfully");
+            }
+            catch (Exception ex)
+            {
+                return StatusCode(500, $"Internal server error: {ex.Message}");
+            }
+        }
+
+
+
+
+
+
+
+    }
+}
diff --git a/Migdalor_Backend/WebApplication1/Controllers/GMPolicyController.cs b/Migdalor_Backend/WebApplication1/Controllers/GMPolicyController.cs
index 9443873..17ffc2d 100644
--- a/Migdalor_Backend/WebApplication1/Controllers/GMPolicyController.cs
+++ b/Migdalor_Backend/WebApplication1/Controllers/GMPolicyController.cs
@@ -44,7 +44,7 @@ namespace WebApplication1.Controllers
                   join reports in db.TblGoodMorningPolicies
                   on resident.Id equals reports.ResidentNumber into rr
                   from r in rr.DefaultIfEmpty()
-                  where r == null || r.Date != DateTime.Today
+                  where r == null 
                   select resident).ToList();
 
                 return Ok(residentsNotReported);
diff --git a/Migdalor_Backend/WebApplication1/Controllers/InitiativeController.cs b/Migdalor_Backend/WebApplication1/Controllers/InitiativeController.cs
index 584004d..8b126fa 100644
--- a/Migdalor_Backend/WebApplication1/Controllers/InitiativeController.cs
+++ b/Migdalor_Backend/WebApplication1/Controllers/InitiativeController.cs
@@ -57,13 +57,15 @@ namespace WebApplication1.Controllers
                     ResidentNumber = initiativeInput.ResidentNumber,
                    };
 
+
+
                 // Add the user to the context
                 db.TblInitiatives.Add(initiative);
 
                 // Save changes to the database
                 db.SaveChanges();
 
-                return Ok("Initiative added successfully");
+                return Ok(initiative);
             }
             catch (Exception ex)
             {
@@ -153,13 +155,13 @@ namespace WebApplication1.Controllers
                 db.SaveChanges();
 
                 return Ok("Participant added successfully to initiative");
-            }
+        }
             catch (Exception ex)
             {
                 return StatusCode(500, $"Internal server error: {ex.Message}");
-            }
+    }
 
-        }
+}
 
         [HttpDelete]
         [Route("RemoveParticipantFromInitiative")]
@@ -205,5 +207,25 @@ namespace WebApplication1.Controllers
 
             }
         }
+
+        [HttpGet]
+        [Route("GetInitiativeResidentParticipating/{id}")]
+        public IActionResult GetInitiativeResidentParticipating(int id)
+        {
+            try
+            {
+                var initatives = (from initative in db.TblInitiatives
+                                  join residentInitiative in db.TblResidentParticipatingInInitiatives
+                                  on initative.InitiativeNumber equals residentInitiative.InitiativeNumber
+                                  where residentInitiative.ResidentNumber == id
+                                  select initative).ToList();
+                return Ok(initatives);
+            }
+            catch (Exception ex)
+            {
+                return StatusCode(500, $"Internal server error: {ex.Message}");
+
+            }
+        }
     }
 }
diff --git a/Migdalor_Backend/WebApplication1/Controllers/LoginController.cs b/Migdalor_Backend/WebApplication1/Controllers/LoginController.cs
index 96f6ab5..845c2da 100644
--- a/Migdalor_Backend/WebApplication1/Controllers/LoginController.cs
+++ b/Migdalor_Backend/WebApplication1/Controllers/LoginController.cs
@@ -33,7 +33,7 @@ namespace WebApplication1.Controllers
             //IActionResult = allows you to return various types of responses from your action methods
             IActionResult response = Unauthorized();
             TblUser user = Authenticate(userlogin);
-            if(user != null)
+            if (user != null)
             {
                 var token = GenerateJwtToken(user);
                 return Ok(new { Token = token });
@@ -75,15 +75,21 @@ namespace WebApplication1.Controllers
         [Route("ResidentLogin")]
         public IActionResult ResidentLogin([FromBody] UserLogin residentlogin)
         {
-            //IActionResult = allows you to return various types of responses from your action methods
-            IActionResult response = Unauthorized();
-            TblResident resident = db.TblResidents.FirstOrDefault(u => u.Username == residentlogin.Username && u.Password == residentlogin.Password);;
-            if (resident != null)
+            try
             {
-                var token = GenerateJwtTokenForResident(resident);
-                return Ok(new { resident = resident, Token = token });
+                //IActionResult = allows you to return various types of responses from your action methods
+                IActionResult response = Unauthorized();
+                TblResident resident = db.TblResidents.FirstOrDefault(u => u.Username == residentlogin.Username && u.Password == residentlogin.Password); ;
+                if (resident != null)
+                {
+                    var token = GenerateJwtTokenForResident(resident);
+                    return Ok(new { Token = token, resident = resident });
+                }
+                return response;
+            }catch (Exception ex)
+            {
+                return BadRequest(ex.Message);
             }
-            return response;
         }
 
         private string GenerateJwtTokenForResident(TblResident resident)
@@ -164,4 +170,4 @@ namespace WebApplication1.Controllers
         //}
 
     }
-}
+}
\ No newline at end of file
diff --git a/Migdalor_Backend/WebApplication1/Controllers/ResidentController.cs b/Migdalor_Backend/WebApplication1/Controllers/ResidentController.cs
index 3a9f559..4bf1c48 100644
--- a/Migdalor_Backend/WebApplication1/Controllers/ResidentController.cs
+++ b/Migdalor_Backend/WebApplication1/Controllers/ResidentController.cs
@@ -3,6 +3,7 @@ using Microsoft.AspNetCore.Http;
 using Microsoft.AspNetCore.Mvc;
 using System.Security.Claims;
 using WebApplication1.DTO;
+using WebApplication1.MailService;
 
 namespace WebApplication1.Controllers
 {
@@ -10,8 +11,17 @@ namespace WebApplication1.Controllers
     [ApiController]
     public class ResidentController : ControllerBase
     {
+
+        IMailService Mail_Service = null;
+
         MigdalorContext db = new MigdalorContext();
 
+        public ResidentController(IMailService _MailService)
+        {
+            Mail_Service = _MailService;
+
+        }
+
 
         [HttpPost]
         [Route("AddResident")]
@@ -50,6 +60,25 @@ namespace WebApplication1.Controllers
                 db.TblResidents.Add(resident);
                 db.SaveChanges();
 
+                var mailData = new MailData
+                {
+                    EmailToId = resident.Email,
+                    EmailSubject = "ברוך הבא למגדולר",
+                    EmailBody = $"הי, {resident.FirstName +" " + resident.LastName} \n" +
+                    $"ברוך הבא למגדלור\n" +
+                    $"פרטי ההזדהות במערכת\n" +
+                    $"שם משתמש:\n" +
+                    $" {resident.Username}\n" +
+                    $"סיסמה: \n " +
+                    $"{resident.Password}\n" +
+                    $"בברכה,\n" +
+                    $" צוות מגדלור",
+                    EmailToName = resident.FirstName + " " +resident.LastName
+                };
+
+
+                Mail_Service.SendMail(mailData);
+
                 return Ok("User added successfully");
             }
             catch (Exception ex)
diff --git a/Migdalor_Backend/WebApplication1/DTO/CommitteeDTO.cs b/Migdalor_Backend/WebApplication1/DTO/CommitteeDTO.cs
new file mode 100644
index 0000000..d8e219b
--- /dev/null
+++ b/Migdalor_Backend/WebApplication1/DTO/CommitteeDTO.cs
@@ -0,0 +1,14 @@
+﻿namespace WebApplication1.DTO
+{
+    public class CommitteeDTO
+    {
+        public int CommitteeId { get; set; }
+
+        public string? CommitteeName { get; set; }
+
+        public int ResidentManager { get; set; }
+
+        public string? ResponsibilityDescription { get; set; }
+
+    }
+}
diff --git a/Migdalor_Backend/WebApplication1/SchedualerService/GMPCheck.cs b/Migdalor_Backend/WebApplication1/SchedualerService/GMPCheck.cs
index 3f3da5e..4fd3964 100644
--- a/Migdalor_Backend/WebApplication1/SchedualerService/GMPCheck.cs
+++ b/Migdalor_Backend/WebApplication1/SchedualerService/GMPCheck.cs
@@ -35,8 +35,12 @@ namespace WebApplication1.SchedualerService
                 {
                     EmailToId = resident.Email, // Assuming you have an Email field
                     EmailToName = resident.FirstName + " " + resident.LastName,
-                    EmailSubject = "Daily Report Reminder",
-                    EmailBody = $"Dear {resident.FirstName}, please report your status for today."
+                    EmailSubject = "דיווח נוהל בוקר טוב",
+                    EmailBody = $"היי {resident.FirstName + " " + resident.LastName},\n" +
+                    $"טרם דיווחת נוהל בוקר טוב להיום.\n" +
+                    $"\nנא לדווח במערכת הדיירים" +
+                    $"\nתודה והמשך יום טוב" +
+                    $"צוות מגדלור\n"
                 };
                 try
                 {
diff --git a/Migdalor_Backend/WebApplication1/appsettings.json b/Migdalor_Backend/WebApplication1/appsettings.json
index 529d39d..befb2ce 100644
--- a/Migdalor_Backend/WebApplication1/appsettings.json
+++ b/Migdalor_Backend/WebApplication1/appsettings.json
@@ -14,13 +14,13 @@
     }
   },
   "MailSettings": {
-    "Host": "smtp.gmail.com",
+    "Host": "smtp.zoho.com",
     "DefaultCredentials": false,
     "Port": 587,
-    "Name": "Pe'er Fikhman'",
-    "EmailId": "peerfikhman@gmail.com",
-    "UserName": "peerfikhman",
-    "Password": "yyrriipmtwgpfqao",
+    "Name": "Migdalor",
+    "EmailId": "migdalorruppin@zohomail.com",
+    "UserName": "migdalorruppin",
+    "Password": "MigdalorRup1!",
     "UseSSL": true
   },
 
diff --git a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ClassLibrary1.dll b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ClassLibrary1.dll
index b5aa7ea..79203ee 100644
Binary files a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ClassLibrary1.dll and b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ClassLibrary1.dll differ
diff --git a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ClassLibrary1.pdb b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ClassLibrary1.pdb
index 93bb0fe..454fc58 100644
Binary files a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ClassLibrary1.pdb and b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ClassLibrary1.pdb differ
diff --git a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/WebApplication1.dll b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/WebApplication1.dll
index d7ebbd5..9f6cd8f 100644
Binary files a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/WebApplication1.dll and b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/WebApplication1.dll differ
diff --git a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/WebApplication1.pdb b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/WebApplication1.pdb
index 757b30f..3196b22 100644
Binary files a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/WebApplication1.pdb and b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/WebApplication1.pdb differ
diff --git a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/appsettings.json b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/appsettings.json
index 529d39d..cec6e3ef 100644
--- a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/appsettings.json
+++ b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/appsettings.json
@@ -14,13 +14,13 @@
     }
   },
   "MailSettings": {
-    "Host": "smtp.gmail.com",
+    "Host": "smtp.zoho.com",
     "DefaultCredentials": false,
     "Port": 587,
-    "Name": "Pe'er Fikhman'",
-    "EmailId": "peerfikhman@gmail.com",
-    "UserName": "peerfikhman",
-    "Password": "yyrriipmtwgpfqao",
+    "Name": "Migdalor'",
+    "EmailId": "migdalorruppin@zohomail.com",
+    "UserName": "migdalorruppin",
+    "Password": "MigdalorRup1!",
     "UseSSL": true
   },
 
diff --git a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ref/WebApplication1.dll b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ref/WebApplication1.dll
index d941590..74e0a8e 100644
Binary files a/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ref/WebApplication1.dll and b/Migdalor_Backend/WebApplication1/bin/Debug/net6.0/ref/WebApplication1.dll differ
diff --git a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1 - Backup.assets.cache b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1 - Backup.assets.cache
index 0f952b3..578eee9 100644
Binary files a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1 - Backup.assets.cache and b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1 - Backup.assets.cache differ
diff --git a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1 - Backup.csproj.AssemblyReference.cache b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1 - Backup.csproj.AssemblyReference.cache
new file mode 100644
index 0000000..758c7c9
Binary files /dev/null and b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1 - Backup.csproj.AssemblyReference.cache differ
diff --git a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.csproj.AssemblyReference.cache b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.csproj.AssemblyReference.cache
index 2329191..a3300d7 100644
Binary files a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.csproj.AssemblyReference.cache and b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.csproj.AssemblyReference.cache differ
diff --git a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.csproj.CoreCompileInputs.cache b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.csproj.CoreCompileInputs.cache
index 1a5e33c..ddff44e 100644
--- a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.csproj.CoreCompileInputs.cache
+++ b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.csproj.CoreCompileInputs.cache
@@ -1 +1 @@
-f98d45ba4555397398fe391528a5a080b5141d63
+803a9e052190008b65e69307e0b0ff3c8d2ac27e
diff --git a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.dll b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.dll
index d7ebbd5..9f6cd8f 100644
Binary files a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.dll and b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.dll differ
diff --git a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.pdb b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.pdb
index 757b30f..3196b22 100644
Binary files a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.pdb and b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/WebApplication1.pdb differ
diff --git a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/ref/WebApplication1.dll b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/ref/WebApplication1.dll
index d941590..74e0a8e 100644
Binary files a/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/ref/WebApplication1.dll and b/Migdalor_Backend/WebApplication1/obj/Debug/net6.0/ref/WebApplication1.dll differ
diff --git a/Migdalor_Backend/WebApplication1/obj/Release/net6.0/WebApplication1 - Backup.assets.cache b/Migdalor_Backend/WebApplication1/obj/Release/net6.0/WebApplication1 - Backup.assets.cache
index 6fba484..9a314ae 100644
Binary files a/Migdalor_Backend/WebApplication1/obj/Release/net6.0/WebApplication1 - Backup.assets.cache and b/Migdalor_Backend/WebApplication1/obj/Release/net6.0/WebApplication1 - Backup.assets.cache differ
diff --git a/Migdalor_Backend/WebApplication1/obj/staticwebassets.pack.sentinel b/Migdalor_Backend/WebApplication1/obj/staticwebassets.pack.sentinel
index 6047547..0899d66 100644
--- a/Migdalor_Backend/WebApplication1/obj/staticwebassets.pack.sentinel
+++ b/Migdalor_Backend/WebApplication1/obj/staticwebassets.pack.sentinel
@@ -151,3 +151,32 @@
 2.0
 2.0
 2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
+2.0
diff --git a/migdalor/index.html b/migdalor/index.html
index b14b501..ca29e37 100644
--- a/migdalor/index.html
+++ b/migdalor/index.html
@@ -3,6 +3,7 @@
   <head>
     <meta charset="UTF-8" />
     <link rel="icon" type="image/svg+xml" href="/vite.svg" />
+    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800" rel="stylesheet">
     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
     <title>Vite + React</title>
   </head>
diff --git a/migdalor/src/App.css b/migdalor/src/App.css
index b9d355d..f131ab4 100644
--- a/migdalor/src/App.css
+++ b/migdalor/src/App.css
@@ -1,7 +1,6 @@
 #root {
   max-width: 1280px;
   margin: 0 auto;
-  padding: 2rem;
   text-align: center;
 }
 
diff --git a/migdalor/src/Components/CreatePages/CreateActivity.jsx b/migdalor/src/Components/CreatePages/CreateActivity.jsx
index 6c913d1..e152d33 100644
--- a/migdalor/src/Components/CreatePages/CreateActivity.jsx
+++ b/migdalor/src/Components/CreatePages/CreateActivity.jsx
@@ -147,7 +147,7 @@ const CreateActivity = ({isEdit, activityNumber, setModalOpen}) => {
                                 value={formData.MaxParticipants}
                                 onChange={handleChange}
                                 className="input"
-                                min="1"
+                                min="0"
                             />
                             <input
                                 type="text"
diff --git a/migdalor/src/Components/CreatePages/SendMeassge.jsx b/migdalor/src/Components/CreatePages/SendMeassge.jsx
index 355e38d..a69c1da 100644
--- a/migdalor/src/Components/CreatePages/SendMeassge.jsx
+++ b/migdalor/src/Components/CreatePages/SendMeassge.jsx
@@ -9,7 +9,7 @@ import CloseIcon from '@mui/icons-material/Close';
 const SendMessage = ({isEdit, messageNumber, setModalOpen}) => {
 
     const [message, setMessage] = useState('');
-    const [scheduledTime, setScheduledTime] = useState('');
+    const [subject, setSubject] = useState('');
     const [showScheduleModal, setShowScheduleModal] = useState(false);
     const [showSuccessMessage, setShowSuccessMessage] = useState(false);
 
@@ -18,6 +18,7 @@ const SendMessage = ({isEdit, messageNumber, setModalOpen}) => {
             announcementsRequests.getAnnouncementById(messageNumber)
                 .then((message) => {
                     setMessage(message.content);
+                    setSubject(message.subject);
                 })
 
         }
@@ -28,9 +29,15 @@ const SendMessage = ({isEdit, messageNumber, setModalOpen}) => {
         e.preventDefault();
 
         if (isEdit) {
-            await announcementsRequests.editAnnouncement({id: messageNumber, content: message});
+            await announcementsRequests.editAnnouncement({id: messageNumber, content: message, subject: subject});
         } else {
-            announcementsRequests.createAnnouncement({content: message}).then((response) => {
+            const date = new Date;
+            console.log("msg:", {content: message, subject: subject, date: date.toISOString()})
+            announcementsRequests.createAnnouncement({
+                content: message,
+                subject: subject,
+                date: date.toISOString()
+            }).then((response) => {
                 if (!(response.status === 200)) {
                     throw new Error(`HTTP error! status: ${response.status}`);
                 }
@@ -45,7 +52,7 @@ const SendMessage = ({isEdit, messageNumber, setModalOpen}) => {
             <Modal
                 open={true}
                 sx={{
-                    top: '20%',
+                    top: '5%',
                     right: '20%'
                 }}
                 aria-labelledby="modal-modal-title"
@@ -57,42 +64,59 @@ const SendMessage = ({isEdit, messageNumber, setModalOpen}) => {
                             onClick={handleClose}/>
                     </Button>
                     <h1 className="form-title">שליחת הודעה</h1>
-                    <form onSubmit={handleSubmit} className="form-layout">
-                        <div className="button-container">
-                            <label htmlFor="file-upload" className="form-button">הוספת קובץ</label>
-                            <input id="file-upload" type="file" className="file-input"/>
-                            <button type="button" className="form-button"
-                                    onClick={() => setShowScheduleModal(true)}>תזמון
-                            </button>
-                            <button type="submit" className="form-button">שלח</button>
+                    <form onSubmit={handleSubmit} className="form-layout" style={{
+
+                        width: '75%',
+                        display: 'flex',
+                        flexDirection: 'column',
+                        gap:20,
+                        alignItems: 'center',
+                        justifyContent: 'center'
+                    }}>
+                        <div style={{
+                            width: '100%',
+                            height: '20%',
+                            display: 'flex',
+                            flexDirection: 'column',
+                            alignItems: 'start',
+                            justifyContent: 'start',
+                            gap: 5
+                        }}>
+                            <label htmlFor="message" className="textarea-label" style={{color: "black"}}>נושא:</label>
+                            <input
+                                id="text"
+                                type="text"
+                                className="send-message-subject"
+                                style={{display: "block", backgroundColor: "white", color: "black", width: '100%' , height:'2rem', resize:'none'}}
+                                placeholder="נושא"
+                                value={subject}
+                                onChange={(e) => setSubject(e.target.value)}
+                            />
                         </div>
-                        <div className="textarea-wrapper">
-                            <label htmlFor="message" className="textarea-label">כתיבת הודעה לדיירים:</label>
+                        <div style={{
+                            width: '100%',
+                            height: '20%',
+                            display: 'flex',
+                            flexDirection: 'column',
+                            alignItems: 'start',
+                            justifyContent: 'start',
+                            gap: 5
+                        }}>
+
+                            <label htmlFor="message" className="textarea-label" style={{color: "black"}}>כתיבת הודעה
+                                לדיירים:</label>
+
                             <textarea
                                 id="message"
                                 className="textarea-container"
                                 placeholder="ההודעה תשלח לדיירים..."
                                 value={message}
                                 onChange={(e) => setMessage(e.target.value)}
+                                style={{width: '100%'}}
                             />
                         </div>
+                            <button style={{marginTop:0, width:"60%", fontWeight:'bold'}} type="submit" className="form-button">שלח</button>
                     </form>
-                    {showScheduleModal && (
-                        <div className="modal">
-                            <div className="modal-content">
-                                <span className="modal-close" onClick={() => setShowScheduleModal(false)}>&times;</span>
-                                <label htmlFor="schedule">בחר שעה ותאריך:</label>
-                                <input
-                                    id="schedule"
-                                    type="datetime-local"
-                                    className="form-input"
-                                    value={scheduledTime}
-                                    onChange={(e) => setScheduledTime(e.target.value)}
-                                />
-                                <button type="submit" className="form-button" onClick={handleSubmit}>שלח</button>
-                            </div>
-                        </div>
-                    )}
                     {showSuccessMessage && (
                         <div className="success-message">ההודעה נשלחה בהצלחה</div>
                     )}
diff --git a/migdalor/src/Components/CreatePages/SendMeassgeStyle.css b/migdalor/src/Components/CreatePages/SendMeassgeStyle.css
index bec7602..71880ef 100644
--- a/migdalor/src/Components/CreatePages/SendMeassgeStyle.css
+++ b/migdalor/src/Components/CreatePages/SendMeassgeStyle.css
@@ -31,6 +31,31 @@
   width: 100%;
   max-width: 350px;
   text-align: right;
+
+}
+
+.send-message-subject {
+  width: calc(50% - 10px); /* להקטנת הרוחב של השדה כדי להוסיף רווח */
+  padding: 10px;
+  margin: 5px; /* לוודא שיש מרווח */
+  border: 1px solid #ccc;
+  border-radius: 4px;
+  box-sizing: border-box;
+  text-align: right;
+  color: black;
+  font-weight: bold;
+  font-family: 'sans-serif';
+  background-color: white;
+}
+input:placeholder-shown{
+font-weight: lighter;
+  font-family: "Open Sans", sans-serif;
+
+}
+textarea:placeholder-shown{
+font-weight: lighter;
+  font-family: "Open Sans", sans-serif;
+
 }
 
 .personal-area .upload-button {
diff --git a/migdalor/src/Components/TenantCommittee.css b/migdalor/src/Components/CreatePages/TenantCommittee.css
similarity index 100%
rename from migdalor/src/Components/TenantCommittee.css
rename to migdalor/src/Components/CreatePages/TenantCommittee.css
diff --git a/migdalor/src/Components/CreatePages/TenantCommittee.jsx b/migdalor/src/Components/CreatePages/TenantCommittee.jsx
new file mode 100644
index 0000000..64788cb
--- /dev/null
+++ b/migdalor/src/Components/CreatePages/TenantCommittee.jsx
@@ -0,0 +1,127 @@
+import React, {useEffect, useState} from 'react';
+import ResidentRequests from '../../Requests/Tenant/index.jsx'
+import CommitteeRequests from '../../Requests/Committes/index.jsx'
+import './TenantCommittee.css';
+import Button from "@mui/material/Button";
+import CloseIcon from "@mui/icons-material/Close.js";
+import Modal from "@mui/material/Modal";
+
+// const apiUrl = "https://localhost:7149/api/activity/";
+
+const TenantCommittee = ({isEdit, committeeId, setModalOpen}) => {
+
+    const [residents, setResidents] = useState([])
+
+    const [formData, setFormData] = useState({
+        residentManager: '',
+        committeeName: '',
+        responsibilityDescription: ''
+    });
+
+    const handleClose = () => setModalOpen(false);
+
+
+    useEffect(() => {
+        if (isEdit) {
+            CommitteeRequests.getById(committeeId)
+                .then(({committee, residentManager}) => {
+
+                    setFormData({
+                        residentManager: residentManager.id,
+                        committeeName: committee.committeeName,
+                        responsibilityDescription: committee.responsibilityDescription
+                    })
+                })
+
+
+        }
+    }, []);
+
+    useEffect(() => {
+        ResidentRequests.getAll()
+            .then(r => setResidents(r))
+
+    }, []);
+
+    const handleChange = (e) => {
+        const {name, value} = e.target;
+        setFormData({
+            ...formData,
+            [name]: value
+        });
+    };
+
+
+    const handleSubmit = async (e) => {
+        e.preventDefault();
+        await CommitteeRequests.create(formData);
+
+    };
+
+
+    return (
+        <div>
+            <Modal
+                open={true}
+                sx={{
+                    top: '20%',
+                    right: '20%'
+                }}
+                aria-labelledby="modal-modal-title"
+                aria-describedby="modal-modal-description"
+            >
+                <div className="add-tenant-form-container">
+                    <Button sx={{alignSelf: 'start'}}>
+                        <CloseIcon
+                            onClick={handleClose}/>
+                    </Button>
+                    <form className="form-container" onSubmit={handleSubmit}>
+                        <div className="title">ועד דיירים</div>
+                        <div className="additional-info-container">
+                            <div className="left-container">
+                                <input
+                                    type="text"
+                                    name="committeeName"
+                                    placeholder="שם הוועד"
+                                    value={formData.committeeName}
+                                    onChange={handleChange}
+                                    className="input"
+                                />
+
+                                <select style={{backgroundColor: "white", color: "black"}}
+                                        onChange={handleChange}
+                                        name={"residentManager"}
+                                        id="residents" required>
+                                    {residents.map((r) => {
+
+                                        return (
+                                            <option
+                                                key={r.id}
+                                                value={r.id}
+                                            >
+                                                {r.firstName + " " + r.lastName}
+                                            </option>)
+                                    })
+                                    }
+                                    <option value="" defaultValue>שם האחראי</option>
+                                </select>
+
+
+                            </div>
+                            <textarea
+                                name="responsibilityDescription"
+                                placeholder="תיאור האחריות"
+                                value={formData.responsibilityDescription}
+                                onChange={handleChange}
+                                className="textarea-container"
+                            />
+                        </div>
+                        <button type="submit" className="form-button">שלח</button>
+                    </form>
+                </div>
+            </Modal>
+        </div>
+    );
+};
+
+export default TenantCommittee;
diff --git a/migdalor/src/Components/EntityPage/EntitiesMap.jsx b/migdalor/src/Components/EntityPage/EntitiesMap.jsx
index ceaf651..fa1190b 100644
--- a/migdalor/src/Components/EntityPage/EntitiesMap.jsx
+++ b/migdalor/src/Components/EntityPage/EntitiesMap.jsx
@@ -1,5 +1,6 @@
 import React from "react";
 import ActivityRequestsIndex from '../../Requests/Activity/index.jsx'
+import CommitteeRequestsIndex from '../../Requests/Committes/index.jsx'
 import DepartmentRequestsIndex from '../../Requests/Department/index.jsx'
 import TenantRequests from '../../Requests/Tenant/index.jsx'
 import AnnouncementsRequests from '../../Requests/Announcements/index.jsx'
@@ -8,6 +9,7 @@ import CreateActivity from "../CreatePages/CreateActivity.jsx";
 import CreateDepartment from "../CreatePages/CreateDepartment.jsx";
 import AddTenant from "../CreatePages/AddTenant.jsx";
 import SendMessage from "../CreatePages/SendMeassge.jsx";
+import TennantCommittee from "../CreatePages/TenantCommittee.jsx";
 import AddObituaryNotice from "../CreatePages/AddObituaryNotice.jsx";
 
 const EntitiesMap = {
@@ -80,7 +82,8 @@ const EntitiesMap = {
             ...AnnouncementsRequests
         }
         , columns: new Map([
-                ['date', "תאריך"]
+                ['date', "תאריך"],
+                ['subject', "נושא"]
             ]
         ),
         createLabel: "שלח הודעה לדיירים",
@@ -112,6 +115,25 @@ const EntitiesMap = {
         editPage: (obituaryNumber, setOpenEdit) => {
             return <AddObituaryNotice isEdit={true} obituaryNumber={obituaryNumber} setModalOpen={setOpenEdit}/>
         }
+    } ,
+    Committee: {
+        primaryKey: "committeeId",
+        requests: {
+            ...CommitteeRequestsIndex
+        }
+        , columns: new Map([
+                ['committeeName', 'שם הוועד'],
+                ['residentManager', 'מנהל אחראי'],
+
+            ]
+        ),
+        createLabel: "צור וועד חדש",
+        createPage: (setOpenCreate) => {
+            return <TennantCommittee isEdit={false} obituaryNumber={null} setModalOpen={setOpenCreate}/>
+        },
+        editPage: (obituaryNumber, setOpenEdit) => {
+            return <TennantCommittee isEdit={true} obituaryNumber={obituaryNumber} setModalOpen={setOpenEdit}/>
+        }
     }
 }
 
diff --git a/migdalor/src/Components/EntityPage/EntitiesTable.jsx b/migdalor/src/Components/EntityPage/EntitiesTable.jsx
index 0694cc1..0573dab 100644
--- a/migdalor/src/Components/EntityPage/EntitiesTable.jsx
+++ b/migdalor/src/Components/EntityPage/EntitiesTable.jsx
@@ -26,10 +26,16 @@ const  EntityRow = ({entity, entityName})=> {
         await EntitiesMap[entityName].requests.delete(entity[entityPK]);
     }
 
+    const descriptionTitle = (entity) => {
+        if (entity.description) return "תיאור"
+        else if(entity.content) return  "תוכן ההודעה"
+        else if( entity.responsibilityDescription) return "תיאור האחריות"
+    }
+
     return (
         <React.Fragment>
             <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>
-                {(entity.description || entity.content)  && <TableCell>
+                {(entity.description || entity.content || entity.responsibilityDescription)  && <TableCell>
                     <IconButton
                         aria-label="expand row"
                         size="small"
@@ -43,6 +49,7 @@ const  EntityRow = ({entity, entityName})=> {
                     if(col==='time') val =  moment(val, 'HH:mm:ss').format('HH:mm');
                     if(col==='date') val = moment(val, 'yyyy-MM-DDT00:00:00').format('DD/MM/yyyy')
                     if(col==='dateOfBirth') val = moment(val, 'yyyy-MM-DDT00:00:00').format('DD/MM/yyyy')
+                    if(col === 'residentManager') val = val.firstName + " " + val.lastName;
                     return <TableCell key={col} >{val}</TableCell>
                 })
                 }
@@ -59,14 +66,14 @@ const  EntityRow = ({entity, entityName})=> {
             </TableRow>
             <TableRow>
                 {
-                    (entity.description || entity.content) && <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={6}>
+                    (entity.description || entity.content || entity.responsibilityDescription) && <TableCell style={{paddingBottom: 0, paddingTop: 0}} colSpan={6}>
                     <Collapse in={open} timeout="auto" unmountOnExit>
                         <Box sx={{margin: 1}}>
                             <Typography align="right" variant="h6" gutterBottom component="div">
-                                {entity.description ? "תיאור" : "תוכן ההודעה"}
+                                {descriptionTitle(entity)}
                             </Typography>
                             <Typography textAlign="right" variant="sapn" gutterBottom component="div">
-                                {entity.description || entity.content}
+                                {entity.description || entity.content || entity.responsibilityDescription}
                             </Typography>
                         </Box>
                     </Collapse>
@@ -88,7 +95,7 @@ const  EntityTable = ({entityName, entities})=> {
             <Table aria-label="collapsible table">
                 <TableHead>
                     <TableRow >
-                        {(entities[0]?.description || entities[0]?.content) && <TableCell sx={{width: '1%'}}/>}
+                        {(entities[0]?.description || entities[0]?.content || entities[0]?.responsibilityDescription) && <TableCell sx={{width: '1%'}}/>}
                         {Array.from(EntitiesMap[entityName].columns.values()).map((colName) => {
                             return <TableCell key={colName} align="right">{colName}</TableCell>
                         })}
diff --git a/migdalor/src/Components/GoodMorningPolicy.jsx b/migdalor/src/Components/GoodMorningPolicy.jsx
index 6ff43e6..f5a169a 100644
--- a/migdalor/src/Components/GoodMorningPolicy.jsx
+++ b/migdalor/src/Components/GoodMorningPolicy.jsx
@@ -7,32 +7,37 @@ import TableContainer from '@mui/material/TableContainer';
 import TableHead from '@mui/material/TableHead';
 import TablePagination from '@mui/material/TablePagination';
 import TableRow from '@mui/material/TableRow';
+import {useEffect, useState} from "react";
+import * as GMPRequests from '../Requests/GMP/GMPRequests.jsx'
+import {styled} from "@mui/material";
 
 const columns = [
-{ id: 'residentNumber', label: 'שם הדייר', minWidth: 100, align: 'right' },
   { id: 'firstName', label: 'שם פרטי', minWidth: 100, align: 'right' },
   { id: 'lastName', label: 'שם משפחה', minWidth: 100, align: 'right' },
-  { id: 'phone', label: 'טלפון', minWidth: 100, align: 'right' },
-  { id: 'ID', label: 'תעודת זהות', minWidth: 100, align: 'right' },
-  { id: 'timeOfPolicy', label: 'שעת ביצוע הנוהל', minWidth: 100, align: 'right', 
+  { id: 'phoneNumber', label: 'טלפון', minWidth: 100, align: 'right' },
+  { id: 'residentID', label: 'תעודת זהות', minWidth: 100, align: 'right' },
+  { id: 'confirm', label: 'דיווח נוהל', minWidth: 100, align: 'right',
   },
 ];
 
-function createData(residentNumber, firstName, lastName, phone, ID, timeOfPolicy) {
-  
-  return { residentNumber, firstName, lastName, phone, ID, timeOfPolicy};
-}
 
-const rows = [
-  createData(1, 'טל ', 'כהן', "0527532227", "12345"),
-  createData(2, 'אניטה ', 'סטבליאנקו', "0526928001", "23456"),
-  createData(3, 'ענר ', 'עוזר', "0507192225", "34567"),
-  createData(4, 'ניר ', 'חן', "0507192226", "45678")
-];
 
+const Status = styled('Box')({
+  display: "flex",
+  width: "75%",
+  height: "25%",
+  justifyContent: "center",
+  opacity: "70%",
+  borderRadius: 20,
+  fontWeight:'bold'
+
+})
 export default function StickyHeadTable() {
   const [page, setPage] = React.useState(0);
   const [rowsPerPage, setRowsPerPage] = React.useState(10);
+  const [confirmedResident, setConfirmedResident] =useState([])
+  const [notconfirmedResident, setNotConfirmedResident] =useState([])
+  const [rows, setRows] = useState([]);
 
   const handleChangePage = (event, newPage) => {
     setPage(newPage);
@@ -43,6 +48,19 @@ export default function StickyHeadTable() {
     setPage(0);
   };
 
+  useEffect(() => {
+    GMPRequests.GetNotReportedResidents()
+        .then(residents => residents.map( r =>  {return {...r , confirm: false}}))
+        .then(residents => setNotConfirmedResident(residents))
+    GMPRequests.GetReportedResidents()
+        .then(residents => residents.map( r =>  {return {...r , confirm: true}}))
+        .then(residents => setConfirmedResident(residents))
+
+  }, []);
+  useEffect(()=>{
+    setRows([...confirmedResident,...notconfirmedResident])
+  },[confirmedResident,notconfirmedResident])
+
   return (
     <Paper sx={{ width: '90%', overflow: 'hidden', direction: 'rtl' }}>
       <TableContainer sx={{ maxHeight: 440 }}>
@@ -67,7 +85,18 @@ export default function StickyHeadTable() {
                 return (
                   <TableRow hover role="checkbox" tabIndex={-1} key={row.code}>
                     {columns.map((column) => {
-                      const value = row[column.id];
+                      let value = row[column.id];
+                      if(column.id ==='confirm') {
+                        value = value ?
+                            (<Status sx={{backgroundColor:"#8bc34a"}}>
+                            דווח בהצלחה
+                            </Status>) :
+                            (
+                                <Status sx={{backgroundColor:"#f44336"}}>
+                                  טרם דווח
+                                </Status>
+                            )
+                      }
                       return (
                         <TableCell key={column.id} align={column.align}>
                           {value}
diff --git a/migdalor/src/Components/Home.jsx b/migdalor/src/Components/Home.jsx
index 11b24cd..72477a4 100644
--- a/migdalor/src/Components/Home.jsx
+++ b/migdalor/src/Components/Home.jsx
@@ -7,7 +7,7 @@ import AddTenant from './CreatePages/AddTenant.jsx';
 import './HomeStyle.css';
 import GoodMorningPolicy from './GoodMorningPolicy';
 import AddObituaryNotice from './CreatePages/AddObituaryNotice.jsx';
-import TenantCommittee from './TenantCommittee';
+import TenantCommittee from './CreatePages/TenantCommittee.jsx';
 import Entities from "./EntityPage/Entities.jsx";
 
 const Home = () => {
@@ -56,7 +56,7 @@ const Home = () => {
           {activeComponent === 'goodMorningPolicy' && <GoodMorningPolicy />}
           {activeComponent === 'updateDepartmentDetails' && <Entities EntityName={'Department'}/>}
           {activeComponent === 'addObituaryNotice' && <Entities  EntityName={"Obituary"}/>}
-          {activeComponent === 'tenantCommittee' && <TenantCommittee />}
+          {activeComponent === 'tenantCommittee' && <Entities EntityName={"Committee"}/>}
 
         </div>
         <div className={`side-menu ${menuOpen ? 'open' : ''}`}>
diff --git a/migdalor/src/Components/HomeStyle.css b/migdalor/src/Components/HomeStyle.css
index e14a133..f8e9fff 100644
--- a/migdalor/src/Components/HomeStyle.css
+++ b/migdalor/src/Components/HomeStyle.css
@@ -24,12 +24,16 @@ body {
   }
   
   .page-container {
-    min-height: 100vh;
-    width: 100vw;
+    /*min-height: 100vh;*/
     display: flex;
     flex-direction: column;
-    align-items: center;
-    background-color: #F6F2E4;
+    justify-content: center;
+align-content: center;
+    width: 100vw;
+    /*display: flex;*/
+    /*flex-direction: column;*/
+    /*align-items: center;*/
+    /*background-color: #F6F2E4;*/
     
   }
   
diff --git a/migdalor/src/Components/OpeningHours.jsx b/migdalor/src/Components/OpeningHours.jsx
index d4bdc77..5872ad9 100644
--- a/migdalor/src/Components/OpeningHours.jsx
+++ b/migdalor/src/Components/OpeningHours.jsx
@@ -5,7 +5,6 @@ import './OpeningHours.css';
 const OpeningHours = () => (
   <div calss="container">
   <div class="openingHours"><h1>שעות פתיחה</h1></div>
-  
   <div class="clinic">
   <h2>מרפאה</h2>
   <p> ראשון - חמישי: 6:00 - 11:00, 13:00 - 17:00</p>
diff --git a/migdalor/src/Components/TenantCommittee.jsx b/migdalor/src/Components/TenantCommittee.jsx
deleted file mode 100644
index 12e3349..0000000
--- a/migdalor/src/Components/TenantCommittee.jsx
+++ /dev/null
@@ -1,130 +0,0 @@
-import React, { useState } from 'react';
-import './TenantCommittee.css';
-
-// const apiUrl = "https://localhost:7149/api/activity/";
-
-const TenantCommittee = () => {
-  const [formData, setFormData] = useState({
-    activityName: '',
-    date: '',
-    hours: '',
-    participantLimit: '',
-    interests: '',
-    description: ''
-  });
-
-  const handleChange = (e) => {
-    const { name, value } = e.target;
-    setFormData({
-      ...formData,
-      [name]: value
-    });
-  };
-
-  const handleFileChange = (e) => {
-    const uploadedFile = e.target.files[0];
-    if (uploadedFile) {
-      setFile(uploadedFile);
-   
-      setTimeout(() => {
-        const success = Math.random() < 0.5; 
-        if (success) {
-          setFileStatus({ success: true, message: 'קובץ עלה בהצלחה' });
-        } else {
-          setFileStatus({ success: false, message: 'שגיאה בהעלאת הקובץ' });
-        }
-      }, 1000); 
-    }
-  };
-
-  const handleSubmit = (e) => {
-    e.preventDefault();
-    console.log(formData);
-    if (file) {
-      console.log(file);
-    }
-    //שליחת מידע לשרת
-//     fetch((apiUrl + "AddActivity", {) {
-//       method: 'POST',
-//       body: formData
-//     })
-//       .then(response => {
-//         if (!response.ok) {
-//           throw new Error(`HTTP error! status: ${response.status}`);
-//         }
-//         return response.json();
-//       })
-//       .then(data => {
-//         setFileStatus({ success: true, message: 'קובץ עלה בהצלחה' });
-//         console.log('Upload successful:', data);
-//       })
-//       .catch(error => {
-//         setFileStatus({ success: false, message: 'שגיאה בהעלאת הקובץ' });
-//         console.error('Upload error:', error);
-//       });
-//   }
-// };
-  };
-
-
-  return (
-    <form className="form-container" onSubmit={handleSubmit}>
-      <div className="title">ועד דיירים</div>
-      <div className="additional-info-container">
-        <div className="left-container">
-          <input
-            type="text"
-            name="activityName"
-            placeholder="שם האחראי"
-            value={formData.activityName}
-            onChange={handleChange}
-            className="input"
-          />
-          <input
-            type="number"
-            name="participantLimit"
-            placeholder="שם האחראי"
-            value={formData.participantLimit}
-            onChange={handleChange}
-            className="input"
-            min="1"
-          />
-          <input
-            type="text"
-            name="interests"
-            placeholder="טלפון"
-            value={formData.interests}
-            onChange={handleChange}
-            className="input"
-          />
-          <input
-          type="text"
-          name="interests"
-          placeholder="דרך פעולה"
-          value={formData.interests}
-          onChange={handleChange}
-          className="input"
-        />
-          <label className="file-label">
-            הוסף קובץ
-            <input
-              type="file"
-              onChange={handleFileChange}
-              className="file-input"
-            />
-          </label>
-        </div>
-        <textarea
-          name="description"
-          placeholder="תיאור האחריות"
-          value={formData.description}
-          onChange={handleChange}
-          className="textarea-container"
-        />
-      </div>
-      <button type="submit" className="form-button">שלח</button>
-    </form>
-  );
-};
-
-export default TenantCommittee;
diff --git a/migdalor/src/Requests/Committes/CommittessRequests.jsx b/migdalor/src/Requests/Committes/CommittessRequests.jsx
new file mode 100644
index 0000000..20980bf
--- /dev/null
+++ b/migdalor/src/Requests/Committes/CommittessRequests.jsx
@@ -0,0 +1,28 @@
+import axios from 'axios'
+
+const BASE_URL = `https://localhost:7149/api/Committee/`
+export const getAllCommittees = async()=>{
+    const {data} =  await axios.get(BASE_URL + 'GetAllCommittees/');
+    return   data.map(({committee, residentManager}) => { return{...committee, residentManager : residentManager}});
+}
+
+export const getCommitteeById= async (Id) => {
+
+    const {data} = await axios.get(BASE_URL + `GetCommitteeById//${Id}`)
+    const {committee, residentManager} = data
+    return {...committee, ...residentManager};}
+
+export const createCommittee = async (committee) =>{
+    return await axios.post(BASE_URL + 'CreateCommittee/', committee);
+}
+export const editCommittee = async (committee) => {
+
+    const {data} = await axios.put(BASE_URL + 'EditCommittee/', committee)
+    return data;
+}
+export const deleteCommittee = async (id) => {
+
+    const {data} = await axios.delete(BASE_URL + `DeleteCommittee/${id}`)
+    return data;
+}
+
diff --git a/migdalor/src/Requests/Committes/index.jsx b/migdalor/src/Requests/Committes/index.jsx
new file mode 100644
index 0000000..81a772e
--- /dev/null
+++ b/migdalor/src/Requests/Committes/index.jsx
@@ -0,0 +1,11 @@
+import * as CommittessRequests from './CommittessRequests.jsx'
+
+const index = {
+    create: CommittessRequests.createCommittee ,
+    edit: CommittessRequests.editCommittee ,
+    delete: CommittessRequests.deleteCommittee,
+    getAll:CommittessRequests.getAllCommittees,
+    getById: CommittessRequests.getCommitteeById
+}
+
+export default index;
\ No newline at end of file
diff --git a/migdalor/src/Requests/GMP/GMPRequests.jsx b/migdalor/src/Requests/GMP/GMPRequests.jsx
new file mode 100644
index 0000000..d1d82b7
--- /dev/null
+++ b/migdalor/src/Requests/GMP/GMPRequests.jsx
@@ -0,0 +1,12 @@
+import axios from "axios";
+
+const BASE_URL = `https://localhost:7149/api/GMPolicy/`
+
+export const GetReportedResidents = async () =>{
+    const {data} = await axios.get(BASE_URL + 'ReportedResidents')
+    return data;
+}
+export const GetNotReportedResidents = async () =>{
+    const {data} = await axios.get(BASE_URL + 'ResidentsNotReported')
+    return data;
+}
diff --git a/migdalor/src/index.css b/migdalor/src/index.css
index 6119ad9..d5376ee 100644
--- a/migdalor/src/index.css
+++ b/migdalor/src/index.css
@@ -1,16 +1,15 @@
 :root {
-  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
-  line-height: 1.5;
-  font-weight: 400;
+  /*font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;*/
+  /*line-height: 1.5;*/
+  /*font-weight: 400;*/
+  /*color-scheme: light dark;*/
+  /*color: rgba(255, 255, 255, 0.87);*/
+  /*background-color: #242424;*/
 
-  color-scheme: light dark;
-  color: rgba(255, 255, 255, 0.87);
-  background-color: #242424;
-
-  font-synthesis: none;
-  text-rendering: optimizeLegibility;
-  -webkit-font-smoothing: antialiased;
-  -moz-osx-font-smoothing: grayscale;
+  /*font-synthesis: none;*/
+  /*text-rendering: optimizeLegibility;*/
+  /*-webkit-font-smoothing: antialiased;*/
+  /*-moz-osx-font-smoothing: grayscale;*/
 }
 
 a {
@@ -28,6 +27,7 @@ body {
   place-items: center;
   min-width: 320px;
   min-height: 100vh;
+  width: 160vh;
 }
 
 h1 {
diff --git a/migdalor_tenant/index.html b/migdalor_tenant/index.html
index 24d0d3a..f7ae516 100644
--- a/migdalor_tenant/index.html
+++ b/migdalor_tenant/index.html
@@ -4,10 +4,11 @@
     <meta charset="UTF-8" />
     <link rel="icon" type="image/svg+xml" href="/vite.svg" />
     <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800" rel="stylesheet">
     <title>Vite + React</title>
   </head>
   <body dir="rtl">
-    <div id="root" style="height: 100%"></div>
+    <div id="root"></div>
     <script type="module" src="/src/main.jsx"></script>
   </body>
 </html>
diff --git a/migdalor_tenant/package-lock.json b/migdalor_tenant/package-lock.json
index 11f6982..852d041 100644
--- a/migdalor_tenant/package-lock.json
+++ b/migdalor_tenant/package-lock.json
@@ -11,6 +11,7 @@
         "@emotion/react": "^11.13.3",
         "@emotion/styled": "^11.13.0",
         "@mui/icons-material": "^5.16.7",
+        "@mui/joy": "^5.0.0-beta.48",
         "@mui/material": "^5.16.7",
         "@mui/system": "^6.0.1",
         "@mui/x-data-grid": "^7.15.0",
@@ -18,8 +19,11 @@
         "jss-rtl": "^0.3.0",
         "moment": "^2.30.1",
         "react": "^18.3.1",
+        "react-big-calendar": "^1.13.4",
         "react-dom": "^18.3.1",
-        "react-router-dom": "^6.26.0"
+        "react-popup": "^0.11.2",
+        "react-router-dom": "^6.26.0",
+        "socket.io-client": "^4.7.5"
       },
       "devDependencies": {
         "@types/react": "^18.3.3",
@@ -967,6 +971,44 @@
         "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
       }
     },
+    "node_modules/@floating-ui/core": {
+      "version": "1.6.7",
+      "resolved": "https://registry.npmjs.org/@floating-ui/core/-/core-1.6.7.tgz",
+      "integrity": "sha512-yDzVT/Lm101nQ5TCVeK65LtdN7Tj4Qpr9RTXJ2vPFLqtLxwOrpoxAHAJI8J3yYWUc40J0BDBheaitK5SJmno2g==",
+      "license": "MIT",
+      "dependencies": {
+        "@floating-ui/utils": "^0.2.7"
+      }
+    },
+    "node_modules/@floating-ui/dom": {
+      "version": "1.6.10",
+      "resolved": "https://registry.npmjs.org/@floating-ui/dom/-/dom-1.6.10.tgz",
+      "integrity": "sha512-fskgCFv8J8OamCmyun8MfjB1Olfn+uZKjOKZ0vhYF3gRmEUXcGOjxWL8bBr7i4kIuPZ2KD2S3EUIOxnjC8kl2A==",
+      "license": "MIT",
+      "dependencies": {
+        "@floating-ui/core": "^1.6.0",
+        "@floating-ui/utils": "^0.2.7"
+      }
+    },
+    "node_modules/@floating-ui/react-dom": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/@floating-ui/react-dom/-/react-dom-2.1.1.tgz",
+      "integrity": "sha512-4h84MJt3CHrtG18mGsXuLCHMrug49d7DFkU0RMIyshRveBeyV2hmV/pDaF2Uxtu8kgq5r46llp5E5FQiR0K2Yg==",
+      "license": "MIT",
+      "dependencies": {
+        "@floating-ui/dom": "^1.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0",
+        "react-dom": ">=16.8.0"
+      }
+    },
+    "node_modules/@floating-ui/utils": {
+      "version": "0.2.7",
+      "resolved": "https://registry.npmjs.org/@floating-ui/utils/-/utils-0.2.7.tgz",
+      "integrity": "sha512-X8R8Oj771YRl/w+c1HqAC1szL8zWQRwFvgDwT129k9ACdBoud/+/rX9V0qiMl6LWUdP9voC2nDVZYPMQQsb6eA==",
+      "license": "MIT"
+    },
     "node_modules/@humanwhocodes/config-array": {
       "version": "0.11.14",
       "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.11.14.tgz",
@@ -1045,6 +1087,38 @@
         "@jridgewell/sourcemap-codec": "^1.4.14"
       }
     },
+    "node_modules/@mui/base": {
+      "version": "5.0.0-beta.40",
+      "resolved": "https://registry.npmjs.org/@mui/base/-/base-5.0.0-beta.40.tgz",
+      "integrity": "sha512-I/lGHztkCzvwlXpjD2+SNmvNQvB4227xBXhISPjEaJUXGImOQ9f3D2Yj/T3KasSI/h0MLWy74X0J6clhPmsRbQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.23.9",
+        "@floating-ui/react-dom": "^2.0.8",
+        "@mui/types": "^7.2.14",
+        "@mui/utils": "^5.15.14",
+        "@popperjs/core": "^2.11.8",
+        "clsx": "^2.1.0",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0",
+        "react-dom": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@mui/core-downloads-tracker": {
       "version": "5.16.7",
       "resolved": "https://registry.npmjs.org/@mui/core-downloads-tracker/-/core-downloads-tracker-5.16.7.tgz",
@@ -1081,6 +1155,146 @@
         }
       }
     },
+    "node_modules/@mui/joy": {
+      "version": "5.0.0-beta.48",
+      "resolved": "https://registry.npmjs.org/@mui/joy/-/joy-5.0.0-beta.48.tgz",
+      "integrity": "sha512-OhTvjuGl9I5IvpBr0BQyDehIW/xb2yteW6YglHJMdOb/279nItn76X1NBtPV9ImldNlBjReGwvpOXmBTTGER9w==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.23.9",
+        "@mui/base": "5.0.0-beta.40",
+        "@mui/core-downloads-tracker": "^5.16.1",
+        "@mui/system": "^5.16.1",
+        "@mui/types": "^7.2.15",
+        "@mui/utils": "^5.16.1",
+        "clsx": "^2.1.0",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@emotion/react": "^11.5.0",
+        "@emotion/styled": "^11.3.0",
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0",
+        "react-dom": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@emotion/react": {
+          "optional": true
+        },
+        "@emotion/styled": {
+          "optional": true
+        },
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/joy/node_modules/@mui/private-theming": {
+      "version": "5.16.6",
+      "resolved": "https://registry.npmjs.org/@mui/private-theming/-/private-theming-5.16.6.tgz",
+      "integrity": "sha512-rAk+Rh8Clg7Cd7shZhyt2HGTTE5wYKNSJ5sspf28Fqm/PZ69Er9o6KX25g03/FG2dfpg5GCwZh/xOojiTfm3hw==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.23.9",
+        "@mui/utils": "^5.16.6",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/joy/node_modules/@mui/styled-engine": {
+      "version": "5.16.6",
+      "resolved": "https://registry.npmjs.org/@mui/styled-engine/-/styled-engine-5.16.6.tgz",
+      "integrity": "sha512-zaThmS67ZmtHSWToTiHslbI8jwrmITcN93LQaR2lKArbvS7Z3iLkwRoiikNWutx9MBs8Q6okKvbZq1RQYB3v7g==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.23.9",
+        "@emotion/cache": "^11.11.0",
+        "csstype": "^3.1.3",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@emotion/react": "^11.4.1",
+        "@emotion/styled": "^11.3.0",
+        "react": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@emotion/react": {
+          "optional": true
+        },
+        "@emotion/styled": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/@mui/joy/node_modules/@mui/system": {
+      "version": "5.16.7",
+      "resolved": "https://registry.npmjs.org/@mui/system/-/system-5.16.7.tgz",
+      "integrity": "sha512-Jncvs/r/d/itkxh7O7opOunTqbbSSzMTHzZkNLM+FjAOg+cYAZHrPDlYe1ZGKUYORwwb2XexlWnpZp0kZ4AHuA==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.23.9",
+        "@mui/private-theming": "^5.16.6",
+        "@mui/styled-engine": "^5.16.6",
+        "@mui/types": "^7.2.15",
+        "@mui/utils": "^5.16.6",
+        "clsx": "^2.1.0",
+        "csstype": "^3.1.3",
+        "prop-types": "^15.8.1"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/mui-org"
+      },
+      "peerDependencies": {
+        "@emotion/react": "^11.5.0",
+        "@emotion/styled": "^11.3.0",
+        "@types/react": "^17.0.0 || ^18.0.0",
+        "react": "^17.0.0 || ^18.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@emotion/react": {
+          "optional": true
+        },
+        "@emotion/styled": {
+          "optional": true
+        },
+        "@types/react": {
+          "optional": true
+        }
+      }
+    },
     "node_modules/@mui/material": {
       "version": "5.16.7",
       "resolved": "https://registry.npmjs.org/@mui/material/-/material-5.16.7.tgz",
@@ -1559,6 +1773,18 @@
         "node": ">=14.0.0"
       }
     },
+    "node_modules/@restart/hooks": {
+      "version": "0.4.16",
+      "resolved": "https://registry.npmjs.org/@restart/hooks/-/hooks-0.4.16.tgz",
+      "integrity": "sha512-f7aCv7c+nU/3mF7NWLtVVr0Ra80RqsO89hO72r+Y/nvQr5+q0UFGkocElTH6MJApvReVh6JHUFYn2cw1WdHF3w==",
+      "license": "MIT",
+      "dependencies": {
+        "dequal": "^2.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
     "node_modules/@rollup/rollup-android-arm-eabi": {
       "version": "4.19.0",
       "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.19.0.tgz",
@@ -1767,6 +1993,12 @@
         "win32"
       ]
     },
+    "node_modules/@socket.io/component-emitter": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/@socket.io/component-emitter/-/component-emitter-3.1.2.tgz",
+      "integrity": "sha512-9BCxFwvbGg/RsZK9tjXd8s4UcwR0MWeFQ1XEKIQVVvAGJyINdrqKMcTRyLoK8Rse1GjzLV9cwjWV1olXRWEXVA==",
+      "license": "MIT"
+    },
     "node_modules/@types/babel__core": {
       "version": "7.20.5",
       "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
@@ -1850,6 +2082,12 @@
         "@types/react": "*"
       }
     },
+    "node_modules/@types/warning": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/@types/warning/-/warning-3.0.3.tgz",
+      "integrity": "sha512-D1XC7WK8K+zZEveUPY+cf4+kgauk8N4eHr/XIHXGlGYkHLud6hK9lYfZk1ry1TNh798cZUCgb6MqGEG8DkJt6Q==",
+      "license": "MIT"
+    },
     "node_modules/@ungap/structured-clone": {
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz",
@@ -2368,6 +2606,18 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/date-arithmetic": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/date-arithmetic/-/date-arithmetic-4.1.0.tgz",
+      "integrity": "sha512-QWxYLR5P/6GStZcdem+V1xoto6DMadYWpMXU82ES3/RfR3Wdwr3D0+be7mgOJ+Ov0G9D5Dmb9T17sNLQYj9XOg==",
+      "license": "MIT"
+    },
+    "node_modules/dayjs": {
+      "version": "1.11.13",
+      "resolved": "https://registry.npmjs.org/dayjs/-/dayjs-1.11.13.tgz",
+      "integrity": "sha512-oaMBel6gjolK862uaPQOVTA7q3TZhuSvuMQAAglQDOWYO9A91IrAOUJEyKVlqJlHE0vq5p5UXxzdPfMH/x6xNg==",
+      "license": "MIT"
+    },
     "node_modules/debug": {
       "version": "4.3.5",
       "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.5.tgz",
@@ -2433,6 +2683,15 @@
         "node": ">=0.4.0"
       }
     },
+    "node_modules/dequal": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/dequal/-/dequal-2.0.3.tgz",
+      "integrity": "sha512-0je+qPKHEMohvfRTCEo3CrPG6cAzAYgmzKyxRiYSSDkS6eGJdyVJm7WaYA5ECaAD9wLB2T4EEeymA5aFVcYXCA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/doctrine": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
@@ -2460,6 +2719,28 @@
       "integrity": "sha512-Vb3xHHYnLseK8vlMJQKJYXJ++t4u1/qJ3vykuVrVjvdiOEhYyT1AuP4x03G8EnPmYvYOhe9T+dADTmthjRQMkA==",
       "dev": true
     },
+    "node_modules/engine.io-client": {
+      "version": "6.5.4",
+      "resolved": "https://registry.npmjs.org/engine.io-client/-/engine.io-client-6.5.4.tgz",
+      "integrity": "sha512-GeZeeRjpD2qf49cZQ0Wvh/8NJNfeXkXXcoGh+F77oEAgo9gUHwT1fCRxSNU+YEEaysOJTnsFHmM5oAcPy4ntvQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@socket.io/component-emitter": "~3.1.0",
+        "debug": "~4.3.1",
+        "engine.io-parser": "~5.2.1",
+        "ws": "~8.17.1",
+        "xmlhttprequest-ssl": "~2.0.0"
+      }
+    },
+    "node_modules/engine.io-parser": {
+      "version": "5.2.3",
+      "resolved": "https://registry.npmjs.org/engine.io-parser/-/engine.io-parser-5.2.3.tgz",
+      "integrity": "sha512-HqD3yTBfnBxIrbnM1DoD6Pcq8NECnh8d4As1Qgh0z5Gg3jRRIqijury0CL3ghu/edArpUYiYqQiDUQBIs4np3Q==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=10.0.0"
+      }
+    },
     "node_modules/error-ex": {
       "version": "1.3.2",
       "resolved": "https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz",
@@ -3241,6 +3522,11 @@
         "node": ">=10.13.0"
       }
     },
+    "node_modules/globalize": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/globalize/-/globalize-0.1.1.tgz",
+      "integrity": "sha512-5e01v8eLGfuQSOvx2MsDMOWS0GFtCx1wPzQSmcHw4hkxFzrQDBO3Xwg/m8Hr/7qXMrHeOIE29qWVzyv06u1TZA=="
+    },
     "node_modules/globals": {
       "version": "11.12.0",
       "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
@@ -3434,6 +3720,15 @@
         "node": ">= 0.4"
       }
     },
+    "node_modules/invariant": {
+      "version": "2.2.4",
+      "resolved": "https://registry.npmjs.org/invariant/-/invariant-2.2.4.tgz",
+      "integrity": "sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
     "node_modules/is-array-buffer": {
       "version": "3.0.4",
       "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.4.tgz",
@@ -3892,6 +4187,11 @@
         "node": ">=4.0"
       }
     },
+    "node_modules/keymaster": {
+      "version": "1.6.2",
+      "resolved": "https://registry.npmjs.org/keymaster/-/keymaster-1.6.2.tgz",
+      "integrity": "sha512-OvA/AALN8IDKKkTk2Z+bDrzs/SQao4lo/QPbwSdDvm+frxfiYiYCSn1aHFUypJY3SruAO1y/c771agBmTXqUtg=="
+    },
     "node_modules/keyv": {
       "version": "4.5.4",
       "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
@@ -3934,6 +4234,18 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
+    "node_modules/lodash": {
+      "version": "4.17.21",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
+      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
+      "license": "MIT"
+    },
+    "node_modules/lodash-es": {
+      "version": "4.17.21",
+      "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
+      "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==",
+      "license": "MIT"
+    },
     "node_modules/lodash.merge": {
       "version": "4.6.2",
       "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
@@ -3960,6 +4272,21 @@
         "yallist": "^3.0.2"
       }
     },
+    "node_modules/luxon": {
+      "version": "3.5.0",
+      "resolved": "https://registry.npmjs.org/luxon/-/luxon-3.5.0.tgz",
+      "integrity": "sha512-rh+Zjr6DNfUYR3bPwJEnuwDdqMbxZW7LOQfUN4B54+Cl+0o5zaU9RJ6bcidfDtC1cWCZXQ+nvX8bf6bAji37QQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/memoize-one": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/memoize-one/-/memoize-one-6.0.0.tgz",
+      "integrity": "sha512-rkpe71W0N0c0Xz6QD0eJETuWAJGnJ9afsl1srmwPrI+yBCkge5EycXXbYRyvL29zZVUWQCY7InPRCv3GDXuZNw==",
+      "license": "MIT"
+    },
     "node_modules/mime-db": {
       "version": "1.52.0",
       "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
@@ -4002,6 +4329,18 @@
         "node": "*"
       }
     },
+    "node_modules/moment-timezone": {
+      "version": "0.5.45",
+      "resolved": "https://registry.npmjs.org/moment-timezone/-/moment-timezone-0.5.45.tgz",
+      "integrity": "sha512-HIWmqA86KcmCAhnMAN0wuDOARV/525R2+lOLotuGFzn4HO+FH+/645z2wx0Dt3iDv6/p61SIvKnDstISainhLQ==",
+      "license": "MIT",
+      "dependencies": {
+        "moment": "^2.29.4"
+      },
+      "engines": {
+        "node": "*"
+      }
+    },
     "node_modules/ms": {
       "version": "2.1.2",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
@@ -4364,6 +4703,43 @@
         "node": ">=0.10.0"
       }
     },
+    "node_modules/react-big-calendar": {
+      "version": "1.13.4",
+      "resolved": "https://registry.npmjs.org/react-big-calendar/-/react-big-calendar-1.13.4.tgz",
+      "integrity": "sha512-eTc67wNHrEbtK7SW2dKlAWjPTcaMfg8BaL5ei4BQ/5FKzVOt3LrmBiq7hr9sOxOYtOfMRxWYMkjkZRvrlRWRBw==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.20.7",
+        "clsx": "^1.2.1",
+        "date-arithmetic": "^4.1.0",
+        "dayjs": "^1.11.7",
+        "dom-helpers": "^5.2.1",
+        "globalize": "^0.1.1",
+        "invariant": "^2.2.4",
+        "lodash": "^4.17.21",
+        "lodash-es": "^4.17.21",
+        "luxon": "^3.2.1",
+        "memoize-one": "^6.0.0",
+        "moment": "^2.29.4",
+        "moment-timezone": "^0.5.40",
+        "prop-types": "^15.8.1",
+        "react-overlays": "^5.2.1",
+        "uncontrollable": "^7.2.1"
+      },
+      "peerDependencies": {
+        "react": "^16.14.0 || ^17 || ^18",
+        "react-dom": "^16.14.0 || ^17 || ^18"
+      }
+    },
+    "node_modules/react-big-calendar/node_modules/clsx": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/clsx/-/clsx-1.2.1.tgz",
+      "integrity": "sha512-EcR6r5a8bj6pu3ycsa/E/cKVGuTgZJZdsyUYHOksG/UHIiKfjxzRxYJpyVBwYaQeOvghal9fcc4PidlgzugAQg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/react-dom": {
       "version": "18.3.1",
       "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
@@ -4381,6 +4757,46 @@
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
       "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
     },
+    "node_modules/react-lifecycles-compat": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",
+      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA==",
+      "license": "MIT"
+    },
+    "node_modules/react-overlays": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/react-overlays/-/react-overlays-5.2.1.tgz",
+      "integrity": "sha512-GLLSOLWr21CqtJn8geSwQfoJufdt3mfdsnIiQswouuQ2MMPns+ihZklxvsTDKD3cR2tF8ELbi5xUsvqVhR6WvA==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.13.8",
+        "@popperjs/core": "^2.11.6",
+        "@restart/hooks": "^0.4.7",
+        "@types/warning": "^3.0.0",
+        "dom-helpers": "^5.2.0",
+        "prop-types": "^15.7.2",
+        "uncontrollable": "^7.2.1",
+        "warning": "^4.0.3"
+      },
+      "peerDependencies": {
+        "react": ">=16.3.0",
+        "react-dom": ">=16.3.0"
+      }
+    },
+    "node_modules/react-popup": {
+      "version": "0.11.2",
+      "resolved": "https://registry.npmjs.org/react-popup/-/react-popup-0.11.2.tgz",
+      "integrity": "sha512-1KzaBI20eqhg0CUYJvkeobvS0NfAz73xpxXNJs6s8XKk13ypYD7VjxS1LMtOIQohkqL5GhkZqC978YvH39qUNw==",
+      "license": "MIT",
+      "dependencies": {
+        "keymaster": "^1.6.2"
+      },
+      "peerDependencies": {
+        "prop-types": "^15.6.0",
+        "react": "^17.0.2 || ^18.0.0",
+        "react-dom": "^17.0.2 || ^18.0.0"
+      }
+    },
     "node_modules/react-refresh": {
       "version": "0.14.2",
       "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.14.2.tgz",
@@ -4725,6 +5141,34 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/socket.io-client": {
+      "version": "4.7.5",
+      "resolved": "https://registry.npmjs.org/socket.io-client/-/socket.io-client-4.7.5.tgz",
+      "integrity": "sha512-sJ/tqHOCe7Z50JCBCXrsY3I2k03iOiUe+tj1OmKeD2lXPiGH/RUCdTZFoqVyN7l1MnpIzPrGtLcijffmeouNlQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@socket.io/component-emitter": "~3.1.0",
+        "debug": "~4.3.2",
+        "engine.io-client": "~6.5.2",
+        "socket.io-parser": "~4.2.4"
+      },
+      "engines": {
+        "node": ">=10.0.0"
+      }
+    },
+    "node_modules/socket.io-parser": {
+      "version": "4.2.4",
+      "resolved": "https://registry.npmjs.org/socket.io-parser/-/socket.io-parser-4.2.4.tgz",
+      "integrity": "sha512-/GbIKmo8ioc+NIWIhwdecY0ge+qVBSMdgxGygevmdHj24bsfgtCmcUUcQ5ZzcylGFHsN3k4HB4Cgkl96KVnuew==",
+      "license": "MIT",
+      "dependencies": {
+        "@socket.io/component-emitter": "~3.1.0",
+        "debug": "~4.3.1"
+      },
+      "engines": {
+        "node": ">=10.0.0"
+      }
+    },
     "node_modules/source-map": {
       "version": "0.5.7",
       "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz",
@@ -5004,6 +5448,21 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/uncontrollable": {
+      "version": "7.2.1",
+      "resolved": "https://registry.npmjs.org/uncontrollable/-/uncontrollable-7.2.1.tgz",
+      "integrity": "sha512-svtcfoTADIB0nT9nltgjujTi7BzVmwjZClOmskKu/E8FW9BXzg9os8OLr4f8Dlnk0rYWJIWr4wv9eKUXiQvQwQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@babel/runtime": "^7.6.3",
+        "@types/react": ">=16.9.11",
+        "invariant": "^2.2.4",
+        "react-lifecycles-compat": "^3.0.4"
+      },
+      "peerDependencies": {
+        "react": ">=15.0.0"
+      }
+    },
     "node_modules/update-browserslist-db": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.0.tgz",
@@ -5098,6 +5557,15 @@
         }
       }
     },
+    "node_modules/warning": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
+      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.0.0"
+      }
+    },
     "node_modules/which": {
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
@@ -5207,6 +5675,35 @@
       "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
       "dev": true
     },
+    "node_modules/ws": {
+      "version": "8.17.1",
+      "resolved": "https://registry.npmjs.org/ws/-/ws-8.17.1.tgz",
+      "integrity": "sha512-6XQFvXTkbfUOZOKKILFG1PDK2NDQs4azKQl26T0YS5CxqWLgXajbPZ+h4gZekJyRqFU8pvnbAbbs/3TgRPy+GQ==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=10.0.0"
+      },
+      "peerDependencies": {
+        "bufferutil": "^4.0.1",
+        "utf-8-validate": ">=5.0.2"
+      },
+      "peerDependenciesMeta": {
+        "bufferutil": {
+          "optional": true
+        },
+        "utf-8-validate": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/xmlhttprequest-ssl": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/xmlhttprequest-ssl/-/xmlhttprequest-ssl-2.0.0.tgz",
+      "integrity": "sha512-QKxVRxiRACQcVuQEYFsI1hhkrMlrXHPegbbd1yn9UHOmRxY+si12nQYzri3vbzt8VdTTRviqcKxcyllFas5z2A==",
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
     "node_modules/yallist": {
       "version": "3.1.1",
       "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
diff --git a/migdalor_tenant/package.json b/migdalor_tenant/package.json
index 3b11adb..f02f888 100644
--- a/migdalor_tenant/package.json
+++ b/migdalor_tenant/package.json
@@ -13,6 +13,7 @@
     "@emotion/react": "^11.13.3",
     "@emotion/styled": "^11.13.0",
     "@mui/icons-material": "^5.16.7",
+    "@mui/joy": "^5.0.0-beta.48",
     "@mui/material": "^5.16.7",
     "@mui/system": "^6.0.1",
     "@mui/x-data-grid": "^7.15.0",
@@ -20,8 +21,11 @@
     "jss-rtl": "^0.3.0",
     "moment": "^2.30.1",
     "react": "^18.3.1",
+    "react-big-calendar": "^1.13.4",
     "react-dom": "^18.3.1",
-    "react-router-dom": "^6.26.0"
+    "react-popup": "^0.11.2",
+    "react-router-dom": "^6.26.0",
+    "socket.io-client": "^4.7.5"
   },
   "devDependencies": {
     "@types/react": "^18.3.3",
diff --git a/migdalor_tenant/src/App.jsx b/migdalor_tenant/src/App.jsx
index 7dee4c4..8982f2a 100644
--- a/migdalor_tenant/src/App.jsx
+++ b/migdalor_tenant/src/App.jsx
@@ -9,26 +9,36 @@ import GoodMorningProtocol from "./Components/GoodMorningProtocol.jsx";
 import {ThemeProvider} from '@mui/material/styles';
 import Messages from "./Components/Messages.jsx";
 import CacheRTL from "./Cache/CacheRTL.jsx";
-
+import FullCalendar from "./Components/Calendar/FullCalendar.jsx";
+import NotificationProvider from "./NotificationsProvider/NotificationsProvider.jsx";
+import Profile from "./Components/Profile.jsx";
+import Obituaries from "./Components/Obituaries.jsx";
+import Initiatives from "./Components/Initiatives.jsx";
+import OpeningHours from "./Components/OpeningHours.jsx";
+import TennantComitte from "./Components/TennantCommittee.jsx"
+import ForgotPassword from "./Components/ForgotPassword.jsx";
 const App = () => {
 
     return (
         <CacheRTL>
             <ThemeProvider theme={theme}>
                 <UserProvider>
-                    <BrowserRouter>
-                        <Routes>
-                            <Route path="/login" element={<Login/>}/>
-                            <Route
-                                path="/*"
-                                element={
-                                    <ProtectedRoute>
-                                        <AppRoutes/>
-                                    </ProtectedRoute>
-                                }
-                            />
-                        </Routes>
-                    </BrowserRouter>
+                    <NotificationProvider>
+                        <BrowserRouter>
+                            <Routes>
+                                <Route path="/login" element={<Login/>}/>
+                                <Route path="/forgotpassword" element={<ForgotPassword/>}/>
+                                <Route
+                                    path="/*"
+                                    element={
+                                        <ProtectedRoute>
+                                            <AppRoutes/>
+                                        </ProtectedRoute>
+                                    }
+                                />
+                            </Routes>
+                        </BrowserRouter>
+                    </NotificationProvider>
                 </UserProvider>
             </ThemeProvider>
         </CacheRTL>
@@ -57,6 +67,31 @@ const AppRoutes = () => {
             path: '/messages',
             element: <Messages/>
         }
+        ,
+        {
+            path: '/activitiesRegistration',
+            element: <FullCalendar/>
+        },
+        {
+            path: '/profile',
+            element: <Profile/>
+        },
+        {
+            path: '/obituaries',
+            element: <Obituaries/>
+        }  ,
+        {
+            path: '/creatingInitiative',
+            element: <Initiatives/>
+        }   ,
+        {
+            path: '/openingHours',
+            element: <OpeningHours/>
+        } ,
+        {
+            path: '/tenantCommittee',
+            element: <TennantComitte/>
+        }
     ];
 
     return useRoutes(routes);
diff --git a/migdalor_tenant/src/Auth/Auth.jsx b/migdalor_tenant/src/Auth/Auth.jsx
index 4bf2128..f03d893 100644
--- a/migdalor_tenant/src/Auth/Auth.jsx
+++ b/migdalor_tenant/src/Auth/Auth.jsx
@@ -4,23 +4,7 @@ import axios from 'axios';
 export const UserContext = createContext();
 
 export const UserProvider = ({ children }) => {
-    const [user, setUser] = useState({
-        "id": 886119921,
-        "firstName": "פאר",
-        "lastName": "פיכמן",
-        "phoneNumber": "0526770546",
-        "residentID": "204683650",
-        "dateOfBirth": "2024-08-30T00:00:00",
-        "previousAddress": "רמת גן",
-        "seniority": null,
-        "currentAddress": null,
-        "profession": "מתכנת",
-        "email": "peerfikhman@gmail.com",
-        "aboutMe": null,
-        "username": "204683650",
-        "password": "02cf8e28",
-        "departmentId": null
-    });
+    const [user, setUser] = useState(null);
     const login = async (username, password) => {
         try {
             const response = await axios.post('https://localhost:7149/api/login/ResidentLogin', {
@@ -30,6 +14,7 @@ export const UserProvider = ({ children }) => {
             const { token, resident  } = response.data;
             localStorage.setItem('token', token);
             setUser(resident);
+            console.log(resident)
         } catch (error) {
             throw new Error('Login failed');
         }
diff --git a/migdalor_tenant/src/CSS/Home.css b/migdalor_tenant/src/CSS/Home.css
index b19837b..036d972 100644
--- a/migdalor_tenant/src/CSS/Home.css
+++ b/migdalor_tenant/src/CSS/Home.css
@@ -17,7 +17,6 @@ body, html {
   margin: 0; /* Remove default margin */
   padding: 0; /* Remove default padding */
   min-height: 100vh;
-  margin-top: 20%;
   margin-bottom: 20%;
 }
 
@@ -27,7 +26,7 @@ body, html {
   flex-direction: column;
   align-items: center;
   margin-bottom: 20px;
-  margin-top: 20%;
+  margin-top: 30%;
   max-width: 100%;
 }
 .welcom-header{
diff --git a/migdalor_tenant/src/Components/BackButton.jsx b/migdalor_tenant/src/Components/BackButton.jsx
index 62d08f6..e81bf46 100644
--- a/migdalor_tenant/src/Components/BackButton.jsx
+++ b/migdalor_tenant/src/Components/BackButton.jsx
@@ -17,8 +17,8 @@ const BackButton = () => {
             position: 'absolute',
             height: 50,
             width: 50,
-            top: "5%",
-            left:"5%",
+            top: "3%",
+            left:"3%",
             backgroundColor: theme.palette.secondary.main,
             border: '3px solid white',
         }} onClick={onClick}>
diff --git a/migdalor_tenant/src/Components/Calendar/ActivityModal.jsx b/migdalor_tenant/src/Components/Calendar/ActivityModal.jsx
new file mode 100644
index 0000000..e05a03e
--- /dev/null
+++ b/migdalor_tenant/src/Components/Calendar/ActivityModal.jsx
@@ -0,0 +1,139 @@
+import * as React from 'react';
+import Backdrop from '@mui/material/Backdrop';
+import Box from '@mui/material/Box';
+import Modal from '@mui/material/Modal';
+import Fade from '@mui/material/Fade';
+import Button from '@mui/material/Button';
+import Typography from '@mui/material/Typography';
+import CloseIcon from '@mui/icons-material/Close';
+import {useContext, useEffect, useState} from "react";
+import * as ActivitiesRequests from '../../Requests/Activities/ActivitiesRequests.jsx'
+import MessageModal from "../MessageModal.jsx";
+import {useTheme} from "@mui/material/styles";
+import {styled} from "@mui/system";
+import moment from "moment";
+import {UserContext} from "../../Auth/Auth.jsx";
+
+
+const Row = styled('Box')({
+    marginBottom: 10,
+})
+const ActivityModal = ({isParticipating, initiativeNumber, open, onClose, onActivityJoined}) => {
+
+    const {user} = useContext(UserContext);
+
+    const theme = useTheme()
+
+    const [activity, setActivity] = useState({});
+    const [message, setMessage] = useState('');
+    const [isAvailable , setIsAvailable] = useState(true)
+    const [availablePlaces , setAvailablePlaces] = useState(true)
+    // const handleClose = () => setOpen();
+
+    const handelJoinActivity = async () => {
+        await ActivitiesRequests.JoinActivity(initiativeNumber, user.id);
+        await onActivityJoined();
+        setMessage('הצטרפת בהצלחה לפעילות')
+    }
+    const handelRemoveFromActivity = async () => {
+        await ActivitiesRequests.RemoveFromActivity(initiativeNumber, user.id);
+        await onActivityJoined();
+        setMessage('הוסרת בהצלחה מהפעילות')
+    }
+    const handleOpenCloseModal = () => {
+        setMessage('')
+    }
+
+    useEffect(() => {
+        ActivitiesRequests.GetParticiapntsInActivity(initiativeNumber)
+            .then(particapnts => {
+                    setIsAvailable(particapnts.length < activity.maxParticipants)
+                    setAvailablePlaces(activity.maxParticipants  - particapnts.length)
+                }
+            )
+
+    }, [activity]);
+
+
+    useEffect(() => {
+        ActivitiesRequests.GetActivityById(initiativeNumber)
+            .then(act => {
+                setActivity(act)
+            })
+    }, [initiativeNumber])
+    return (
+        <Modal
+            open={open}
+            onClose={onClose}
+            aria-Typographyledby="parent-modal-title"
+            aria-describedby="parent-modal-description"
+        >
+            <Box
+                sx={{
+                    position: 'absolute',
+                    left: '50%',
+                    top: '50%',
+                    transform: 'translate(-50%, -50%)',
+                    height: "80%",
+                    width: "80%",
+                    backgroundColor: '#F6F2E4',
+                    borderRadius: 10,
+                    display: 'flex',
+                    flexDirection: 'column'
+                }}>
+                <Button sx={{
+                    alignSelf: 'start',
+                    marginTop: '3%', marginRight: "3%"
+                }}>
+                    <CloseIcon
+                        onClick={onClose}/>
+                </Button>
+                <Typography variant={"h2"} sx={{color: 'black', alignSelf: 'center'}}>פרטי הפעילות</Typography>
+                <Box
+                    sx={{
+                        marginRight: '10%',
+                        marginTop: '5%'
+                    }}>
+
+                    <Row>
+                        <Typography variant={"h5"}>שם הפעילות:</Typography>
+                        <Typography>{activity?.activityName}</Typography>
+                    </Row>
+                    <Row>
+
+                        <Typography variant={"h5"}>תאריך:</Typography>
+                        <Typography>{moment(activity?.date).format("DD/MM/YYYY")}</Typography>
+                    </Row>
+
+                    <Row>
+
+                        <Typography variant={"h5"}>שעת התחלה:</Typography>
+                        <Typography>{moment(activity?.time, "HH:mm:ss").format("HH:mm")}</Typography>
+                    </Row>
+
+                    <Row>
+
+                        <Typography variant={"h5"}>מס' מקומות נותר:</Typography>
+                        <Typography>{availablePlaces}</Typography>
+                    </Row>
+
+                    <Row>
+
+                        <Typography variant={"h5"}>תיאור נוסף:</Typography>
+                        <Typography>{activity?.description}</Typography>
+                    </Row>
+                </Box>
+
+                {isParticipating ?
+                    <Button sx={{alignSelf: 'center',width:'50%'}}
+                            color="error"  variant="contained" size="medium" onClick={handelRemoveFromActivity}> בטל השתתפות </Button>
+                    :
+                    <Button disabled ={!isAvailable}
+                            sx={{alignSelf: 'center',width:'50%'}} variant="contained" size="medium" onClick={handelJoinActivity}> הצטרף לפעילות</Button>}
+                <MessageModal message={message} open={message !== ''} handleClose={handleOpenCloseModal}></MessageModal>
+            </Box>
+        </Modal>
+    );
+}
+
+export default ActivityModal;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/Calendar/EventsTable.jsx b/migdalor_tenant/src/Components/Calendar/EventsTable.jsx
new file mode 100644
index 0000000..c94a3bf
--- /dev/null
+++ b/migdalor_tenant/src/Components/Calendar/EventsTable.jsx
@@ -0,0 +1,234 @@
+import * as React from 'react';
+import {createTheme, ThemeProvider, useTheme} from '@mui/material/styles';
+import Box from '@mui/material/Box';
+import Table from '@mui/material/Table';
+import TableBody from '@mui/material/TableBody';
+import TableCell from '@mui/material/TableCell';
+import TableContainer from '@mui/material/TableContainer';
+import TableFooter from '@mui/material/TableFooter';
+import TablePagination from '@mui/material/TablePagination';
+import TableRow from '@mui/material/TableRow';
+import Paper from '@mui/material/Paper';
+import IconButton from '@mui/material/IconButton';
+import FirstPageIcon from '@mui/icons-material/FirstPage';
+import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';
+import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';
+import LastPageIcon from '@mui/icons-material/LastPage';
+import {Button, Container, TableHead, Typography} from "@mui/material";
+import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
+import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
+import Collapse from '@mui/material/Collapse';
+import {useContext, useEffect, useState} from "react";
+import * as ActivitiesRequests from '../../Requests/Activities/ActivitiesRequests.jsx/'
+import {heIL} from "@mui/material/locale";
+import moment from "moment";
+import {styled} from "@mui/system";
+import theme from "../../Theme/Theme.jsx";
+import BackButton from "../BackButton.jsx";
+import {UserContext} from "../../Auth/Auth.jsx";
+
+
+const Status = styled('Box')({
+    display: "flex",
+    width: "75%",
+    height: "25%",
+    justifyContent: "center",
+    opacity: "70%",
+    borderRadius: 20
+
+})
+const Row = ({row, onClick}) => {
+    const [open, setOpen] = React.useState(false);
+    return (
+        <React.Fragment>
+            <TableRow sx={{'& > *': {borderBottom: 'unset'}}}>
+                <TableCell dir={"rtl"}>
+                    <IconButton
+                        aria-label="expand row"
+                        size="small"
+                        onClick={() => setOpen(!open)}
+                    >
+                        {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}
+                    </IconButton>
+                </TableCell>
+                <TableCell align="right" sx={{direction: 'rtl'}}>
+                <Status sx={{
+                    backgroundColor: row.type === 'initiative' ? "#f44336" : "#3f51b5"
+                }}> <Typography sx={{fontWeight:"bold"}}>
+                    {row.type === 'activity' ? "פעילות" : "יוזמה"}
+                </Typography>
+                </Status>
+                </TableCell>
+                <TableCell align="right" sx={{direction: 'rtl'}}>{moment(row.date).format('DD/MM/YYYY')}</TableCell>
+                <TableCell align="right">{moment(row.time, "HH:mm:ss").format('HH:mm')}</TableCell>
+                <TableCell align="right">{row.name}</TableCell>
+                <TableCell><Button variant="contained" onClick={(e)=> onClick(row)}>
+                    {row.type === 'activity' ?  "צפה בפעילות" : "צפה ביוזמה"}
+                </Button></TableCell>
+            </TableRow>
+            <TableRow>
+                <TableCell align="right" style={{paddingBottom: 0, paddingTop: 0}} colSpan={3}>
+                    <Collapse in={open} timeout="auto" unmountOnExit>
+                        <Box sx={{margin: 1}}>
+                            <Typography variant="h6" gutterBottom component="div">
+                                {row.type === 'activity' ?  "תיאור הפעילות" : "תיאור היוזמה"}
+                            </Typography>
+                            <Typography>
+                                {row.description}
+                            </Typography>
+                        </Box>
+                    </Collapse>
+                </TableCell>
+            </TableRow>
+        </React.Fragment>
+    );
+}
+
+function TablePaginationActions(props) {
+    const theme = useTheme();
+    const {count, page, rowsPerPage, onPageChange} = props;
+
+    const handleFirstPageButtonClick = (
+        event,
+    ) => {
+        onPageChange(event, 0);
+    };
+
+    const handleBackButtonClick = (event) => {
+        onPageChange(event, page - 1);
+    };
+
+    const handleNextButtonClick = (event) => {
+        onPageChange(event, page + 1);
+    };
+
+    const handleLastPageButtonClick = (event) => {
+        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
+    };
+
+
+    return (
+        <Box sx={{flexShrink: 0, ml: 2.5}}>
+            <IconButton
+                onClick={handleFirstPageButtonClick}
+                disabled={page === 0}
+                aria-label="first page"
+            >
+                {theme.direction === 'rtl' ? <LastPageIcon/> : <FirstPageIcon/>}
+            </IconButton>
+            <IconButton
+                onClick={handleBackButtonClick}
+                disabled={page === 0}
+                aria-label="previous page"
+            >
+                {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}
+            </IconButton>
+            <IconButton
+                onClick={handleNextButtonClick}
+                disabled={page >= Math.ceil(count / rowsPerPage) - 1}
+                aria-label="next page"
+            >
+                {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}
+            </IconButton>
+            <IconButton
+                onClick={handleLastPageButtonClick}
+                disabled={page >= Math.ceil(count / rowsPerPage) - 1}
+                aria-label="last page"
+            >
+                {theme.direction === 'rtl' ? <FirstPageIcon/> : <LastPageIcon/>}
+            </IconButton>
+        </Box>
+    );
+}
+
+
+export default function EventsTable({ events, handleSelectEvent}) {
+    const [page, setPage] =  React.useState(0);
+    const [rowsPerPage, setRowsPerPage] = React.useState(5);
+
+    const { user } = useContext(UserContext); // Retrieve the user ID from context
+
+    // Avoid a layout jump when reaching the last page with empty rows.
+    const emptyRows =
+        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;
+
+    const existingTheme = useTheme();
+
+    const theme = React.useMemo(
+        () =>
+            createTheme({}, heIL, existingTheme, {
+                direction: 'rtl',
+            }),
+        [existingTheme],
+    );
+
+    const handleChangePage = (
+        event,
+        newPage,
+    ) => {
+        setPage(newPage);
+    };
+
+    const handleChangeRowsPerPage = (
+        event,
+    ) => {
+        setRowsPerPage(parseInt(event.target.value, 10));
+        setPage(0);
+    };
+
+
+    return (
+        <ThemeProvider theme={theme}>
+            <BackButton/>
+                <TableContainer component={Paper} sx={{width:'90%' ,maxHeight: 400, height:800 }}>
+                    <Table  stickyHeader  sx={{minWidth: 500}} aria-label="custom pagination table">
+                        <TableHead>
+                            <TableRow>
+                                <TableCell sx={{width: 5}}/>
+                                <TableCell align="right" style={{width:"20%", fontWeight:'bold', fontSize:16}}>יוזמה / פעילות</TableCell>
+                                <TableCell align="right" sx={{width:"20%", fontWeight:'bold', fontSize:16}}>תאריך</TableCell>
+                                <TableCell align="right"  sx={{width:"20%", fontWeight:'bold', fontSize:16}}>שעה</TableCell>
+                                <TableCell align="right"  sx={{width:"20%", fontWeight:'bold', fontSize:16}}>שם</TableCell>
+                                <TableCell></TableCell>
+                            </TableRow>
+                        </TableHead>
+                        <TableBody>
+                            {(rowsPerPage > 0
+                                    ? events.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
+                                    : events
+                            ).map((row, i) => (
+                                <Row onClick={handleSelectEvent} key={i} row={row}></Row>
+                            ))}
+                            {emptyRows > 0 && (
+                                <TableRow style={{height: 53 * emptyRows}}>
+                                    <TableCell colSpan={999}/>
+                                </TableRow>
+                            )}
+                        </TableBody>
+                        <TableFooter >
+                            <TableRow>
+                                <TablePagination
+                                    rowsPerPageOptions={[5, 10, 25, {label: 'All', value: -1}]}
+                                    count={events.length}
+                                    rowsPerPage={rowsPerPage}
+                                    page={page}
+                                    colSpan={999}
+                                    slotProps={{
+                                        select: {
+                                            inputProps: {
+                                                'aria-label': 'rows per page',
+                                            },
+                                            native: true,
+                                        },
+                                    }}
+                                    onPageChange={handleChangePage}
+                                    onRowsPerPageChange={handleChangeRowsPerPage}
+                                    ActionsComponent={TablePaginationActions}
+                                />
+                            </TableRow>
+                        </TableFooter>
+                    </Table>
+                </TableContainer>
+        </ThemeProvider>
+    );
+}
diff --git a/migdalor_tenant/src/Components/Calendar/FullCalendar.jsx b/migdalor_tenant/src/Components/Calendar/FullCalendar.jsx
new file mode 100644
index 0000000..62d1acb
--- /dev/null
+++ b/migdalor_tenant/src/Components/Calendar/FullCalendar.jsx
@@ -0,0 +1,281 @@
+import React, {useContext, useEffect, useState} from "react";
+import {Calendar, momentLocalizer} from "react-big-calendar";
+import moment from "moment";
+import "react-big-calendar/lib/css/react-big-calendar.css";
+import 'moment/locale/he.js';
+import * as ActivitiesRequests from '../../Requests/Activities/ActivitiesRequests.jsx'
+import * as InitativesRequests from '../../Requests/Initatives/InitativesRequests.jsx'
+import {CircularProgress, Typography, Box} from "@mui/material";
+import {styled} from "@mui/system";
+import theme from "../../Theme/Theme.jsx";
+import BackButton from "../BackButton.jsx";
+import EventsTable from "./EventsTable.jsx";
+import InitiativesTable from "../InitiativesTable.jsx";
+import ActivityModal from "./ActivityModal.jsx";
+import {UserContext} from "../../Auth/Auth.jsx";
+import InitiativeModal from "./initiativeModal.jsx";
+
+moment.locale("he");
+const localizer = momentLocalizer(moment);
+
+const StyledBox = styled('Box')({
+    position: 'static',
+    // top: '50%',
+    // left: '50%',
+    // transform: 'translate(-50%, -50%)',
+    marginTop: '3rem',
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'center',
+    flexDirection: 'column',
+    backgroundColor: theme.palette.primary.main,
+    width: '75%',
+    height: '500px',
+    borderRadius: 20
+
+});
+const Event = ({event, onClick}) => {
+
+    const {type} = event.event;
+    return (
+        <Box sx={{
+            height: 20, display: 'flex', alignItems: 'start',
+            color: type === 'activity' ? 'blue' : 'red'
+        }}>
+            <Typography>
+                {event.title}
+            </Typography>
+        </Box>
+    )
+}
+
+const ReactBigCalendar = () => {
+    const [eventsData, setEventsData] = useState([]);
+    const [activities, setActivities] = useState([]);
+    const [initiatives, setInitiatives] = useState([]);
+    const [loading, setLoading] = useState(false);
+    const [selectedActivity, setSelectedActivity] = useState(0);
+    const [selectedInitiative, setSelectedInitiative] = useState(0);
+    const [participatedActivities, setParticipatedActivities] = useState([]);
+    const [participatedInitiatives, setParticipatedInitiatives] = useState([]);
+    const [ participatedEvents, setParticipatedEvents] = useState([]);
+
+    const {user} = useContext(UserContext);
+
+
+    useEffect(() => {
+        setLoading(true);
+
+        ActivitiesRequests.GetAllActivities().then(acts => setActivities(acts));
+        InitativesRequests.GetAllInitiatives().then(inits => setInitiatives(inits));
+        ActivitiesRequests.GetActivitiesResidentParticipating(user.id).then(acts => setParticipatedActivities(acts));
+        InitativesRequests.GetInitiativeResidentParticipating(user.id).then(inits => setParticipatedInitiatives(inits));
+
+    }, []);
+
+    useEffect(() => {
+
+        const activityEvents = activities.map(act => {
+            const actDate = act.date.split('T')[0];
+            const startTime = new Date(`${actDate}T${act.time}`);
+            const endTime = moment(startTime).add(1, 'h').toDate();
+
+            return {
+                ...act,
+                id: act.id,
+                type: "activity",
+                title: act.activityName,
+                start: startTime,
+                end: endTime,
+            }
+        })
+
+        const initiativeEvents = initiatives.map(init => {
+            const initDate = init.date.split('T')[0];
+            const startTime = new Date(`${initDate}T${init.startHour}`);
+            const endTime = new Date(`${initDate}T${init.endHour}`);
+
+            return {
+                ...init,
+                id: init.initiativeNumber,
+                type: "initiative",
+                title: init.initiativeName,
+                start: startTime,
+                end: endTime
+            }
+        })
+        setEventsData([...activityEvents, ...initiativeEvents]);
+
+
+    }, [activities, initiatives]);
+
+
+    useEffect(() => {
+        setParticipatedEvents( [...participatedInitiatives, ...participatedActivities].map((e)=> {
+            return {
+                type: e.activityName ? "activity" : "initiative",
+                id: e.id || e.initiativeNumber,
+                date: e.date,
+                name: e.activityName || e.initiativeName,
+                time : e.startHour || e.time,
+                maxParticipants: e.maxParticipants,
+                description: e.invitationDescription || e.description
+            }
+        }));
+        setLoading(false)
+
+
+    }, [participatedInitiatives, participatedActivities]);
+
+
+    const eventStyleGetter = (event, start, end, isSelected) => {
+        const style = {
+            borderRadius: '0px',
+            opacity: 0.8,
+            color: 'black',
+            border: '0px',
+            display: 'block'
+        };
+        return {
+            style: style
+        };
+    }
+
+    const handleOpenCloseModal = () => {
+        setSelectedActivity(0)
+        setSelectedInitiative(0)
+    }
+
+    const handleSelectEvent = (e) => {
+        if (e.type === 'activity') setSelectedActivity(e.id);
+        else if (e.type === 'initiative') setSelectedInitiative(e.id);
+    }
+    const handleSelect = ({start, end}) => {
+        const title = window.prompt("New Event name");
+        if (title)
+            setEventsData([
+                ...eventsData,
+                {
+                    start,
+                    end,
+                    title
+                }
+            ]);
+    };
+
+    const handelActivityJoin = async () => {
+        await ActivitiesRequests.GetActivitiesResidentParticipating(user.id).then(acts => setParticipatedActivities(acts));
+    }
+    const handelInitiativeJoin = async () => {
+        await InitativesRequests.GetInitiativeResidentParticipating(user.id).then(inits => setParticipatedInitiatives(inits));
+    }
+
+    return (
+        <Box sx={{
+            display: "flex", alignItems: "center", flexDirection: "column"
+        }}>
+            <BackButton/>
+
+            <StyledBox>
+                <Typography variant={"h2"} sx={{marginTop:0}}
+                >יומן אירועים</Typography>
+                {loading ?
+                    <CircularProgress color="secondary"/> :
+                        <Calendar
+                            views={["day", "week", "month"]}
+                            selectable
+                            components={{event: (e) => <Event event={e} onClick={handleSelect}/>}}
+                            localizer={localizer}
+                            defaultDate={new Date()}
+                            defaultView="week"
+                            events={eventsData}
+                            style={{
+                                backgroundColor: "white", width: "95%",
+                                height: "90%",
+                                border: ' 1rem solid #38588E'
+                            }}
+                            onSelectEvent={(event) => handleSelectEvent(event)}
+                            // onSelectSlot={handleSelect}
+                            eventPropGetter={eventStyleGetter}
+                            messages={{
+                                next: "הבא",
+                                previous: "הקודם",
+                                today: "היום",
+                                month: "חודש",
+                                week: "שבוע",
+                                day: "יום",
+                            }}
+
+                        />
+
+                }
+            </StyledBox>
+            <Box
+                sx={{
+                    marginTop: '3rem',
+                    marginBottom: '3rem',
+                    display: 'flex',
+                    // justifyContent: 'center',
+                    alignItems: 'center',
+                    flexDirection: 'column',
+                    backgroundColor: theme.palette.primary.main,
+                    width: '75%',
+                    height: '500px',
+                    borderRadius: 5
+                }}
+
+
+            >
+                <Typography variant={"h2"} sx={{
+                    alignSelf: "center",
+                    marginTop: '1rem',
+                    marginRight: '2.5rem',
+                    marginBottom: '1rem'
+                }}>האירועים שלי</Typography>
+
+                <EventsTable events={participatedEvents} handleSelectEvent={handleSelectEvent}/>
+
+            </Box>
+            {/*<Box*/}
+            {/*    sx={{*/}
+            {/*        marginTop: '3rem',*/}
+            {/*        marginBottom: '3rem',*/}
+            {/*        display: 'flex',*/}
+            {/*        // justifyContent: 'center',*/}
+            {/*        alignItems: 'center',*/}
+            {/*        flexDirection: 'column',*/}
+            {/*        backgroundColor: theme.palette.primary.main,*/}
+            {/*        width: '75%',*/}
+            {/*        height: '500px',*/}
+            {/*        borderRadius: 5*/}
+            {/*    }}*/}
+
+
+            {/*>*/}
+            {/*    <Typography variant={"h2"} sx={{*/}
+            {/*        alignSelf: "start",*/}
+            {/*        marginTop: '1rem',*/}
+            {/*        marginRight: '2.5rem',*/}
+            {/*        marginBottom: '1rem'*/}
+
+            {/*    }}>היוזמות שלי</Typography>*/}
+            {/*    <InitiativesTable initiatives={participatedInitiatives} handelSelctedEvent={handleSelectEvent}/>*/}
+            {/*</Box>*/}
+            <ActivityModal isParticipating={participatedActivities.some((a) => {
+                return a.id === selectedActivity
+            })}
+                           initiativeNumber={selectedActivity} open={selectedActivity !== 0}
+                           onClose={handleOpenCloseModal}
+                           onActivityJoined={handelActivityJoin}/>
+            <InitiativeModal isParticipating={participatedInitiatives.some((i) => {
+                return i.initiativeNumber === selectedInitiative
+            })}
+                             initiativeNumber={selectedInitiative} open={selectedInitiative !== 0}
+                             onClose={handleOpenCloseModal}
+                             onInitiativeJoined={handelInitiativeJoin}/>
+        </Box>
+    );
+}
+
+
+export default ReactBigCalendar;
diff --git a/migdalor_tenant/src/Components/Calendar/initiativeModal.jsx b/migdalor_tenant/src/Components/Calendar/initiativeModal.jsx
new file mode 100644
index 0000000..ee7754a
--- /dev/null
+++ b/migdalor_tenant/src/Components/Calendar/initiativeModal.jsx
@@ -0,0 +1,151 @@
+import * as React from 'react';
+import Backdrop from '@mui/material/Backdrop';
+import Box from '@mui/material/Box';
+import Modal from '@mui/material/Modal';
+import Fade from '@mui/material/Fade';
+import Button from '@mui/material/Button';
+import Typography from '@mui/material/Typography';
+import CloseIcon from '@mui/icons-material/Close';
+import {useContext, useEffect, useState} from "react";
+import * as InitiativeRequests from '../../Requests/Initatives/InitativesRequests.jsx'
+import MessageModal from "../MessageModal.jsx";
+import {useTheme} from "@mui/material/styles";
+import {styled} from "@mui/system";
+import moment from "moment";
+import {UserContext} from "../../Auth/Auth.jsx";
+
+
+const Row = styled('Box')({
+    marginBottom: 10,
+})
+const InitiativeModal = ({isParticipating, initiativeNumber, open, onClose, onInitiativeJoined}) => {
+
+    const {user} = useContext(UserContext);
+
+    const theme = useTheme()
+
+    const [initiative, setInitiative] = useState({});
+    const [message, setMessage] = useState('');
+    const [isAvailable, setIsAvailable] = useState(true)
+    const [availablePlaces, setAvailablePlaces] = useState(0)
+    // const handleClose = () => setOpen();
+
+    const handelJoinInitiative = async () => {
+        await InitiativeRequests.JoinInitiative(initiativeNumber, user.id);
+        await onInitiativeJoined();
+        setMessage('הצטרפת בהצלחה ליוזמה')
+    }
+    const handelRemoveFromInitiative = async () => {
+        await InitiativeRequests.RemoveFromInitiative(initiativeNumber, user.id);
+        await onInitiativeJoined();
+        setMessage('הוסרת בהצלחה מהיוזמה')
+    }
+    const handleOpenCloseModal = () => {
+        setMessage('')
+    }
+
+    useEffect(() => {
+        InitiativeRequests.GetInitiativeResidentParticipating(initiativeNumber)
+            .then(particapnts => {
+
+                setIsAvailable(particapnts.length < initiative.maxParticipants)
+                setAvailablePlaces(initiative.maxParticipants - particapnts.length)
+            })
+        console.log(initiative)
+    }, [initiative]);
+
+
+    useEffect(() => {
+        InitiativeRequests.GetInitiativeById(initiativeNumber)
+            .then(init => {
+                setInitiative(init)
+            })
+    }, [initiativeNumber])
+    return (
+        <Modal
+            open={open}
+            onClose={onClose}
+            aria-Typographyledby="parent-modal-title"
+            aria-describedby="parent-modal-description"
+        >
+            <Box
+                sx={{
+                    position: 'absolute',
+                    left: '50%',
+                    top: '50%',
+                    transform: 'translate(-50%, -50%)',
+                    height: "80%",
+                    width: "80%",
+                    backgroundColor: '#F6F2E4',
+                    borderRadius: 10,
+                    display: 'flex',
+                    flexDirection: 'column'
+                }}>
+                <Box sx={{
+                    display: 'flex', marginTop: 2, width: "100%",
+                    flexDirection: 'column',
+                    justifyContent: 'center',
+
+                }}>
+                    <Button sx={{
+                        alignSelf: 'start',
+                        // marginTop: '1%',
+                        marginRight: "3%"
+                    }}>
+                        <CloseIcon
+                            onClick={onClose}/>
+                    </Button>
+                    <Typography variant={"h2"} sx={{color: 'black', alignSelf: 'center'}}>פרטי היוזמה</Typography>
+                </Box>
+                <Box
+                    sx={{
+                        marginRight: '10%',
+                        marginTop: '2%'
+                    }}>
+
+                    <Row>
+                        <Typography variant={"h5"}>שם היוזמה:</Typography>
+                        <Typography>{initiative?.initiativeName}</Typography>
+                    </Row>
+                    <Row>
+
+                        <Typography variant={"h5"}>תאריך:</Typography>
+                        <Typography>{moment(initiative?.date).format("DD/MM/YYYY")}</Typography>
+                    </Row>
+
+                    <Row>
+
+                        <Typography variant={"h5"}>שעת התחלה:</Typography>
+                        <Typography>{moment(initiative?.startHour, "HH:mm:ss").format("HH:mm")}</Typography>
+                    </Row>
+                    <Row>
+
+                        <Typography variant={"h5"}>שעת סיום:</Typography>
+                        <Typography>{moment(initiative?.endHour, "HH:mm:ss").format("HH:mm")}</Typography>
+                    </Row>
+
+                    <Row>
+
+                        <Typography variant={"h5"}>מס' מקמות נותר:</Typography>
+                        <Typography>{availablePlaces}</Typography>
+                    </Row>
+
+                </Box>
+                <Box sx={{display:'flex', justifyContent:'center', alignItems:'center', height:"20%"}}>
+                    {isParticipating ?
+                        <Button sx={{alignSelf: 'center', width: '50%'}}
+                                color="error" variant="contained" size="medium"
+                                onClick={handelRemoveFromInitiative}> בטל השתתפות </Button>
+                        :
+                        <Button disabled={!isAvailable}
+                                sx={{alignSelf: 'center', width: '50%'}} variant="contained" size="medium"
+                                onClick={handelJoinInitiative}> הצטרף ליוזמה</Button>}
+
+                </Box>
+                <MessageModal message={message} open={message !== ''} handleClose={handleOpenCloseModal}></MessageModal>
+            </Box>
+        </Modal>
+    );
+}
+
+export default InitiativeModal;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/CreatingInitiative.jsx b/migdalor_tenant/src/Components/CreatingInitiative.jsx
index e69de29..01a50b1 100644
--- a/migdalor_tenant/src/Components/CreatingInitiative.jsx
+++ b/migdalor_tenant/src/Components/CreatingInitiative.jsx
@@ -0,0 +1,259 @@
+import React, {useContext, useEffect, useState} from 'react';
+import '../CSS/Profile.css';
+import {styled} from "@mui/system";
+import theme from "../Theme/Theme.jsx";
+import {Button, Typography} from "@mui/material";
+import BackButton from "./BackButton.jsx";
+import {useTheme} from "@mui/material/styles";
+import {UserContext} from "../Auth/Auth.jsx";
+import moment from "moment";
+import MessageModal from "./MessageModal.jsx";
+import * as InitiativeRequests from '../Requests/Initatives/InitativesRequests.jsx'
+import Box from "@mui/material/Box";
+
+const StyledLabel = styled('Typography')({
+    color: 'white',
+    fontWeight: 'bold',
+
+})
+
+const StyledBox = styled('Box')({
+    position: 'fixed',
+    top: '50%',
+    left: '50%',
+    transform: 'translate(-50%, -50%)',
+    marginTop: '3rem',
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'center',
+    flexDirection: 'column',
+    backgroundColor: theme.palette.primary.main,
+    width: '50%',
+    height: '75%',
+    borderRadius: 20
+
+});
+const Row = styled('Box')({
+    width: '100%',
+    marginRight: '5rem',
+    display: 'flex',
+    justifyContent: 'space-between',
+    marginBottom: 10,
+})
+const CreateInitiative = () => {
+    const [details, setDetails] = useState({
+
+        initiativeName: '',
+        location: '',
+        date: ' ',
+        startHour: '',
+        endHour: '',
+        initiativeType: '',
+        invitationDescription: '',
+        maxParticipants: 0,
+        residentNumber: 0
+    });
+
+    const [showDatePlaceholder, setShowDatePlaceholder] = useState(true);
+    const [showTimePlaceholder, setShowTimePlaceholder] = useState(true);
+    const [message, setMessage] = useState('')
+    const [openModal, setOpenModal] = useState(false)
+
+    const {user} = useContext(UserContext);
+
+
+    const handleChange = (e) => {
+        let {name, value} = e.target;
+        if (name === 'birthDate') value = moment(value, 'YYYY-MM-DD').format("YYYY-MM-DDT00:00:00")
+        if (name === 'startHour' || name === 'endHour') value = moment(value, 'hh:mm').format("hh:mm:00")
+        setDetails({
+            ...details,
+            [name]: value
+        });
+    };
+
+    const handleImageUpload = (e) => {
+
+        setDetails({
+            ...details,
+            image: e.target.files[0]
+        });
+    };
+
+    const handleDateFocus = (name) => {
+        if (name === "date") {
+            setShowDatePlaceholder(false);
+        }
+
+    };
+
+    const handleDateBlur = (name) => {
+        if (name === "birthDate" && !details.birthDate) {
+            setShowDatePlaceholder(true);
+        }
+    };
+    const handekModalClose = () => {
+        setOpenModal(false)
+    }
+    const handleSubmit = async (e) => {
+        e.preventDefault();
+        const {initiativeNumber} = await InitiativeRequests.CreatInitiative({
+            ...details,
+            initiativeType: '', residentNumber: user.id
+        })
+        console.log(initiativeNumber)
+        await InitiativeRequests.JoinInitiative(initiativeNumber, user.id);
+        setMessage("יוזמה פורסמה בהצלחה")
+        setOpenModal(true);
+        // כאן תוסיף את הקוד לשמירת הנתונים על השרת
+    };
+
+    const handleTimeFocus = (e) => {
+        e.target.type = 'time';
+        setShowTimePlaceholder(false);
+    };
+    const handleTimeBlur = (e) => {
+        if (!e.target.value) {
+            e.target.type = 'text';
+            setShowTimePlaceholder(true);
+        }
+    };
+
+    return (
+        <div><BackButton/>
+            <MessageModal message={message} open={openModal} handleClose={handekModalClose}/>
+            <StyledBox>
+                <Typography variant={"h2"} sx={{margin: 'auto'}}>יצירת יוזמה</Typography>
+                <form onSubmit={handleSubmit} style={{
+                    marginTop: 20,
+                    width: "90%",
+                    height: "100%"
+                }}>
+                    <Row>
+                        <StyledLabel>שם היוזמה</StyledLabel>
+                        <input
+                            type="text"
+                            name="initiativeName"
+                            placeholder="שם היוזמה"
+                            value={details.initiativeName}
+                            onChange={handleChange}
+                            className="input"
+                            style={{
+                                width: '50%'
+                            }}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>מיקום</StyledLabel>
+
+                        <input
+                            type="text"
+                            name="location"
+                            placeholder="מיקום"
+                            value={details.location}
+                            onChange={handleChange}
+                            style={{
+                                width: '50%'
+                            }}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>תאריך</StyledLabel>
+                        <input
+                            type="text"
+                            name="date"
+                            placeholder={showDatePlaceholder ? "תאריך" : ""}
+                            value={moment(details.date, 'YYYY-MM-DDT00:00:00').format('YYYY-MM-DD')}
+                            onChange={handleChange}
+                            onFocus={() => handleDateFocus("date")}
+                            onBlur={() => handleDateBlur("date")}
+                            className="input"
+                            onClick={(e) => e.target.type = 'date'}
+                            style={{
+                                width: '50%'
+                            }}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>שעת התחלה</StyledLabel>
+
+                        <input
+                            type="time"
+                            name="startHour"
+                            placeholder={showTimePlaceholder ? "שעת התחלה" : ""}
+                            value={details.startHour === 'Invalid date' ? '' : moment(details.startHour, 'HH:mm:ss').format('HH:mm')}
+                            onChange={handleChange}
+                            onFocus={handleTimeFocus}
+                            onBlur={handleTimeBlur}
+                            className="input"
+                            style={{
+                                width: '50%'
+                            }}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>שעת סיום</StyledLabel>
+
+                        <input
+                            type="time"
+                            name="endHour"
+                            placeholder={showTimePlaceholder ? "שעת התחלה" : ""}
+                            value={details.endHour === 'Invalid date' ? '' : moment(details.endHour, 'HH:mm:ss').format('HH:mm')}
+                            onChange={handleChange}
+                            onFocus={handleTimeFocus}
+                            onBlur={handleTimeBlur}
+                            className="input"
+                            style={{
+                                width: '50%'
+                            }}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>הגבלת משתתפים</StyledLabel>
+                        <input
+                            type="number"
+                            name="maxParticipants"
+                            placeholder="הגבלת משתתפים"
+                            value={details.maxParticipants}
+                            onChange={handleChange}
+                            className="input"
+                            min="0"
+                            disabled
+                            style={{
+                                width: '50%'
+                            }}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>תיאור נוסף</StyledLabel>
+
+                        <textarea
+                            style={{resize: 'none', width: '43%'}}
+                            name="invitationDescription"
+                            placeholder="תיאור נוסף"
+                            value={details.invitationDescription}
+                            onChange={handleChange}
+                            style={{
+                                width: '50%',
+                                height: 75
+                            }}
+                        ></textarea>
+                    </Row>
+                    <Box sx={{display: 'flex', justifyContent: 'space-evenly', height: 100, alignItems: 'center'}}>
+                        <Button sx={{height: 35}} type={"submit"} color="ochre" variant="contained">שמור
+                            שינויים</Button>
+                        <Button sx={{height: 35}} onClick={handleDelete} color="error" variant="contained">מחק
+                            יוזמה</Button>
+                        <Button sx={{height: 35}} type={"submit"} color="ochre" variant="contained">שמירת
+                            היוזמה</Button>
+
+                    </Box>
+
+                </form>
+                {/* כאן תוסיף את ה-CARD של הפעילויות */}
+            </StyledBox>
+        </div>
+    );
+};
+
+export default CreateInitiative;
diff --git a/migdalor_tenant/src/Components/ForgotPassword.jsx b/migdalor_tenant/src/Components/ForgotPassword.jsx
new file mode 100644
index 0000000..44dc3f7
--- /dev/null
+++ b/migdalor_tenant/src/Components/ForgotPassword.jsx
@@ -0,0 +1,49 @@
+import React, {useContext, useState} from 'react';
+import { useNavigate} from 'react-router-dom';
+import '../CSS/LoginPage.css'; // Uncomment this line after creating the CSS file
+import LogoAndText from '../Images/LogoAndText.png';
+import TextField from '@mui/material/TextField';
+import {UserContext} from "../Auth/Auth.jsx";
+import {Typography} from "@mui/material";
+
+const ForgotPassword = () => {
+    const [residentId, setResidentId] = useState('')
+    const navigate = useNavigate();
+
+
+    const handleInputChange = (e) => {
+        setResidentId(e.target.value)
+
+    }
+
+    // const onSubmit = async()=>{
+    //     await
+    // }
+
+
+    return (
+        <div className="login-container">
+            <div className="login-logo">
+                <img src={LogoAndText} alt="Logo" />
+            </div>
+            <form className="login-form" >
+                <Typography>שחזור סיסמה</Typography>
+                <TextField
+                    id="id"
+                    label="תעודת זהות"
+                    type="search"
+                    style={{ margin: '10px', width: '100%' }}
+                    inputProps={{ dir: 'rtl' }}
+                    InputLabelProps={{ style: { direction: 'rtl' } }}
+                    value={residentId}
+                    onChange={handleInputChange}
+                />
+
+                <button type="submit" className="login-button">שחזר ססמה</button>
+                <a href="/" className="forgot-password" onClick={(e)=>navigate('/login')}>חזרה להתחברות</a>
+            </form>
+        </div>
+    );
+}
+
+export default ForgotPassword;
diff --git a/migdalor_tenant/src/Components/GoodMorningProtocol.jsx b/migdalor_tenant/src/Components/GoodMorningProtocol.jsx
index 6340e07..e462042 100644
--- a/migdalor_tenant/src/Components/GoodMorningProtocol.jsx
+++ b/migdalor_tenant/src/Components/GoodMorningProtocol.jsx
@@ -14,6 +14,7 @@ import IconButton from "@mui/material/IconButton";
 const StyledBox = styled('Box')({
     display: 'flex',
     alignItems: 'center',
+    justifyContent:'center',
     flexDirection: 'column',
     backgroundColor: theme.palette.primary.main,
     width: '75%',
@@ -84,14 +85,14 @@ const CheckInPage = () => {
                     {isCheckedIn ? (
 
                         <StyledBox>
-                            <Typography variant="h2" sx={{marginTop: 5}}> הי {user.firstName}, </Typography>
+                            <Typography variant="h2" sx={{marginTop: -5}}> היי {user.firstName}, </Typography>
                             <Typography variant="h2" sx={{marginTop: 5}}> נוהל בוקר טוב דווח בהצלחה</Typography>
-                            <Typography variant="h2" sx={{marginTop: 5}}>המשך יום טוב</Typography>
+                            <Typography variant="h2" sx={{marginTop: 5}}>המשך יום טוב!</Typography>
                         </StyledBox>
                     ) : (
                         <StyledBox>
-                            <Typography variant="h2" sx={{marginTop: 5}}> הי {user.firstName}, </Typography>
-                            <Typography variant="h2" sx={{marginTop: 5}}> טרם דיווחת נוהל בוקר טוב להיום </Typography>
+                            <Typography variant="h2" sx={{marginTop: 5}}> בוקר טוב {user.firstName}, </Typography>
+                            <Typography variant="h2" sx={{marginTop: 5}}> אנא דווח על נוהל בוקר טוב </Typography>
                             <IconButton
                                 onClick={handleCheckIn}
                                 sx={{
diff --git a/migdalor_tenant/src/Components/IconGrid.jsx b/migdalor_tenant/src/Components/IconGrid.jsx
index ab9fea2..0ca5122 100644
--- a/migdalor_tenant/src/Components/IconGrid.jsx
+++ b/migdalor_tenant/src/Components/IconGrid.jsx
@@ -2,7 +2,7 @@ import React from 'react';
 import { useNavigate } from 'react-router-dom';
 import '../CSS/Home.css';
 import { Grid, Paper, Typography } from '@mui/material';
-import { 
+import {
   Person as PersonIcon,
   Notifications as NotificationsIcon,
   Event as EventIcon,
@@ -12,22 +12,23 @@ import {
   Announcement as AnnouncementIcon,
   Map as MapIcon,
   LocalActivity as LocalActivityIcon,
-  WbSunny as WbSunnyIcon 
+  WbSunny as WbSunnyIcon
 } from '@mui/icons-material';
 import { Link } from 'react-router-dom';
+import AddBoxIcon from '@mui/icons-material/AddBox';
 
 
 const items = [
-  { icon: <PersonIcon style={{ fontSize: 40 }} />, text: 'אזור', subtext: 'אישי', route: '/profile' },
+  { icon: <PersonIcon style={{  fontSize: 40 }} />, text: 'אזור', subtext: 'אישי', route: '/profile' },
   { icon: <WbSunnyIcon style={{ fontSize: 40 }} />, text: 'נוהל', subtext: 'בוקר טוב', route: '/goodMorningProtocol' },
   { icon: <NotificationsIcon style={{ fontSize: 40 }} />, text: 'הודעות', subtext: 'שוטפות', route: '/messages' },
-  { icon: <LocalActivityIcon style={{ fontSize: 40 }} />, text: 'רישום', subtext: 'לפעילויות', route: '/activitiesRegistration' },
-  { icon: <EventIcon style={{ fontSize: 40 }} />, text: 'צור', subtext: 'אירוע', route: '/creatingInitiative' },
+  { icon: <EventIcon style={{ fontSize: 40 }} />, text: 'יומן', subtext: 'אירועים', route: '/activitiesRegistration' },
+  { icon: <AddBoxIcon style={{ fontSize: 40 }} />, text: 'צור', subtext: 'יוזמה', route: '/creatingInitiative' },
   { icon: <ContactPhoneIcon style={{ fontSize: 40 }} />, text: 'אנשי', subtext: 'קשר', route: '/contacts' },
   { icon: <AccessTimeIcon style={{ fontSize: 40 }} />, text: 'שעות', subtext: 'פתיחה', route: '/openingHours' },
   { icon: <GroupIcon style={{ fontSize: 40 }} />, text: 'ועד', subtext: 'דיירים', route: '/tenantCommittee' },
   { icon: <AnnouncementIcon style={{ fontSize: 40 }} />, text: 'הודעות', subtext: 'אבל', route: '/obituaries' },
-  { icon: <MapIcon style={{ fontSize: 40 }} />, text: 'מפת', subtext: 'הבית', route: '/' }
+  // { icon: <MapIcon style={{ fontSize: 40 }} />, text: 'מפת', subtext: 'הבית', route: '/' }
 ];
 
 const IconGrid = () => {
diff --git a/migdalor_tenant/src/Components/InitiativeCreateModal.jsx b/migdalor_tenant/src/Components/InitiativeCreateModal.jsx
new file mode 100644
index 0000000..daece9b
--- /dev/null
+++ b/migdalor_tenant/src/Components/InitiativeCreateModal.jsx
@@ -0,0 +1,258 @@
+import Modal from '@mui/material/Modal';
+
+import MessageModal from "./MessageModal.jsx";
+
+import {styled} from "@mui/system";
+
+import React, {useContext, useEffect, useState} from 'react';
+import '../CSS/Profile.css';
+import theme from "../Theme/Theme.jsx";
+import {Button, Typography} from "@mui/material";
+import {UserContext} from "../Auth/Auth.jsx";
+import moment from "moment";
+import * as InitiativeRequests from '../Requests/Initatives/InitativesRequests.jsx'
+import Box from "@mui/material/Box";
+
+const StyledLabel = styled('Typography')({
+    color: 'white',
+    fontWeight: 'bold',
+
+})
+
+const StyledBox = styled('Box')({
+    position: 'fixed',
+    top: '50%',
+    left: '50%',
+    transform: 'translate(-50%, -50%)',
+    marginTop: '3rem',
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'start',
+    flexDirection: 'column',
+    backgroundColor: theme.palette.primary.main,
+    width: '50%',
+    height: '75%',
+    borderRadius: 20
+
+});
+const Row = styled('Box')({
+    width: 'auto',
+    marginRight: 25,
+    display: 'flex',
+    justifyContent: 'space-between',
+    marginBottom: 10,
+})
+
+
+const InitiativeCreateModal = ({open, onClose}) => {
+    const [details, setDetails] = useState({
+
+        initiativeName: '',
+        location: '',
+        date: '',
+        startHour: '',
+        endHour: '',
+        initiativeType: '',
+        invitationDescription: '',
+        maxParticipants: 0,
+        residentNumber: 0
+    });
+
+    const [showDatePlaceholder, setShowDatePlaceholder] = useState(true);
+    const [showTimePlaceholder, setShowTimePlaceholder] = useState(true);
+    const [message, setMessage] = useState('')
+    const [openModal, setOpenModal] = useState(false)
+
+    const {user} = useContext(UserContext);
+
+
+    const handleChange = (e) => {
+        let {name, value} = e.target;
+        if (name === 'date') value = moment(value, 'YYYY-MM-DD').format("YYYY-MM-DDT00:00:00")
+        if (name === 'startHour' || name === 'endHour') value = moment(value, 'hh:mm').format("hh:mm:00")
+        setDetails({
+            ...details,
+            [name]: value
+        });
+    };
+
+
+    const handleDateFocus = (name) => {
+        if (name === "date" ) {
+            setShowDatePlaceholder(false);
+        }
+
+    };
+
+    const handleDateBlur = (name) => {
+        if (name === "date" && !details.date) {
+            setShowDatePlaceholder(true);
+        }
+    };
+
+    const handleSubmit = async (e) => {
+        e.preventDefault();
+        delete details.initiativeType;
+        const {initiativeNumber} = await InitiativeRequests.CreatInitiative({
+            ...details,
+            residentNumber: user.id
+        })
+        console.log(initiativeNumber)
+        await InitiativeRequests.JoinInitiative(initiativeNumber, user.id);
+        setMessage("יוזמה פורסמה בהצלחה")
+        setOpenModal(true);
+        onClose();
+    };
+
+    const handleTimeFocus = (e) => {
+        e.target.type = 'time';
+        setShowTimePlaceholder(false);
+    };
+    const handleTimeBlur = (e) => {
+        if (!e.target.value) {
+            e.target.type = 'text';
+            setShowTimePlaceholder(true);
+        }
+    };
+    const closeMessageDialog = () => setMessage('');
+
+    return (
+        <div>
+            <Modal
+                open={open}
+                onClose={onClose}
+                aria-Typographyledby="parent-modal-title"
+                aria-describedby="parent-modal-description"
+            >
+                <StyledBox>
+                    <Typography variant={"h2"}>יצירת יוזמה</Typography>
+                    <form onSubmit={handleSubmit}>
+
+                        <Row>
+                            <StyledLabel>שם היוזמה</StyledLabel>
+                            <input
+                                type="text"
+                                name="initiativeName"
+                                placeholder="שם היוזמה"
+                                value={details.initiativeName}
+                                onChange={handleChange}
+                                className="input"
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>מיקום</StyledLabel>
+
+                            <input
+                                type="text"
+                                name="location"
+                                placeholder="מיקום"
+                                value={details.location}
+                                onChange={handleChange}
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>תאריך</StyledLabel>
+                            <input
+                                type="text"
+                                name="date"
+                                placeholder={showDatePlaceholder ? "תאריך" : ""}
+                                value={moment(details.date, 'YYYY-MM-DDT00:00:00').format('YYYY-MM-DD')}
+                                onChange={handleChange}
+                                onFocus={() => handleDateFocus("date")}
+                                onBlur={() => handleDateBlur("date")}
+                                className="input"
+                                onClick={(e) => e.target.type = 'date'}
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>שעת התחלה</StyledLabel>
+
+                            <input
+                                type="time"
+                                name="startHour"
+                                placeholder={showTimePlaceholder ? "שעת התחלה" : ""}
+                                value={details.startHour === 'Invalid date' ? '' : moment(details.startHour, 'HH:mm:ss').format('HH:mm')}
+                                onChange={handleChange}
+                                onFocus={handleTimeFocus}
+                                onBlur={handleTimeBlur}
+                                className="input"
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>שעת סיום</StyledLabel>
+
+                            <input
+                                type="time"
+                                name="endHour"
+                                placeholder={showTimePlaceholder ? "שעת התחלה" : ""}
+                                value={details.endHour === 'Invalid date' ? '' : moment(details.endHour, 'HH:mm:ss').format('HH:mm')}
+                                onChange={handleChange}
+                                onFocus={handleTimeFocus}
+                                onBlur={handleTimeBlur}
+                                className="input"
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>הגבלת משתתפים</StyledLabel>
+                            <input
+                                type="number"
+                                name="maxParticipants"
+                                placeholder="הגבלת משתתפים"
+                                value={details.maxParticipants}
+                                onChange={handleChange}
+                                className="input"
+                                min="0"
+                                disabled
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>תיאור נוסף</StyledLabel>
+
+                            <textarea
+                                style={{resize: 'none', width: '43%'}}
+                                name="invitationDescription"
+                                placeholder="תיאור נוסף"
+                                value={details.invitationDescription}
+                                onChange={handleChange}
+                                style={{
+                                    width: '50%',
+                                    height: 75
+                                }}
+                            ></textarea>
+                        </Row>
+                        <Box sx={{display: 'flex', justifyContent:'space-evenly', height:100, alignItems:'center'}}>
+                            {/*<Button sx={{height:35}} type={"submit"} color="ochre" variant="contained">שמור שינויים</Button>*/}
+                            {/*<Button sx={{height:35}} onClick={handleDelete} color="error" variant="contained">מחק יוזמה</Button>*/}
+                            <Button  sx={{height:35}} type={"submit"} color="ochre" variant="contained">שמירת היוזמה</Button>
+
+                        </Box>
+
+                    </form>
+                    {/* כאן תוסיף את ה-CARD של הפעילויות */}
+                </StyledBox>
+            </Modal>
+            <MessageModal message={message}open={message !==''} handleClose={closeMessageDialog}/>
+
+        </div>
+    );
+}
+
+export default InitiativeCreateModal;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/InitiativeEditModal.jsx b/migdalor_tenant/src/Components/InitiativeEditModal.jsx
new file mode 100644
index 0000000..179cfc4
--- /dev/null
+++ b/migdalor_tenant/src/Components/InitiativeEditModal.jsx
@@ -0,0 +1,269 @@
+import Modal from '@mui/material/Modal';
+
+import MessageModal from "./MessageModal.jsx";
+
+import {styled} from "@mui/system";
+
+import React, {useContext, useEffect, useState} from 'react';
+import '../CSS/Profile.css';
+import theme from "../Theme/Theme.jsx";
+import {Button, Typography} from "@mui/material";
+import {UserContext} from "../Auth/Auth.jsx";
+import moment from "moment";
+import * as InitiativeRequests from '../Requests/Initatives/InitativesRequests.jsx'
+import Box from "@mui/material/Box";
+
+const StyledLabel = styled('Typography')({
+    color: 'white',
+    fontWeight: 'bold',
+
+})
+
+const StyledBox = styled('Box')({
+    position: 'fixed',
+    top: '50%',
+    left: '50%',
+    transform: 'translate(-50%, -50%)',
+    marginTop: '3rem',
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'center',
+    flexDirection: 'column',
+    backgroundColor: theme.palette.primary.main,
+    width: '50%',
+    height: '75%',
+    borderRadius: 20
+
+});
+const Row = styled('Box')({
+    width: 'auto',
+    marginRight: 25,
+    display: 'flex',
+    justifyContent: 'space-between',
+    marginBottom: 10,
+})
+
+
+const InitiativeEditModal = ({open, onClose, edit}) => {
+    const [details, setDetails] = useState({
+
+        initiativeName: '',
+        location: '',
+        date: '',
+        startHour: '',
+        endHour: '',
+        initiativeType: '',
+        invitationDescription: '',
+        maxParticipants: 0,
+        residentNumber: 0
+    });
+
+    const [showDatePlaceholder, setShowDatePlaceholder] = useState(true);
+    const [showTimePlaceholder, setShowTimePlaceholder] = useState(true);
+    const [message, setMessage] = useState('')
+
+    const {user} = useContext(UserContext);
+
+
+    useEffect(() => {
+
+        InitiativeRequests.GetInitiativeById(edit)
+            .then(init => {
+                delete init.initiativeNumber
+                setDetails(init)
+            });
+
+    }, [edit]);
+    const handleChange = (e) => {
+        let {name, value} = e.target;
+        if (name === 'date') value = moment(value, 'YYYY-MM-DD').format("YYYY-MM-DDT00:00:00")
+        if (name === 'startHour' || name === 'endHour') value = moment(value, 'hh:mm').format("hh:mm:00")
+        setDetails({
+            ...details,
+            [name]: value
+        });
+    };
+
+
+    const handleDateFocus = (name) => {
+        if (name === "date") {
+            setShowDatePlaceholder(false);
+        }
+
+    };
+
+    const handleDateBlur = (name) => {
+        if (name === "date" && !details.date) {
+            setShowDatePlaceholder(true);
+        }
+    };
+
+    const handleSubmit = async (e) => {
+        e.preventDefault();
+        await InitiativeRequests.EditInitiative({initiativeNumber: edit, ...details})
+        setMessage("יוזמה נערכה בהצלחה ")
+        onClose();
+    };
+    const handleDelete = async (e) => {
+        e.preventDefault();
+        await InitiativeRequests.DeleteInitiative(edit);
+        setMessage("היוזמה נמחקה בהצלחה")
+        onClose();
+
+    }
+    const handleTimeFocus = (e) => {
+        e.target.type = 'time';
+        setShowTimePlaceholder(false);
+    };
+    const handleTimeBlur = (e) => {
+        if (!e.target.value) {
+            e.target.type = 'text';
+            setShowTimePlaceholder(true);
+        }
+    };
+
+    const closeMessageDialog = () => setMessage('');
+
+    return (
+        <div>
+            <Modal
+                open={open}
+                onClose={onClose}
+                aria-Typographyledby="parent-modal-title"
+                aria-describedby="parent-modal-description"
+            >
+                {/*<MessageModal message={message} open={openModal} handleClose={handleModalClose}/>*/}
+                <StyledBox>
+                    <Typography variant={"h2"} style={{marginTop:20, alignSelf:'center'}}>עריכת יוזמה</Typography>
+                    <form onSubmit={handleSubmit} style={{
+                        marginLeft:20,
+                        marginTop:20,
+                        width:"90%",
+                        height:"100%"
+                    }}>
+
+                        <Row>
+                            <StyledLabel>שם היוזמה</StyledLabel>
+                            <input
+                                type="text"
+                                name="initiativeName"
+                                placeholder="שם היוזמה"
+                                value={details.initiativeName}
+                                onChange={handleChange}
+                                className="input"
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>מיקום</StyledLabel>
+
+                            <input
+                                type="text"
+                                name="location"
+                                placeholder="מיקום"
+                                value={details.location}
+                                onChange={handleChange}
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>תאריך</StyledLabel>
+                            <input
+                                type="text"
+                                name="date"
+                                placeholder={showDatePlaceholder ? "תאריך" : ""}
+                                value={moment(details.date, 'YYYY-MM-DDT00:00:00').format('YYYY-MM-DD')}
+                                onChange={handleChange}
+                                onFocus={() => handleDateFocus("date")}
+                                onBlur={() => handleDateBlur("date")}
+                                className="input"
+                                onClick={(e) => e.target.type = 'date'}
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>שעת התחלה</StyledLabel>
+
+                            <input
+                                type="time"
+                                name="startHour"
+                                placeholder={showTimePlaceholder ? "שעת התחלה" : ""}
+                                value={details.startHour === 'Invalid date' ? '' : moment(details.startHour, 'HH:mm:ss').format('HH:mm')}
+                                onChange={handleChange}
+                                onFocus={handleTimeFocus}
+                                onBlur={handleTimeBlur}
+                                className="input"
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>שעת סיום</StyledLabel>
+
+                            <input
+                                type="time"
+                                name="endHour"
+                                placeholder={showTimePlaceholder ? "שעת התחלה" : ""}
+                                value={details.endHour === 'Invalid date' ? '' : moment(details.endHour, 'HH:mm:ss').format('HH:mm')}
+                                onChange={handleChange}
+                                onFocus={handleTimeFocus}
+                                onBlur={handleTimeBlur}
+                                className="input"
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>הגבלת משתתפים</StyledLabel>
+                            <input
+                                type="number"
+                                name="maxParticipants"
+                                placeholder="הגבלת משתתפים"
+                                value={details.maxParticipants}
+                                onChange={handleChange}
+                                className="input"
+                                min="0"
+                                disabled
+                                style={{
+                                    width: '50%'
+                                }}
+                            />
+                        </Row>
+                        <Row>
+                            <StyledLabel>תיאור נוסף</StyledLabel>
+
+                            <textarea
+                                style={{resize: 'none', width: '43%'}}
+                                name="invitationDescription"
+                                placeholder="תיאור נוסף"
+                                value={details.invitationDescription}
+                                onChange={handleChange}
+                                style={{
+                                    width: '50%',
+                                    height: 75
+                                }}
+                            ></textarea>
+                        </Row>
+                        <Box sx={{display: 'flex', justifyContent:'space-evenly', height:100, alignItems:'center'}}>
+                        <Button sx={{height:35}} type={"submit"} color="ochre" variant="contained">שמור שינויים</Button>
+                        <Button sx={{height:35}} onClick={handleDelete} color="error" variant="contained">מחק יוזמה</Button>
+                        </Box>
+
+                    </form>
+                    {/* כאן תוסיף את ה-CARD של הפעילויות */}
+                </StyledBox>
+            </Modal>
+            <MessageModal message={message} open={message != ''} handleClose={closeMessageDialog}/>
+        </div>
+    );
+}
+
+export default InitiativeEditModal;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/Initiatives.jsx b/migdalor_tenant/src/Components/Initiatives.jsx
new file mode 100644
index 0000000..dbe5402
--- /dev/null
+++ b/migdalor_tenant/src/Components/Initiatives.jsx
@@ -0,0 +1,75 @@
+import {styled} from "@mui/system";
+import theme from "../Theme/Theme.jsx";
+import BackButton from "./BackButton.jsx";
+import {Button, Typography} from "@mui/material";
+import React, {useContext, useEffect, useState} from "react";
+import {UserContext} from "../Auth/Auth.jsx";
+import * as InitiativesRequests from "../Requests/Initatives/InitativesRequests.jsx";
+import InitiativesTable from "./InitiativesTable.jsx";
+import InitiativeCreateModal from "./InitiativeCreateModal.jsx";
+import InitiativeEditModal from "./InitiativeEditModal.jsx";
+import {Message} from "@mui/icons-material";
+import MessageModal from "./MessageModal.jsx";
+
+const StyledBox = styled('Box')({
+    position: 'fixed',
+    top: '50%',
+    left: '50%',
+    transform: 'translate(-50%, -50%)',
+    marginTop: '3rem',
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'center',
+    flexDirection: 'column',
+    backgroundColor: theme.palette.primary.main,
+    width: '75%',
+    height: '500px',
+    borderRadius: 20
+
+});
+
+
+const Initiatives = () => {
+    const [myInitiatives, setMyInitiatives] = useState([]);
+    const [open, setOpen] = useState(false)
+    const [edit, setEdit] = useState(0)
+
+
+    const {user} = useContext(UserContext);
+
+    const getInitiativesCreatedByMe = async () =>{
+       const initiatives =  await InitiativesRequests.GetAllInitiatives();
+       setMyInitiatives(
+           initiatives.filter((init) => init.residentNumber === user.id)
+       )
+    }
+
+    const toggleModal = ()=> setOpen(!open)
+    const openEdit =  (activityNumber) =>{
+         setEdit(activityNumber);
+    }
+   const closeEdit =  () =>{
+         setEdit(0);
+    }
+
+    useEffect(() => {
+        getInitiativesCreatedByMe();
+    }, [open,edit]);
+
+    return (
+        <div>
+            <BackButton/>
+            <StyledBox>
+                <Typography variant={"h2"}
+                >היוזמות שלי</Typography>
+                <InitiativesTable initiatives={myInitiatives} openEdit={openEdit}/>
+                <Button color="success" variant="contained" onClick={toggleModal}> יצירת יוזמה </Button>
+
+            </StyledBox>
+            <InitiativeCreateModal open={open}  onClose={toggleModal}/>
+            <InitiativeEditModal open={edit!==0} edit={edit}  onClose={closeEdit}/>
+        </div>
+    )
+}
+
+export default Initiatives;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/InitiativesTable.jsx b/migdalor_tenant/src/Components/InitiativesTable.jsx
new file mode 100644
index 0000000..86c5897
--- /dev/null
+++ b/migdalor_tenant/src/Components/InitiativesTable.jsx
@@ -0,0 +1,218 @@
+import * as React from 'react';
+import {createTheme, ThemeProvider, useTheme} from '@mui/material/styles';
+import Box from '@mui/material/Box';
+import Table from '@mui/material/Table';
+import TableBody from '@mui/material/TableBody';
+import TableCell from '@mui/material/TableCell';
+import TableContainer from '@mui/material/TableContainer';
+import TableFooter from '@mui/material/TableFooter';
+import TablePagination from '@mui/material/TablePagination';
+import TableRow from '@mui/material/TableRow';
+import Paper from '@mui/material/Paper';
+import IconButton from '@mui/material/IconButton';
+import FirstPageIcon from '@mui/icons-material/FirstPage';
+import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';
+import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';
+import LastPageIcon from '@mui/icons-material/LastPage';
+import {Button, Container, TableHead, Typography} from "@mui/material";
+import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
+import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
+import Collapse from '@mui/material/Collapse';
+import {useContext, useEffect, useState} from "react";
+import * as InitiativesRequests from '../Requests/Initatives/InitativesRequests.jsx';
+import {heIL} from "@mui/material/locale";
+import moment from "moment";
+import {styled} from "@mui/system";
+import theme from "../Theme/Theme.jsx";
+import BackButton from "./BackButton.jsx";
+import {UserContext} from "../Auth/Auth.jsx";
+
+const Row = ({row, onClick}) => {
+    const [open, setOpen] = React.useState(false);
+
+    return (
+        <React.Fragment>
+            <TableRow sx={{'& > *': {borderBottom: 'unset'}}}>
+                <TableCell dir={"rtl"}>
+                    <IconButton
+                        aria-label="expand row"
+                        size="small"
+                        onClick={() => setOpen(!open)}
+                    >
+                        {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}
+                    </IconButton>
+                </TableCell>
+                <TableCell align="right" sx={{direction: 'rtl'}}>{moment(row.date,"YYYY-MM-DDT00:00:00").format('DD/MM/YYYY')}</TableCell>
+                <TableCell align="right">{moment(row.startHour, "HH:mm:ss").format('HH:mm')}</TableCell>
+                <TableCell align="right">{moment(row.endHour, "HH:mm:ss").format('HH:mm')}</TableCell>
+                <TableCell align="right">{row.location}</TableCell>
+                <TableCell><Button variant="contained" onClick={(e)=> onClick(row.initiativeNumber)}>
+                    ערוך יוזמה
+                </Button></TableCell>
+            </TableRow>
+            <TableRow>
+                <TableCell align="right" style={{paddingBottom: 0, paddingTop: 0}} colSpan={3}>
+                    <Collapse in={open} timeout="auto" unmountOnExit>
+                        <Box sx={{margin: 1}}>
+                            <Typography variant="h6" gutterBottom component="div">
+תיאור היוזמה                            </Typography>
+                            <Typography>
+                                {row.invitationDescription}
+                            </Typography>
+                        </Box>
+                    </Collapse>
+                </TableCell>
+            </TableRow>
+        </React.Fragment>
+    );
+}
+
+function TablePaginationActions(props) {
+    const theme = useTheme();
+    const {count, page, rowsPerPage, onPageChange} = props;
+
+    const handleFirstPageButtonClick = (
+        event,
+    ) => {
+        onPageChange(event, 0);
+    };
+
+    const handleBackButtonClick = (event) => {
+        onPageChange(event, page - 1);
+    };
+
+    const handleNextButtonClick = (event) => {
+        onPageChange(event, page + 1);
+    };
+
+    const handleLastPageButtonClick = (event) => {
+        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
+    };
+
+
+    return (
+        <Box sx={{flexShrink: 0, ml: 2.5}}>
+            <IconButton
+                onClick={handleFirstPageButtonClick}
+                disabled={page === 0}
+                aria-label="first page"
+            >
+                {theme.direction === 'rtl' ? <LastPageIcon/> : <FirstPageIcon/>}
+            </IconButton>
+            <IconButton
+                onClick={handleBackButtonClick}
+                disabled={page === 0}
+                aria-label="previous page"
+            >
+                {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}
+            </IconButton>
+            <IconButton
+                onClick={handleNextButtonClick}
+                disabled={page >= Math.ceil(count / rowsPerPage) - 1}
+                aria-label="next page"
+            >
+                {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}
+            </IconButton>
+            <IconButton
+                onClick={handleLastPageButtonClick}
+                disabled={page >= Math.ceil(count / rowsPerPage) - 1}
+                aria-label="last page"
+            >
+                {theme.direction === 'rtl' ? <FirstPageIcon/> : <LastPageIcon/>}
+            </IconButton>
+        </Box>
+    );
+}
+
+
+const InitiativesTable = ({initiatives, openEdit}) =>{
+    const [page, setPage] = React.useState(0);
+    const [rowsPerPage, setRowsPerPage] = React.useState(5);
+    const [rows, setRows] = useState([]);
+
+    const { user } = useContext(UserContext); // Retrieve the user ID from context
+
+    // Avoid a layout jump when reaching the last page with empty rows.
+    const emptyRows =
+        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;
+
+    const existingTheme = useTheme();
+
+    const theme = React.useMemo(
+        () =>
+            createTheme({}, heIL, existingTheme, {
+                direction: 'rtl',
+            }),
+        [existingTheme],
+    );
+
+    const handleChangePage = (
+        event,
+        newPage,
+    ) => {
+        setPage(newPage);
+    };
+
+    const handleChangeRowsPerPage = (
+        event,
+    ) => {
+        setRowsPerPage(parseInt(event.target.value, 10));
+        setPage(0);
+    };
+
+
+    return (
+        <ThemeProvider theme={theme}>
+            <TableContainer component={Paper} sx={{width:'90%' ,maxHeight: 400, height:800 }}>
+                <Table  stickyHeader  sx={{minWidth: 500}} aria-label="custom pagination table">
+                        <TableHead>
+                            <TableRow>
+                                <TableCell sx={{width: 5}}/>
+                                <TableCell align="right" sx={{width: '20%'}}>תאריך</TableCell>
+                                <TableCell align="right" sx={{width:'20%'}}>שעת התחלה</TableCell>
+                                <TableCell align="right">שעת סיום</TableCell>
+                                <TableCell align="right">מיקום</TableCell>
+                                <TableCell/>
+                            </TableRow>
+                        </TableHead>
+                        <TableBody>
+                            {(rowsPerPage > 0
+                                    ? initiatives.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
+                                    : initiatives
+                            ).map((row, i) => (
+                                <Row onClick={openEdit} key={i} row={row}></Row>
+                            ))}
+                            {emptyRows > 0 && (
+                                <TableRow style={{height: 53 * emptyRows}}>
+                                    <TableCell colSpan={6}/>
+                                </TableRow>
+                            )}
+                        </TableBody>
+                        <TableFooter>
+                            <TableRow>
+                                <TablePagination
+                                    rowsPerPageOptions={[5, 10, 25, {label: 'All', value: -1}]}
+                                    count={rows.length}
+                                    rowsPerPage={rowsPerPage}
+                                    page={page}
+                                    colSpan={6}
+                                    slotProps={{
+                                        select: {
+                                            inputProps: {
+                                                'aria-label': 'rows per page',
+                                            },
+                                            native: true,
+                                        },
+                                    }}
+                                    onPageChange={handleChangePage}
+                                    onRowsPerPageChange={handleChangeRowsPerPage}
+                                    ActionsComponent={TablePaginationActions}
+                                />
+                            </TableRow>
+                        </TableFooter>
+                    </Table>
+                </TableContainer>
+        </ThemeProvider>
+    );
+}
+export default  InitiativesTable;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/Login.jsx b/migdalor_tenant/src/Components/Login.jsx
index 3f4ebb4..f0a0b4a 100644
--- a/migdalor_tenant/src/Components/Login.jsx
+++ b/migdalor_tenant/src/Components/Login.jsx
@@ -13,7 +13,7 @@ const Login = () => {
 
     const handleForgotPassword = (event) => {
         event.preventDefault();
-        navigate('/home');
+        navigate('/forgotpassword');
     }
 
     const handleInputChange = (e) => {
diff --git a/migdalor_tenant/src/Components/MessageModal.jsx b/migdalor_tenant/src/Components/MessageModal.jsx
new file mode 100644
index 0000000..29cf94d
--- /dev/null
+++ b/migdalor_tenant/src/Components/MessageModal.jsx
@@ -0,0 +1,47 @@
+import * as React from 'react';
+import Box from '@mui/material/Box';
+import Modal from '@mui/material/Modal';
+import Button from '@mui/material/Button';
+import {Typography} from "@mui/material";
+
+const style = {
+    position: 'absolute',
+    top: '50%',
+    left: '50%',
+    backgroundColor: '#F6F2E4',
+    borderRadius: 10,
+    display: 'flex',
+    flexDirection: 'column',
+    alignItems:'center',
+    transform: 'translate(-50%, -50%)',
+    width: 400,
+    border: '2px solid #000',
+    boxShadow: 24,
+    pt: 2,
+    px: 4,
+    pb: 3,
+};
+
+const MessageModal = ({message, open , handleClose}) => {
+
+    return (
+        <React.Fragment>
+            <Modal
+                open={open}
+                onClose={handleClose}
+                aria-labelledby="child-modal-title"
+                aria-describedby="child-modal-description"
+            >
+                <Box sx={{ ...style, width: 200 }}>
+                    <Typography variant={"h7"} id="child-modal-description">
+                        {message}
+                    </Typography>
+                    <Button onClick={handleClose}>סגור</Button>
+                </Box>
+            </Modal>
+        </React.Fragment>
+
+    );
+}
+
+export default MessageModal;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/Messages.jsx b/migdalor_tenant/src/Components/Messages.jsx
index 826fb37..f862fe9 100644
--- a/migdalor_tenant/src/Components/Messages.jsx
+++ b/migdalor_tenant/src/Components/Messages.jsx
@@ -129,8 +129,8 @@ const StyledBox = styled('Box')({
     alignItems: 'center',
     flexDirection: 'column',
     backgroundColor: theme.palette.primary.main,
-    width: '75%',
-    height: '75%',
+    width: '80%',
+    height: '80%',
     borderRadius: 20
 
 });
@@ -176,8 +176,9 @@ export default function Messages() {
         <ThemeProvider theme={theme}>
             <BackButton/>
             <StyledBox>
-                <TableContainer component={Paper} sx={{width:'90%'}}>
-                    <Table sx={{minWidth: 500}} aria-label="custom pagination table">
+                <Typography variant={"h2"} sx={{marginBottom: 2}}> לוח הודעות</Typography>
+                <TableContainer component={Paper} sx={{width:'90%' ,maxHeight: 400, height:800 }}>
+                    <Table stickyHeader  sx={{minWidth: 500}} aria-label="custom pagination table">
                         <TableHead>
                             <TableRow>
                                 <TableCell sx={{width: 5}}/>
diff --git a/migdalor_tenant/src/Components/Obituaries.jsx b/migdalor_tenant/src/Components/Obituaries.jsx
index e69de29..da1982c 100644
--- a/migdalor_tenant/src/Components/Obituaries.jsx
+++ b/migdalor_tenant/src/Components/Obituaries.jsx
@@ -0,0 +1,233 @@
+import * as React from 'react';
+import {createTheme, ThemeProvider, useTheme} from '@mui/material/styles';
+import Box from '@mui/material/Box';
+import Table from '@mui/material/Table';
+import TableBody from '@mui/material/TableBody';
+import TableCell from '@mui/material/TableCell';
+import TableContainer from '@mui/material/TableContainer';
+import TableFooter from '@mui/material/TableFooter';
+import TablePagination from '@mui/material/TablePagination';
+import TableRow from '@mui/material/TableRow';
+import Paper from '@mui/material/Paper';
+import IconButton from '@mui/material/IconButton';
+import FirstPageIcon from '@mui/icons-material/FirstPage';
+import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';
+import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';
+import LastPageIcon from '@mui/icons-material/LastPage';
+import {Container, TableHead, Typography} from "@mui/material";
+import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
+import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
+import Collapse from '@mui/material/Collapse';
+import {useEffect, useState} from "react";
+import * as ObituaryRequests from '../Requests/ObituaryRequests/ObituaryRequests.jsx'
+import {heIL} from "@mui/material/locale";
+import moment from "moment";
+import {styled} from "@mui/system";
+import theme from "../Theme/Theme.jsx";
+import BackButton from "./BackButton.jsx";
+
+const Row = ({row}) => {
+    const [open, setOpen] = React.useState(false);
+
+    return (
+        <React.Fragment>
+            <TableRow sx={{'& > *': {borderBottom: 'unset'}}}>
+                <TableCell dir={"rtl"}>
+                    <IconButton
+                        aria-label="expand row"
+                        size="small"
+                        onClick={() => setOpen(!open)}
+                    >
+                        {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}
+                    </IconButton>
+                </TableCell>
+                <TableCell align="right" sx={{direction: 'rtl'}}>{moment(row.date).format('DD/MM/YYYY')}</TableCell>
+                <TableCell align="right">{row.deceasedName}</TableCell>
+                <TableCell align="right">{row.cemeteryName}</TableCell>
+                <TableCell align="right">{row.shivaAddress}</TableCell>
+            </TableRow>
+            <TableRow>
+                <TableCell align="right" style={{paddingBottom: 0, paddingTop: 0}} colSpan={3}>
+                    <Collapse in={open} timeout="auto" unmountOnExit>
+                        <Box sx={{margin: 1}}>
+                            <Typography variant="h6" gutterBottom component="div">
+                                תיאור נוסף
+                            </Typography>
+                            <Typography>
+                                {row.description}
+                            </Typography>
+                        </Box>
+                    </Collapse>
+                </TableCell>
+            </TableRow>
+        </React.Fragment>
+    );
+}
+
+function TablePaginationActions(props) {
+    const theme = useTheme();
+    const {count, page, rowsPerPage, onPageChange} = props;
+
+    const handleFirstPageButtonClick = (
+        event,
+    ) => {
+        onPageChange(event, 0);
+    };
+
+    const handleBackButtonClick = (event) => {
+        onPageChange(event, page - 1);
+    };
+
+    const handleNextButtonClick = (event) => {
+        onPageChange(event, page + 1);
+    };
+
+    const handleLastPageButtonClick = (event) => {
+        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
+    };
+
+
+    return (
+        <Box sx={{flexShrink: 0, ml: 2.5}}>
+            <IconButton
+                onClick={handleFirstPageButtonClick}
+                disabled={page === 0}
+                aria-label="first page"
+            >
+                {theme.direction === 'rtl' ? <LastPageIcon/> : <FirstPageIcon/>}
+            </IconButton>
+            <IconButton
+                onClick={handleBackButtonClick}
+                disabled={page === 0}
+                aria-label="previous page"
+            >
+                {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}
+            </IconButton>
+            <IconButton
+                onClick={handleNextButtonClick}
+                disabled={page >= Math.ceil(count / rowsPerPage) - 1}
+                aria-label="next page"
+            >
+                {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}
+            </IconButton>
+            <IconButton
+                onClick={handleLastPageButtonClick}
+                disabled={page >= Math.ceil(count / rowsPerPage) - 1}
+                aria-label="last page"
+            >
+                {theme.direction === 'rtl' ? <FirstPageIcon/> : <LastPageIcon/>}
+            </IconButton>
+        </Box>
+    );
+}
+
+const StyledBox = styled('Box')({
+    position: 'absolute',
+    top: '50%',
+    left: '50%',
+    transform: 'translate(-50%, -50%)',
+    display: 'flex',
+    justifyContent:'center',
+    alignItems: 'center',
+    flexDirection: 'column',
+    backgroundColor: theme.palette.primary.main,
+    width: '75%',
+    height: '75%',
+    borderRadius: 20
+
+});
+
+export default function Obituaries() {
+    const [page, setPage] = React.useState(0);
+    const [rowsPerPage, setRowsPerPage] = React.useState(5);
+    const [rows, setRows] = useState([]);
+    // Avoid a layout jump when reaching the last page with empty rows.
+    const emptyRows =
+        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;
+
+    const existingTheme = useTheme();
+
+    const theme = React.useMemo(
+        () =>
+            createTheme({}, heIL, existingTheme, {
+                direction: 'rtl',
+            }),
+        [existingTheme],
+    );
+
+    const handleChangePage = (
+        event,
+        newPage,
+    ) => {
+        setPage(newPage);
+    };
+
+    const handleChangeRowsPerPage = (
+        event,
+    ) => {
+        setRowsPerPage(parseInt(event.target.value, 10));
+        setPage(0);
+    };
+
+    useEffect(() => {
+        ObituaryRequests.GetAllObituaries()
+            .then(obituaries => setRows(obituaries))
+    }, []);
+
+    return (
+        <ThemeProvider theme={theme}>
+            <BackButton/>
+            <StyledBox>
+                <Typography variant={"h2"}> מודעות אבל </Typography>
+                <TableContainer component={Paper} sx={{width:'90%' ,maxHeight: 400, height:800 }}>
+                    <Table stickyHeader  sx={{minWidth: 500}} aria-label="custom pagination table">
+                        <TableHead>
+                            <TableRow>
+                                <TableCell sx={{width: 5}}/>
+                                <TableCell align="right" sx={{width: '20%'}}>תאריך</TableCell>
+                                <TableCell align="right" sx={{width: '20%'}}>שם המנוח</TableCell>
+                                <TableCell align="right">בית עלמין</TableCell>
+                                <TableCell align="right">מקום השבעה </TableCell>
+                            </TableRow>
+                        </TableHead>
+                        <TableBody>
+                            {(rowsPerPage > 0
+                                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
+                                    : rows
+                            ).map((row, i) => (
+                                <Row key={i} row={row}></Row>
+                            ))}
+                            {emptyRows > 0 && (
+                                <TableRow style={{height: 53 * emptyRows}}>
+                                    <TableCell colSpan={9999}/>
+                                </TableRow>
+                            )}
+                        </TableBody>
+                        <TableFooter>
+                            <TableRow>
+                                <TablePagination
+                                    rowsPerPageOptions={[5, 10, 25, {label: 'All', value: -1}]}
+                                    count={rows.length}
+                                    rowsPerPage={rowsPerPage}
+                                    page={page}
+                                    colSpan={9999}
+                                    slotProps={{
+                                        select: {
+                                            inputProps: {
+                                                'aria-label': 'rows per page',
+                                            },
+                                            native: true,
+                                        },
+                                    }}
+                                    onPageChange={handleChangePage}
+                                    onRowsPerPageChange={handleChangeRowsPerPage}
+                                    ActionsComponent={TablePaginationActions}
+                                />
+                            </TableRow>
+                        </TableFooter>
+                    </Table>
+                </TableContainer>
+            </StyledBox>
+        </ThemeProvider>
+    );
+}
diff --git a/migdalor_tenant/src/Components/OpeningHours.css b/migdalor_tenant/src/Components/OpeningHours.css
new file mode 100644
index 0000000..526386e
--- /dev/null
+++ b/migdalor_tenant/src/Components/OpeningHours.css
@@ -0,0 +1,37 @@
+.container{
+display: flex;
+  flex-wrap: wrap; /* מאפשר ל-divים לעבור לשורה הבאה אם אין מספיק מקום */
+  justify-content: space-between; /* מרווח שווה בין ה-divים */
+  gap: 20px; /* ריווח בין ה-divים */
+}
+
+.openingHours{
+    font-family: 'sans-serif';
+    font-weight: bold;
+    background-color: #F6F2E4;
+    padding: 10px; /* ריווח פנימי */
+    border: 1px solid #ddd; /* גבול */
+    border-radius: 10px; /* פינות מעוגלות */
+    margin: 5px auto; /* מרכז את התיבה */
+}
+
+
+  h1{
+    color: #38588e;
+    text-shadow: 2px 2px 4px rgba(48, 48, 48, 0.5);
+    margin: 3px;
+  }
+
+  .clinic, .pool, .gym{
+    color: #000000;
+    font-family: 'sans-serif';
+    background-color: #F6F2E4;
+    padding: 10px; /* ריווח פנימי */
+    border: 1px solid #ddd; /* גבול */
+    border-radius: 10px; /* פינות מעוגלות */
+    margin: 5px auto; /* מרכז את התיבה */
+  }
+
+  h2{
+    margin: 3px;
+  }
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/OpeningHours.jsx b/migdalor_tenant/src/Components/OpeningHours.jsx
index e69de29..c12635f 100644
--- a/migdalor_tenant/src/Components/OpeningHours.jsx
+++ b/migdalor_tenant/src/Components/OpeningHours.jsx
@@ -0,0 +1,51 @@
+import React from 'react';
+
+import './OpeningHours.css';
+import BackButton from "./BackButton.jsx";
+
+const OpeningHours = () => (
+    <div>
+        <BackButton/>
+        <div calss="container">
+            <div class="openingHours"><h1>שעות פתיחה</h1></div>
+
+            <div class="clinic">
+                <h2>מרפאה</h2>
+                <p> ראשון - חמישי: 6:00 - 11:00, 13:00 - 17:00</p>
+                <p> שישי - שבת: 8:00 - 10:00</p>
+                <p>טלפון: 04-6062629</p>
+            </div>
+
+            <div class="pool">
+                <h2>בריכה</h2>
+                <p> ראשון - שישי: 6:00 - 13:00, 15:00 - 19:00</p>
+                <p> שבת: 7:00 - 12:00</p>
+                <p>טלפון: 04-1234567</p>
+            </div>
+
+            <div class="gym">
+                <h2>חדר כושר</h2>
+                <p> ראשון - חמישי: 8:00 - 19:00</p>
+                <p>טלפון: 04-1852967</p>
+            </div>
+
+            <div class="gym">
+                <h2>מסעדה</h2>
+                <p> ראשון - שישי: 6:00 - 13:00, 15:00 - 19:00</p>
+                <p> שבת: 7:00 - 12:00</p>
+                <p>טלפון: 04-7654321</p>
+            </div>
+
+            <div>
+                <h1>שעות פתיחה</h1>
+                <p>ימים ראשון עד חמישי: 9:00 - 17:00</p>
+                <p>יום שישי: 9:00 - 13:00</p>
+                <p>יום שבת: 9:00 - 13:00</p>
+                <p>ערב חג: 9:00 - 13:00</p>
+            </div>
+
+        </div>
+    </div>
+);
+
+export default OpeningHours;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Components/Profile.jsx b/migdalor_tenant/src/Components/Profile.jsx
index db8f7a0..678e2e8 100644
--- a/migdalor_tenant/src/Components/Profile.jsx
+++ b/migdalor_tenant/src/Components/Profile.jsx
@@ -1,164 +1,271 @@
-import React, { useState } from 'react';
+import React, {useContext, useEffect, useState} from 'react';
 import '../CSS/Profile.css';
+import {styled} from "@mui/system";
+import theme from "../Theme/Theme.jsx";
+import {Button, Typography} from "@mui/material";
+import BackButton from "./BackButton.jsx";
+import {useTheme} from "@mui/material/styles";
+import {UserContext} from "../Auth/Auth.jsx";
+import moment from "moment";
+import MessageModal from "./MessageModal.jsx";
+import * as ResidentRequests from '../Requests/ResidentRequests/ResidentRequests.jsx'
+const StyledLabel = styled('Typography')({
+    color: 'white',
+    fontWeight: 'bold',
 
+})
+
+const StyledBox = styled('Box')({
+    position: 'fixed',
+    top: '50%',
+    left: '50%',
+    transform: 'translate(-50%, -50%)',
+    marginTop: '3rem',
+    display: 'flex',
+    justifyContent: 'center',
+    alignItems: 'start',
+    flexDirection: 'column',
+    backgroundColor: theme.palette.primary.main,
+    width: '50%',
+    height: '75%',
+    borderRadius: 20
+
+});
+const Row = styled('Box')({
+    width: '100%',
+    marginRight: '5rem',
+    display: 'flex',
+    justifyContent: 'space-between',
+    marginBottom: 10,
+})
 const Profile = () => {
-  const [details, setDetails] = useState({
-    firstName: '',
-    lastName: '',
-    birthDate: '',
-    email: '',
-    entryDate: '',
-    city: '',
-    apartmentLocation: '',
-    profession: '',
-    hobbies: '',
-    courses: '',
-    aboutMe: '',
-    image: null
-  });
-
-  const [showBirthDatePlaceholder, setShowBirthDatePlaceholder] = useState(true);
-  const [showEntryDatePlaceholder, setShowEntryDatePlaceholder] = useState(true);
-
-  const handleChange = (e) => {
-    const { name, value } = e.target;
-    setDetails({
-      ...details,
-      [name]: value
-    });
-  };
+    const [details, setDetails] = useState({
 
-  const handleImageUpload = (e) => {
-    setDetails({
-      ...details,
-      image: e.target.files[0]
+        firstName: '',
+        lastName: '',
+        birthDate: '',
+        email: '',
+        entryDate: '',
+        city: '',
+        apartmentLocation: '',
+        profession: '',
+        hobbies: '',
+        courses: '',
+        aboutMe: '',
     });
-  };
 
-  const handleDateFocus = (name) => {
-    if (name === "birthDate") {
-      setShowBirthDatePlaceholder(false);
-    } else if (name === "entryDate") {
-      setShowEntryDatePlaceholder(false);
-    }
-  };
+    const [showBirthDatePlaceholder, setShowBirthDatePlaceholder] = useState(true);
+    const [showEntryDatePlaceholder, setShowEntryDatePlaceholder] = useState(true);
+    const [message, setMessage] = useState('')
+    const [openModal, setOpenModal] = useState(false)
+
+    const {user} = useContext(UserContext);
+    console.log(user)
+
+    useEffect(() => {
+        setDetails({
+            firstName: user.firstName,
+            lastName: user.lastName,
+            birthDate: user.dateOfBirth,
+            email: user.email,
+            entryDate: '',
+            city: user.previousAddress,
+            apartmentLocation: '',
+            profession: user.profession,
+            hobbies: '',
+            courses: '',
+            aboutMe: user.aboutMe,
+        })
+
+    }, []);
+    const handleChange = (e) => {
+        let {name, value} = e.target;
+        if (name === 'birthDate') value = moment(value, 'YYYY-MM-DD').format("YYYY-MM-DDT00:00:00")
+        setDetails({
+            ...details,
+            [name]: value
+        });
+    };
+
+
+    const handleDateFocus = (name) => {
+        if (name === "birthDate") {
+            setShowBirthDatePlaceholder(false);
+        } else if (name === "entryDate") {
+            setShowEntryDatePlaceholder(false);
+        }
+    };
 
-  const handleDateBlur = (name) => {
-    if (name === "birthDate" && !details.birthDate) {
-      setShowBirthDatePlaceholder(true);
-    } else if (name === "entryDate" && !details.entryDate) {
-      setShowEntryDatePlaceholder(true);
+    const handleDateBlur = (name) => {
+        if (name === "birthDate" && !details.birthDate) {
+            setShowBirthDatePlaceholder(true);
+        } else if (name === "entryDate" && !details.entryDate) {
+            setShowEntryDatePlaceholder(true);
+        }
+    };
+    const handekModalClose = ()=>{
+        setOpenModal(false)
     }
-  };
-
-  const handleSubmit = (e) => {
-    e.preventDefault();
-    // כאן תוסיף את הקוד לשמירת הנתונים על השרת
-    console.log(details);
-  };
-
-  return (
-    <div className="personal-area">
-      <h2>איזור אישי</h2>
-      <form onSubmit={handleSubmit}>
-        <input
-          type="text"
-          name="firstName"
-          placeholder="שם פרטי"
-          value={details.firstName}
-          onChange={handleChange}
-        />
-        <input
-          type="text"
-          name="lastName"
-          placeholder="שם משפחה"
-          value={details.lastName}
-          onChange={handleChange}
-        />
-        <input
-          type="text"
-          name="birthDate"
-          placeholder={showBirthDatePlaceholder ? "תאריך לידה" : ""}
-          value={details.birthDate}
-          onChange={handleChange}
-          onFocus={() => handleDateFocus("birthDate")}
-          onBlur={() => handleDateBlur("birthDate")}
-          className="input"
-          onClick={(e) => e.target.type = 'date'}
-        />
-        <input
-          type="email"
-          name="email"
-          placeholder="איימיל"
-          value={details.email}
-          onChange={handleChange}
-        />
-        <input
-          type="text"
-          name="entryDate"
-          placeholder={showEntryDatePlaceholder ? "תאריך כניסה לדיור המוגן" : ""}
-          value={details.entryDate}
-          onChange={handleChange}
-          onFocus={() => handleDateFocus("entryDate")}
-          onBlur={() => handleDateBlur("entryDate")}
-          className="input"
-          onClick={(e) => e.target.type = 'date'}
-        />
-        <input
-          type="text"
-          name="city"
-          placeholder="עיר מגורים"
-          value={details.city}
-          onChange={handleChange}
-        />
-        <input
-          type="text"
-          name="apartmentLocation"
-          placeholder="מיקום הדירה הנוכחית"
-          value={details.apartmentLocation}
-          onChange={handleChange}
-        />
-        <input
-          type="text"
-          name="profession"
-          placeholder="מקצוע"
-          value={details.profession}
-          onChange={handleChange}
-        />
-        <input
-          type="text"
-          name="hobbies"
-          placeholder="תחביבים"
-          value={details.hobbies}
-          onChange={handleChange}
-        />
-        <input
-          type="text"
-          name="courses"
-          placeholder="חוגים בבית"
-          value={details.courses}
-          onChange={handleChange}
-        />
-        <textarea
-          name="aboutMe"
-          placeholder="בקצרה עלי"
-          value={details.aboutMe}
-          onChange={handleChange}
-        ></textarea>
-        <label className="upload-label">
-          העלאת תמונה אישית
-          <input
-            type="file"
-            name="image"
-            onChange={handleImageUpload}
-            className="upload-button"
-          />
-        </label>
-        <button type="submit" className="submit-button">עדכון פרטים</button>
-      </form>
-      {/* כאן תוסיף את ה-CARD של הפעילויות */}
-    </div>
-  );
+    const handleSubmit = async (e) => {
+        e.preventDefault();
+        await ResidentRequests.EditResidentDetails({
+            id: user.id,
+            firstName: details.firstName,
+            lastName: details.lastName,
+            phoneNumber: user.phoneNumber,
+            residentId: user.ResidentId,
+            dateOfBirth :details.birthDate,
+            previousAddress: details.city,
+            profession: details.profession,
+            email: details.email,
+            username: user.username,
+            password: user.password,
+            currentAddress:details.city
+        })
+        setMessage("פרטייך נשמר בהצלחה")
+        setOpenModal(true);
+        // כאן תוסיף את הקוד לשמירת הנתונים על השרת
+    };
+
+    return (
+        <div><BackButton/>
+            <MessageModal message={message} open={openModal} handleClose={handekModalClose}/>
+            <StyledBox>
+                <Typography variant={"h2"} sx={{margin: 'auto'}}>איזור אישי</Typography>
+                <form onSubmit={handleSubmit}>
+                    <Row>
+                        <StyledLabel>שם פרטי</StyledLabel>
+                        <input
+                            style={{width: 400, height:25}}
+                            type="text"
+                            name="firstName"
+                            placeholder="שם פרטי"
+                            value={details.firstName}
+                            onChange={handleChange}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>שם משפחה</StyledLabel>
+
+                        <input
+                            type="text"
+                            name="lastName"
+                            placeholder="שם משפחה"
+                            value={details.lastName}
+                            onChange={handleChange}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>תאריך לידה</StyledLabel>
+                        <input
+                            type="text"
+                            name="birthDate"
+                            placeholder={showBirthDatePlaceholder ? "תאריך לידה" : ""}
+                            value={moment(details.birthDate, 'YYYY-MM-DDT00:00:00').format('YYYY-MM-DD')}
+                            onChange={handleChange}
+                            onFocus={() => handleDateFocus("birthDate")}
+                            onBlur={() => handleDateBlur("birthDate")}
+                            className="input"
+                            onClick={(e) => e.target.type = 'date'}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>אימייל</StyledLabel>
+
+                        <input
+                            type="email"
+                            name="email"
+                            placeholder="איימיל"
+                            value={details.email}
+                            onChange={handleChange}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>תאריך כניסה לדיור מוגן</StyledLabel>
+
+                        <input
+                            type="text"
+                            name="entryDate"
+                            placeholder={showEntryDatePlaceholder ? "תאריך כניסה לדיור המוגן" : ""}
+                            value={details.entryDate}
+                            onChange={handleChange}
+                            onFocus={() => handleDateFocus("entryDate")}
+                            onBlur={() => handleDateBlur("entryDate")}
+                            className="input"
+                            onClick={(e) => e.target.type = 'date'}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>עיר מגורים</StyledLabel>
+                        <input
+                            type="text"
+                            name="city"
+                            placeholder="עיר מגורים"
+                            value={details.city}
+                            onChange={handleChange}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>מיקום הדירה הנוכחית</StyledLabel>
+
+                        <input
+                            type="text"
+                            name="apartmentLocation"
+                            placeholder="מיקום הדירה הנוכחית"
+                            value={details.apartmentLocation}
+                            onChange={handleChange}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>מקצוע</StyledLabel>
+                        <input
+                            type="text"
+                            name="profession"
+                            placeholder="מקצוע"
+                            value={details.profession}
+                            onChange={handleChange}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>תחביבים</StyledLabel>
+
+                        <input
+                            type="text"
+                            name="hobbies"
+                            placeholder="תחביבים"
+                            value={details.hobbies}
+                            onChange={handleChange}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>חוגים בבית</StyledLabel>
+
+                        <input
+                            type="text"
+                            name="courses"
+                            placeholder="חוגים בבית"
+                            value={details.courses}
+                            onChange={handleChange}
+                        />
+                    </Row>
+                    <Row>
+                        <StyledLabel>בקצרה עלי</StyledLabel>
+
+                        <textarea
+                            style={{resize: 'none', width: '43%'}}
+                            name="aboutMe"
+                            placeholder="בקצרה עלי"
+                            value={details.aboutMe}
+                            onChange={handleChange}
+                        ></textarea>
+                    </Row>
+
+                    <Button type={"submit"} color="ochre" sx={{fontWeight:'bold'}} variant="contained">עדכון פרטים</Button>
+                </form>
+                {/* כאן תוסיף את ה-CARD של הפעילויות */}
+            </StyledBox>
+        </div>
+    );
 };
 
 export default Profile;
diff --git a/migdalor_tenant/src/Components/TenantCommittee.jsx b/migdalor_tenant/src/Components/TenantCommittee.jsx
deleted file mode 100644
index e69de29..0000000
diff --git a/migdalor_tenant/src/Components/TennantCommittee.jsx b/migdalor_tenant/src/Components/TennantCommittee.jsx
new file mode 100644
index 0000000..ab3f0ce
--- /dev/null
+++ b/migdalor_tenant/src/Components/TennantCommittee.jsx
@@ -0,0 +1,232 @@
+import * as React from 'react';
+import {createTheme, ThemeProvider, useTheme} from '@mui/material/styles';
+import Box from '@mui/material/Box';
+import Table from '@mui/material/Table';
+import TableBody from '@mui/material/TableBody';
+import TableCell from '@mui/material/TableCell';
+import TableContainer from '@mui/material/TableContainer';
+import TableFooter from '@mui/material/TableFooter';
+import TablePagination from '@mui/material/TablePagination';
+import TableRow from '@mui/material/TableRow';
+import Paper from '@mui/material/Paper';
+import IconButton from '@mui/material/IconButton';
+import FirstPageIcon from '@mui/icons-material/FirstPage';
+import KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';
+import KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';
+import LastPageIcon from '@mui/icons-material/LastPage';
+import {Container, TableHead, Typography} from "@mui/material";
+import KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';
+import KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';
+import Collapse from '@mui/material/Collapse';
+import {useEffect, useState} from "react";
+import * as ObituaryRequests from '../Requests/ObituaryRequests/ObituaryRequests.jsx'
+import {heIL} from "@mui/material/locale";
+import moment from "moment";
+import {styled} from "@mui/system";
+import theme from "../Theme/Theme.jsx";
+import BackButton from "./BackButton.jsx";
+import * as CommitteesRequests from '../Requests/Committees/CommitteesRequests.jsx'
+
+const Row = ({row}) => {
+    const [open, setOpen] = React.useState(false);
+
+    return (
+        <React.Fragment>
+            <TableRow sx={{'& > *': {borderBottom: 'unset'}}}>
+                <TableCell dir={"rtl"}>
+                    <IconButton
+                        aria-label="expand row"
+                        size="small"
+                        onClick={() => setOpen(!open)}
+                    >
+                        {open ? <KeyboardArrowUpIcon/> : <KeyboardArrowDownIcon/>}
+                    </IconButton>
+                </TableCell>
+                <TableCell align="right" sx={{direction: 'rtl'}}>{row.committeeName}</TableCell>
+                <TableCell align="right">{row.residentManager.firstName + " " + row.residentManager.lastName}</TableCell>
+                <TableCell align="right">{row.residentManager.phoneNumber}</TableCell>
+            </TableRow>
+            <TableRow>
+                <TableCell align="right" style={{paddingBottom: 0, paddingTop: 0}} colSpan={3}>
+                    <Collapse in={open} timeout="auto" unmountOnExit>
+                        <Box sx={{margin: 1}}>
+                            <Typography variant="h6" gutterBottom component="div">
+                                תיאור תפקיד הוועד
+                            </Typography>
+                            <Typography>
+                                {row.responsibilityDescription}
+                            </Typography>
+                        </Box>
+                    </Collapse>
+                </TableCell>
+            </TableRow>
+        </React.Fragment>
+    );
+}
+
+function TablePaginationActions(props) {
+    const theme = useTheme();
+    const {count, page, rowsPerPage, onPageChange} = props;
+
+    const handleFirstPageButtonClick = (
+        event,
+    ) => {
+        onPageChange(event, 0);
+    };
+
+    const handleBackButtonClick = (event) => {
+        onPageChange(event, page - 1);
+    };
+
+    const handleNextButtonClick = (event) => {
+        onPageChange(event, page + 1);
+    };
+
+    const handleLastPageButtonClick = (event) => {
+        onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
+    };
+
+
+    return (
+        <Box sx={{flexShrink: 0, ml: 2.5}}>
+            <IconButton
+                onClick={handleFirstPageButtonClick}
+                disabled={page === 0}
+                aria-label="first page"
+            >
+                {theme.direction === 'rtl' ? <LastPageIcon/> : <FirstPageIcon/>}
+            </IconButton>
+            <IconButton
+                onClick={handleBackButtonClick}
+                disabled={page === 0}
+                aria-label="previous page"
+            >
+                {theme.direction === 'rtl' ? <KeyboardArrowRight/> : <KeyboardArrowLeft/>}
+            </IconButton>
+            <IconButton
+                onClick={handleNextButtonClick}
+                disabled={page >= Math.ceil(count / rowsPerPage) - 1}
+                aria-label="next page"
+            >
+                {theme.direction === 'rtl' ? <KeyboardArrowLeft/> : <KeyboardArrowRight/>}
+            </IconButton>
+            <IconButton
+                onClick={handleLastPageButtonClick}
+                disabled={page >= Math.ceil(count / rowsPerPage) - 1}
+                aria-label="last page"
+            >
+                {theme.direction === 'rtl' ? <FirstPageIcon/> : <LastPageIcon/>}
+            </IconButton>
+        </Box>
+    );
+}
+
+const StyledBox = styled('Box')({
+    position: 'absolute',
+    top: '50%',
+    left: '50%',
+    transform: 'translate(-50%, -50%)',
+    display: 'flex',
+    justifyContent:'center',
+    alignItems: 'center',
+    flexDirection: 'column',
+    backgroundColor: theme.palette.primary.main,
+    width: '75%',
+    height: '75%',
+    borderRadius: 20
+
+});
+
+export default function TennantCommittee() {
+    const [page, setPage] = React.useState(0);
+    const [rowsPerPage, setRowsPerPage] = React.useState(5);
+    const [rows, setRows] = useState([]);
+    // Avoid a layout jump when reaching the last page with empty rows.
+    const emptyRows =
+        page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;
+
+    const existingTheme = useTheme();
+
+    const theme = React.useMemo(
+        () =>
+            createTheme({}, heIL, existingTheme, {
+                direction: 'rtl',
+            }),
+        [existingTheme],
+    );
+
+    const handleChangePage = (
+        event,
+        newPage,
+    ) => {
+        setPage(newPage);
+    };
+
+    const handleChangeRowsPerPage = (
+        event,
+    ) => {
+        setRowsPerPage(parseInt(event.target.value, 10));
+        setPage(0);
+    };
+
+    useEffect(() => {
+        CommitteesRequests.getAllCommittees()
+            .then(committees => setRows(committees))
+    }, []);
+
+    return (
+        <ThemeProvider theme={theme}>
+            <BackButton/>
+            <StyledBox>
+                <Typography variant={"h2"}> וועדי דיירים </Typography>
+                <TableContainer component={Paper} sx={{width:'90%' ,maxHeight: 400, height:800 }}>
+                    <Table stickyHeader  sx={{minWidth: 500}} aria-label="custom pagination table">
+                        <TableHead>
+                            <TableRow>
+                                <TableCell sx={{width: 5}}/>
+                                <TableCell align="right" sx={{width: '20%'}}>שם הוועד</TableCell>
+                                <TableCell align="right" sx={{width: '20%'}}>שם מהל הוועד</TableCell>
+                                <TableCell align="right">מס' טלפון מנהל הוועד</TableCell>
+                            </TableRow>
+                        </TableHead>
+                        <TableBody>
+                            {(rowsPerPage > 0
+                                    ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
+                                    : rows
+                            ).map((row, i) => (
+                                <Row key={i} row={row}></Row>
+                            ))}
+                            {emptyRows > 0 && (
+                                <TableRow style={{height: 53 * emptyRows}}>
+                                    <TableCell colSpan={9999}/>
+                                </TableRow>
+                            )}
+                        </TableBody>
+                        <TableFooter>
+                            <TableRow>
+                                <TablePagination
+                                    rowsPerPageOptions={[5, 10, 25, {label: 'All', value: -1}]}
+                                    count={rows.length}
+                                    rowsPerPage={rowsPerPage}
+                                    page={page}
+                                    colSpan={9999}
+                                    slotProps={{
+                                        select: {
+                                            inputProps: {
+                                                'aria-label': 'rows per page',
+                                            },
+                                            native: true,
+                                        },
+                                    }}
+                                    onPageChange={handleChangePage}
+                                    onRowsPerPageChange={handleChangeRowsPerPage}
+                                    ActionsComponent={TablePaginationActions}
+                                />
+                            </TableRow>
+                        </TableFooter>
+                    </Table>
+                </TableContainer>
+            </StyledBox>
+        </ThemeProvider>
+    );
+}
diff --git a/migdalor_tenant/src/NotificationsProvider/NotificationsProvider.jsx b/migdalor_tenant/src/NotificationsProvider/NotificationsProvider.jsx
new file mode 100644
index 0000000..f408117
--- /dev/null
+++ b/migdalor_tenant/src/NotificationsProvider/NotificationsProvider.jsx
@@ -0,0 +1,59 @@
+import React, {createContext, useEffect, useState} from 'react'
+import {Snackbar} from "@mui/material";
+import { io } from "socket.io-client";
+
+export const NotificationCtx = createContext()
+
+const  NotificationProvider = ({ children }) => {
+    const [isVisible, setIsVisible] = useState(false)
+    const [message, setMessage] = useState('');
+    
+    const handleClose = ()=> setIsVisible(false);
+        useEffect(() => {
+            // Initialize WebSocket connection
+            const socket = new WebSocket('wss://localhost:7149/ws');
+
+            // Listen for messages
+            socket.onmessage = (event) => {
+                console.log('Message from server ', event.data);
+                setMessage(event.data);
+                setIsVisible(true)
+            };
+
+            // Error handling
+            socket.onerror = (error) => {
+                console.error('WebSocket Error: ', error);
+            };
+
+            // Handle connection open
+            socket.onopen = () => {
+                console.log('WebSocket connection established');
+            };
+
+            // Handle connection close
+            socket.onclose = () => {
+                console.log('WebSocket connection closed');
+            };
+
+            // Clean up WebSocket connection when the component unmounts
+            return () => {
+                socket.close();
+            };
+
+    }, []);
+
+
+    return (<NotificationCtx.Provider value={{setIsVisible}}>
+        {children}
+        {isVisible &&
+            <Snackbar
+                anchorOrigin={{vertical: 'top', horizontal:'right'}}
+                open={isVisible}
+                onClose={handleClose}
+                message={message}
+                key={'topRightNotification'}
+            />}
+    </NotificationCtx.Provider>)
+}
+
+export default NotificationProvider;
\ No newline at end of file
diff --git a/migdalor_tenant/src/Requests/Activities/ActivitiesRequests.jsx b/migdalor_tenant/src/Requests/Activities/ActivitiesRequests.jsx
new file mode 100644
index 0000000..d8bb490
--- /dev/null
+++ b/migdalor_tenant/src/Requests/Activities/ActivitiesRequests.jsx
@@ -0,0 +1,46 @@
+import axios from "axios";
+
+const BASE_URL = 'https://localhost:7149/'
+export const GetAllActivities = async () => {
+
+    const {data} = await axios.get(BASE_URL + 'api/Activity/GetAllActivities')
+    return data;
+}
+export const GetActivityById = async (id) => {
+
+    const {data} = await axios.get(`${BASE_URL}api/Activity/GetActivityById/${id}`)
+    return data;
+}
+export const GetActivitiesResidentParticipating = async (id) => {
+
+    const {data} = await axios.get(`${BASE_URL}api/Activity/GetActivitiesResidentParticipating/${id}`)
+    return data;
+}
+export const JoinActivity = async (activityNumber, residentNumber) => {
+
+    const {data} = await axios.post(`${BASE_URL}api/Activity/AddParticipantToActivity/`,
+        {
+            activityNumber,
+            residentNumber
+        })
+    return data;
+}
+export const GetParticiapntsInActivity = async (activityNumber) => {
+
+    const {data} = await axios.get(`${BASE_URL}api/Activity/GetParticiapntsInActivity/${activityNumber}`)
+    return data;
+}
+export const RemoveFromActivity = async (activityNumber, residentNumber) => {
+
+    const {data} = await axios.delete(`${BASE_URL}api/Activity/RemoveParticipantFromActivity`,
+        {
+            headers: {
+            },
+            data: {
+                activityNumber,
+                residentNumber
+            }
+        }
+       )
+    return data;
+}
\ No newline at end of file
diff --git a/migdalor_tenant/src/Requests/Committees/CommitteesRequests.jsx b/migdalor_tenant/src/Requests/Committees/CommitteesRequests.jsx
new file mode 100644
index 0000000..fc0c22c
--- /dev/null
+++ b/migdalor_tenant/src/Requests/Committees/CommitteesRequests.jsx
@@ -0,0 +1,10 @@
+import axios from "axios";
+
+const BASE_URL = 'https://localhost:7149/'
+export const getAllCommittees = async () => {
+
+    const {data} = await axios.get(BASE_URL + 'api/Committee/GetAllCommittees')
+    return data.map(({committee, residentManager})=> {
+        return {...committee,residentManager : residentManager}
+    })
+}
\ No newline at end of file
diff --git a/migdalor_tenant/src/Requests/Initatives/InitativesRequests.jsx b/migdalor_tenant/src/Requests/Initatives/InitativesRequests.jsx
new file mode 100644
index 0000000..474d52c
--- /dev/null
+++ b/migdalor_tenant/src/Requests/Initatives/InitativesRequests.jsx
@@ -0,0 +1,66 @@
+import axios from "axios";
+
+const BASE_URL = 'https://localhost:7149/'
+export const GetAllInitiatives = async () => {
+
+    const {data} = await axios.get(BASE_URL + 'api/Initiative/GetAllInitaitives')
+    return data;
+}
+export const GetInitiativeById = async (id) => {
+
+    const {data} = await axios.get(BASE_URL + `api/Initiative/GetInitiativeById/${id}`)
+    return data;
+}
+export const GetParticipantsInInitiative = async (id) => {
+
+    const {data} = await axios.get(BASE_URL + `api/Initiative/GetParticiapntsInInitiative/${id}`)
+    return data;
+}
+
+export const GetInitiativeResidentParticipating = async (id) => {
+
+    const {data} = await axios.get(`${BASE_URL}api/Initiative/GetInitiativeResidentParticipating/${id}`)
+    return data;
+}
+
+export const RemoveFromInitiative = async (initiativeNumber, residentNumber) => {
+
+    const {data} = await axios.delete(`${BASE_URL}api/Initiative/RemoveParticipantFromInitiative`,
+        {
+            headers: {
+            },
+            data: {
+                initiativeNumber,
+                residentNumber
+            }
+        }
+    )
+    return data;
+}
+
+export const JoinInitiative = async (initiativeNumber, residentNumber) => {
+
+    const {data} = await axios.post(`${BASE_URL}api/Initiative/AddParticipantToInitiative/`,
+        {
+            initiativeNumber,
+            residentNumber
+        })
+    return data;
+}
+
+export const CreatInitiative = async (initiative) => {
+    const {data} =  await axios.post(BASE_URL + 'api/Initiative/AddInitiative', initiative)
+    return data;
+}
+
+export const EditInitiative = async (initative) => {
+
+    const response = await axios.put(BASE_URL +'api/Initiative/EditInitiative', initative)
+    return response;
+
+}
+
+export const DeleteInitiative = async (initiativeNumber) => {
+    const response = await axios.delete(BASE_URL + 'api/Initiative/DeleteInitiative/' + initiativeNumber);
+    return response;
+}
\ No newline at end of file
diff --git a/migdalor_tenant/src/Requests/ObituaryRequests/ObituaryRequests.jsx b/migdalor_tenant/src/Requests/ObituaryRequests/ObituaryRequests.jsx
new file mode 100644
index 0000000..f576d82
--- /dev/null
+++ b/migdalor_tenant/src/Requests/ObituaryRequests/ObituaryRequests.jsx
@@ -0,0 +1,8 @@
+import axios from "axios";
+
+const BASE_URL = 'https://localhost:7149/'
+
+export const GetAllObituaries = async () => {
+    const {data} = await axios.get(BASE_URL+ 'api/Obituary/GetAllObituaries')
+    return data;
+}
\ No newline at end of file
diff --git a/migdalor_tenant/src/Requests/ResidentRequests/ResidentRequests.jsx b/migdalor_tenant/src/Requests/ResidentRequests/ResidentRequests.jsx
new file mode 100644
index 0000000..6bb1b20
--- /dev/null
+++ b/migdalor_tenant/src/Requests/ResidentRequests/ResidentRequests.jsx
@@ -0,0 +1,7 @@
+import axios from "axios";
+
+const BASE_URL = 'https://localhost:7149/';
+
+export const EditResidentDetails = async (residentDetails)=>{
+    await   axios.put(BASE_URL+'api/Resident/EditResident', residentDetails);
+}
\ No newline at end of file
diff --git a/migdalor_tenant/src/Theme/Theme.jsx b/migdalor_tenant/src/Theme/Theme.jsx
index 1566352..314e80c 100644
--- a/migdalor_tenant/src/Theme/Theme.jsx
+++ b/migdalor_tenant/src/Theme/Theme.jsx
@@ -8,10 +8,15 @@ const theme = createTheme({
         secondary:
             {
                 main: '#BEA029'
-            }
-
-
+            },
+        ochre: {
+            main: '#E3D026',
+            light: '#E9DB5D',
+            dark: '#A29415',
+            contrastText: '#242105',
+        },
     },
+
     typography: {
         h1: {
             color:'#F6F2E2',
@@ -22,6 +27,8 @@ const theme = createTheme({
             color:'#F6F2E2',
             fontSize: "1.75rem",
             fontWeight: 600,
+            fontFamily: "sans-serif"
+
         },
         h3: {
             color:'#F6F2E2',
